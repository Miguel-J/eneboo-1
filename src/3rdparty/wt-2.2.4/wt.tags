<?xml version='1.0' encoding='ISO-8859-1' standalone='yes' ?>
<tagfile>
  <compound kind="page">
    <name>index</name>
    <title>Wt documentation.</title>
    <filename>index</filename>
  </compound>
  <compound kind="file">
    <name>WApplication</name>
    <path>/home/koen/project/wt/cvs/wt/src/Wt/</path>
    <filename>WApplication</filename>
    <namespace>Wt</namespace>
    <namespace>Wt::Ext</namespace>
    <class kind="class">Wt::WApplication</class>
    <class kind="class">Wt::WApplication::UpdateLock</class>
    <member kind="define">
      <type>#define</type>
      <name>wApp</name>
      <anchorfile>WApplication.html</anchorfile>
      <anchor>3bfcc9dbddda7ddb50ac1c4ca78c7597</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>overview</name>
    <title>Library overview</title>
    <filename>overview</filename>
    <docanchor file="overview">error_sec</docanchor>
    <docanchor file="overview">config_session</docanchor>
    <docanchor file="overview">containers</docanchor>
    <docanchor file="overview">sec_painting</docanchor>
    <docanchor file="overview">urls_sec</docanchor>
    <docanchor file="overview">config_wthttpd</docanchor>
    <docanchor file="overview">contents</docanchor>
    <docanchor file="overview">wthttpd</docanchor>
    <docanchor file="overview">eventhandling</docanchor>
    <docanchor file="overview">config_general</docanchor>
    <docanchor file="overview">signal_slot</docanchor>
    <docanchor file="overview">wwidget_sec</docanchor>
    <docanchor file="overview">config_fastcgi</docanchor>
    <docanchor file="overview">deployment</docanchor>
    <docanchor file="overview">fastcgi</docanchor>
    <docanchor file="overview">application_sec</docanchor>
    <docanchor file="overview">style</docanchor>
    <docanchor file="overview">layout</docanchor>
    <docanchor file="overview">configuration_sec</docanchor>
  </compound>
  <compound kind="page">
    <name>example</name>
    <title>Treelist example</title>
    <filename>example</filename>
    <docanchor file="example">treenode_sec</docanchor>
    <docanchor file="example">stateicon_sec</docanchor>
  </compound>
  <compound kind="page">
    <name>Installation</name>
    <title></title>
    <filename>Installation</filename>
  </compound>
  <compound kind="page">
    <name>Releasenotes</name>
    <title></title>
    <filename>Releasenotes</filename>
  </compound>
  <compound kind="group">
    <name>charts</name>
    <title>Chart library</title>
    <filename>group__charts.html</filename>
    <class kind="class">Wt::Chart::WAbstractChart</class>
    <class kind="class">Wt::Chart::WAxis</class>
    <class kind="class">Wt::Chart::WCartesianChart</class>
    <class kind="class">Wt::Chart::SeriesIterator</class>
    <class kind="class">Wt::Chart::WChart2DRenderer</class>
    <class kind="class">Wt::Chart::WChartPalette</class>
    <class kind="class">Wt::Chart::WDataSeries</class>
    <class kind="class">Wt::Chart::WPieChart</class>
    <class kind="class">Wt::Chart::WStandardPalette</class>
    <member kind="enumeration">
      <name>Axis</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gddb678f67fbd9f374fcee0922f158c9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XAxis</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggddb678f67fbd9f374fcee0922f158c9f2a592919e6cbd94bf09e1259559499b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YAxis</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggddb678f67fbd9f374fcee0922f158c9f2e1017fdef77b4663715c3d7663a4db4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Y1Axis</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggddb678f67fbd9f374fcee0922f158c9f4905c14eb8a164e00e48b41cfaf6f070</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Y2Axis</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggddb678f67fbd9f374fcee0922f158c9fdbfcf55c246aa3a385974a185f4220e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OrdinateAxis</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggddb678f67fbd9f374fcee0922f158c9fe8797459bbc3e1eaba438ab4d10c0352</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>AxisLocation</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>g3eee2e1c5d7088c776abf22471f14133</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MinimumValue</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg3eee2e1c5d7088c776abf22471f14133da8601e8f3630aec7d16b6d4177d4986</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MaximumValue</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg3eee2e1c5d7088c776abf22471f14133f9110e09430355ab81d579be51ac73cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZeroValue</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg3eee2e1c5d7088c776abf22471f14133f2e58ce3483a5ec496f65fb808ce72b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>AxisScale</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gdfcaed8cd6ff52f5747f7df48f2eeab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CategoryScale</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggdfcaed8cd6ff52f5747f7df48f2eeab6a9b1356757a7b0935c3302c32798ef14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LinearScale</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggdfcaed8cd6ff52f5747f7df48f2eeab6d1c254fd10596e2565b32fd6f5967094</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LogScale</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggdfcaed8cd6ff52f5747f7df48f2eeab6fba90921c9efb6c5131cdb1590bfa406</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DateScale</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggdfcaed8cd6ff52f5747f7df48f2eeab6aa627030efa552170a889d7a80a65a12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ChartType</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>g8d63464f873580c77508e1c0c26cbfea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CategoryChart</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg8d63464f873580c77508e1c0c26cbfeaebfd9bd11d1126f2db7ff891c04c29f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ScatterPlot</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg8d63464f873580c77508e1c0c26cbfea6ddab43d32242eb28831938a1e469a1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SeriesType</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>g44d64e4a9d08c7ef69648f4a9c3e4053</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PointSeries</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg44d64e4a9d08c7ef69648f4a9c3e40536a8b53e7bfdec77f9df5e82aaf0061e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LineSeries</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg44d64e4a9d08c7ef69648f4a9c3e40532582c20d00d806d8a175e2f5c0207591</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CurveSeries</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg44d64e4a9d08c7ef69648f4a9c3e4053805880e23c0292fb7a66b2cda2a2f5bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BarSeries</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg44d64e4a9d08c7ef69648f4a9c3e40536751dbd7ed4600a4befa967107a6dde8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>MarkerType</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>g9f38f3460fb2575d5f4f1a1ac51a7db6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoMarker</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg9f38f3460fb2575d5f4f1a1ac51a7db6aab531f4ceaaa1893f854f4b1262636d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SquareMarker</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg9f38f3460fb2575d5f4f1a1ac51a7db64250deb876978d5f5c3be4cc6aad8267</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CircleMarker</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg9f38f3460fb2575d5f4f1a1ac51a7db6c14cc4eaec28c9ab096fbf7efead2660</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CrossMarker</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg9f38f3460fb2575d5f4f1a1ac51a7db6003214a00943a828becc1beb54956e80</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XCrossMarker</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg9f38f3460fb2575d5f4f1a1ac51a7db64a718fdd73e4bcdc700495eb549dc386</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TriangleMarker</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg9f38f3460fb2575d5f4f1a1ac51a7db6e7ee432c7bf8189deaa453af4d14182b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>FillRangeType</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>g7236e5b04bdb6f393162842982b4d1a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoFill</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg7236e5b04bdb6f393162842982b4d1a0d0c1c31f7f41394c2fd5444edc340972</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MinimumValueFill</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg7236e5b04bdb6f393162842982b4d1a01eb3ca7c63430bd56544b9e3b962c6cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MaximumValueFill</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg7236e5b04bdb6f393162842982b4d1a0a321337f9f9a4d56fb1d2cafe0f359b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZeroValueFill</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg7236e5b04bdb6f393162842982b4d1a050b16db97a187f9acccdbeecf8732ff0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LabelOptions</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>g50df49138691f26d87067f4da32e2432</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoLabels</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg50df49138691f26d87067f4da32e2432866d745e727785c20e31d5ea76bb58a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Inside</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg50df49138691f26d87067f4da32e2432eb92488c13b0ccc46cddbb3445007443</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Outside</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg50df49138691f26d87067f4da32e243288861128e109b6a63e76a311dc57e408</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TextLabel</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg50df49138691f26d87067f4da32e243260df9add81425373c20fafe8c4e40b0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TextPercentage</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg50df49138691f26d87067f4da32e2432307741727c5ef5e33efcd347a0853e50</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>ext</name>
    <title>Ext widgets</title>
    <filename>group__ext.html</filename>
    <class kind="class">Wt::Ext::AbstractButton</class>
    <class kind="class">Wt::Ext::AbstractToggleButton</class>
    <class kind="class">Wt::Ext::Button</class>
    <class kind="class">Wt::Ext::Calendar</class>
    <class kind="class">Wt::Ext::CheckBox</class>
    <class kind="class">Wt::Ext::ComboBox</class>
    <class kind="class">Wt::Ext::Component</class>
    <class kind="class">Wt::Ext::DataStore</class>
    <class kind="class">Wt::Ext::DateField</class>
    <class kind="class">Wt::Ext::Dialog</class>
    <class kind="class">Wt::Ext::FormField</class>
    <class kind="class">Wt::Ext::LineEdit</class>
    <class kind="class">Wt::Ext::Menu</class>
    <class kind="class">Wt::Ext::MenuItem</class>
    <class kind="class">Wt::Ext::MessageBox</class>
    <class kind="class">Wt::Ext::NumberField</class>
    <class kind="class">Wt::Ext::PagingToolBar</class>
    <class kind="class">Wt::Ext::Panel</class>
    <class kind="class">Wt::Ext::ProgressDialog</class>
    <class kind="class">Wt::Ext::RadioButton</class>
    <class kind="class">Wt::Ext::Splitter</class>
    <class kind="class">Wt::Ext::SplitterHandle</class>
    <class kind="class">Wt::Ext::TableView</class>
    <class kind="class">Wt::Ext::TabWidget</class>
    <class kind="class">Wt::Ext::TextEdit</class>
    <class kind="class">Wt::Ext::ToolBar</class>
    <class kind="class">Wt::Ext::ToolTipConfig</class>
    <class kind="class">Wt::Ext::Widget</class>
    <member kind="enumeration">
      <name>DataLocation</name>
      <anchorfile>group__ext.html</anchorfile>
      <anchor>g5bc908c6e6aa90646cca1276d68cb2b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ClientSide</name>
      <anchorfile>group__ext.html</anchorfile>
      <anchor>gg5bc908c6e6aa90646cca1276d68cb2b219099959db2ef813b3d1a1e2f3e04675</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ServerSide</name>
      <anchorfile>group__ext.html</anchorfile>
      <anchor>gg5bc908c6e6aa90646cca1276d68cb2b21ae210985e4d5795a6aa21ed8871dfe7</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="group__ext">moh</docanchor>
    <docanchor file="group__ext">bla</docanchor>
  </compound>
  <compound kind="group">
    <name>style</name>
    <title>Style classes</title>
    <filename>group__style.html</filename>
    <class kind="class">Wt::WBorder</class>
    <class kind="class">Wt::WColor</class>
    <class kind="class">Wt::WCssDecorationStyle</class>
    <class kind="class">Wt::WCssRule</class>
    <class kind="class">Wt::WCssTemplateRule</class>
    <class kind="class">Wt::WCssTextRule</class>
    <class kind="class">Wt::WCssStyleSheet</class>
    <class kind="class">Wt::WFont</class>
    <member kind="enumeration">
      <name>GlobalColor</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>g9686ea88ce4db2c0a12ea84452f60133</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>white</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f60133a8fbe7a33681fc09e0231d6dfbd90d66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>black</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f60133cf5dee884803e93b444f8bd222956bd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>red</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f6013357462cb05392ee7e39d27e5f66252c42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>darkRed</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f601339a39ff0e1a5aa34a2e69407f8895eb4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>green</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f601339de61f6576b0207b4d5c988cbeee1b8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>darkGreen</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f6013375712f6d7896b12273323acd21b28d7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>blue</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f601330cb88ce2189a8986f24a4409498e490e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>darkBlue</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f601338d8dd4dab4ab7688946bfcdfcb468b8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>cyan</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f6013352646bf8927d2018adec6814a2f903b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>darkCyan</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f60133fb298721c24d10cd3d47c5c8efec0042</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>magenta</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f60133434a521950245ccd5041ef2d74b04fe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>darkMagenta</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f60133b18a96d57e7cdcf8a986c4f112f5d18d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>yellow</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f60133e0950d4b5d4c4c9b98e3aa7334bda80a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>darkYellow</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f601337621702d04fd8d039e1a3230a8e7b2e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gray</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f601332ae20330b5a9eb890119be5074615858</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>darkGray</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f60133efe4fd296d57518c9566b524215f66ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>lightGray</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f60133e3718148b44536034789bc88ba71564c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>transparent</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f601336975fc5993d75cf4e71f097b548927a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>modelview</name>
    <title>Model/view system</title>
    <filename>group__modelview.html</filename>
    <class kind="class">Wt::Ext::ComboBox</class>
    <class kind="class">Wt::WAbstractItemModel</class>
    <class kind="class">Wt::WAbstractListModel</class>
    <class kind="class">Wt::WAbstractProxyModel</class>
    <class kind="class">Wt::WComboBox</class>
    <class kind="class">Wt::WItemSelectionModel</class>
    <class kind="class">Wt::WModelIndex</class>
    <class kind="class">Wt::WSelectionBox</class>
    <class kind="class">Wt::WSortFilterProxyModel</class>
    <class kind="class">Wt::WStandardItem</class>
    <class kind="class">Wt::WStandardItemModel</class>
    <class kind="class">Wt::WStringListModel</class>
    <class kind="class">Wt::WTreeView</class>
    <member kind="enumeration">
      <name>MatchFlags</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gf556e096021fe68e0188c5589687feb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchExactly</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggf556e096021fe68e0188c5589687feb97b0e63f3888f29b33a722dade0f2bfe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchStringExactly</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggf556e096021fe68e0188c5589687feb9c2dc009d041fc6e24084ed6be94a9747</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchStartsWith</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggf556e096021fe68e0188c5589687feb9af45aa78ff6ae362f112fa1988104730</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchEndsWith</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggf556e096021fe68e0188c5589687feb90b444585cace7576dda80036805d93bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchRegExp</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggf556e096021fe68e0188c5589687feb9801be4d30b88ade43408a788cef7b6ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchWildCard</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggf556e096021fe68e0188c5589687feb9e7967680e21f7dae7b603a1f1c5bf44a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchCaseSensitive</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggf556e096021fe68e0188c5589687feb972ef48ecccae23d56c8a5bbeb400568d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchWrap</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggf556e096021fe68e0188c5589687feb92e90a2f383a7da7e73e8f498e3f2faf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ItemDataRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>g0ae864e12320f9f89172735e075ed068</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DisplayRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg0ae864e12320f9f89172735e075ed0685ed17aded8a0e3b712698cf85a218f1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DecorationRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg0ae864e12320f9f89172735e075ed068ab6678fc176854f7990d6cff4eed779e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EditRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg0ae864e12320f9f89172735e075ed0686bc0da3ea683a06ee293a5a15f903cde</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StyleClassRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg0ae864e12320f9f89172735e075ed068776934b313f273b8e5e602e7eee9f73b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CheckStateRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg0ae864e12320f9f89172735e075ed068ad55e3ad8d7b76279adfc160bcb74940</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ToolTipRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg0ae864e12320f9f89172735e075ed068bde5f65c6b5cab667d11d1ceb87e4606</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InternalPathRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg0ae864e12320f9f89172735e075ed0682f954b164f69cf17133993d15f25f8e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UrlRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg0ae864e12320f9f89172735e075ed06837c19d2357fb1de30464a0fde4cb5395</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UserRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg0ae864e12320f9f89172735e075ed0689b7eae9fc07ea4fd8afe7bc97954162c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ItemFlag</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>g1d77c4de293aebfacbdde124de06b8b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ItemIsSelectable</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg1d77c4de293aebfacbdde124de06b8b077f858c86a06358abdcc64e4f9d03e40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ItemIsEditable</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg1d77c4de293aebfacbdde124de06b8b08664c482d721bbcb73539a924c7a9fab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ItemIsUserCheckable</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg1d77c4de293aebfacbdde124de06b8b0f309bd7d1183d934c73aefb2830e591c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ItemIsDragEnabled</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg1d77c4de293aebfacbdde124de06b8b02b0edddfd15d67a84723c9043479ced1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ItemIsDropEnabled</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg1d77c4de293aebfacbdde124de06b8b095d23063251001545d4bfab1308879a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SortOrder</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>g4173856040cf108a9c7360927a43ebac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AscendingOrder</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg4173856040cf108a9c7360927a43ebacc2e51e9fbb9a1250c908443700e03d3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DescendingOrder</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg4173856040cf108a9c7360927a43ebacaca46a90a3bf0912bf035a380722c9f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>DropAction</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gca801bdfb957c360c5f8709cc46949aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CopyAction</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggca801bdfb957c360c5f8709cc46949aa153a9813fd5eb77e31695657ac9cfb68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MoveAction</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggca801bdfb957c360c5f8709cc46949aa3f0ed7a05e822a2623d65f15e573bc73</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>painting</name>
    <title>Painting system</title>
    <filename>group__painting.html</filename>
    <class kind="class">Wt::WBrush</class>
    <class kind="class">Wt::WCanvasPaintDevice</class>
    <class kind="class">Wt::WColor</class>
    <class kind="class">Wt::WFont</class>
    <class kind="class">Wt::WLineF</class>
    <class kind="class">Wt::WPaintDevice</class>
    <class kind="class">Wt::WPaintedWidget</class>
    <class kind="class">Wt::WPainter</class>
    <class kind="class">Wt::WPainterPath</class>
    <class kind="class">Wt::WPen</class>
    <class kind="class">Wt::WPointF</class>
    <class kind="class">Wt::WRectF</class>
    <class kind="class">Wt::WSvgImage</class>
    <class kind="class">Wt::WTransform</class>
    <class kind="class">Wt::WVmlImage</class>
    <member kind="enumeration">
      <name>WBrushStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gffe43936b1bbb1ca2b308572fcdeb157</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoBrush</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggffe43936b1bbb1ca2b308572fcdeb157a6f513232fadbbcaf8a576b7aaefc67a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SolidPattern</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggffe43936b1bbb1ca2b308572fcdeb157574469ed16523a26c683e83c8fee3ed6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PenStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gb70170afb6347d18ff9dac17e05e133e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoPen</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggb70170afb6347d18ff9dac17e05e133ea8125e799a1289cd6dd0b2595a496a82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SolidLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggb70170afb6347d18ff9dac17e05e133ec1888b9cee513c2bf98c6fb9f4e307ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggb70170afb6347d18ff9dac17e05e133e7667698a6fb5adbf8f128519cbb93af8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DotLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggb70170afb6347d18ff9dac17e05e133e26ade9ba6072abfcef185cca70227d15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggb70170afb6347d18ff9dac17e05e133e45cac3164febb16cf7028403e01077a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotDotLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggb70170afb6347d18ff9dac17e05e133e758c17a422e91d2e497f15054123e302</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PenCapStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>g819ef9a03fb79c9834508b79eac604f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FlatCap</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gg819ef9a03fb79c9834508b79eac604f2394700c2ab47fe2b23564ced1c1e129a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SquareCap</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gg819ef9a03fb79c9834508b79eac604f239a378820d5058a3677f9852c5783783</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RoundCap</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gg819ef9a03fb79c9834508b79eac604f23d1c8a630cb15cec7b33434d9564182a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PenJoinStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gaf495faaba3ae03366a1646a4b5526be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MiterJoin</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggaf495faaba3ae03366a1646a4b5526bed2f7df311a138e580c95d728b0128004</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BevelJoin</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggaf495faaba3ae03366a1646a4b5526be9550acce5f4da6e134f34392d7b072ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RoundJoin</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggaf495faaba3ae03366a1646a4b5526be3be2fdf749560b7229b3472d8ff6ad12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>signalslot</name>
    <title>Signal/slot system</title>
    <filename>group__signalslot.html</filename>
    <class kind="class">Wt::WMouseEvent</class>
    <class kind="class">Wt::WKeyEvent</class>
    <class kind="class">Wt::WDropEvent</class>
    <class kind="class">Wt::WScrollEvent</class>
    <class kind="class">Wt::JSignal</class>
    <class kind="class">Wt::JSlot</class>
    <class kind="class">Wt::WObject</class>
    <class kind="class">Wt::Signal</class>
    <class kind="class">Wt::EventSignal</class>
    <class kind="class">Wt::WSignalMapper</class>
    <member kind="enumeration">
      <name>KeyboardModifier</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>g50f91169486bada5931f3adc3a623091</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoModifier</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg50f91169486bada5931f3adc3a6230917c97a6a0da658c8b189acea1f4c0e252</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ShiftModifier</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg50f91169486bada5931f3adc3a623091206924f86e7455d5d88c30a1d61899b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ControlModifier</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg50f91169486bada5931f3adc3a623091da8f2dab72c395e56d897b769f6d0050</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AltModifier</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg50f91169486bada5931f3adc3a623091f3044546ac4679d9259be8332cca0dd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MetaModifier</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg50f91169486bada5931f3adc3a62309173abfeaa5bbd55ab4f28fabf3d134720</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Key</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>g34e65660d30e69c56aa636a8856aa52d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_unknown</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d3b769e7e817ab438b6341fb15598aa2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Enter</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52db3c8e06184697e8b55705ec6e92ef57a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Tab</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d15a17a0b9c7794f1e212bb209f9a6b1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Backspace</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d9b6c475089ff4ecea25ba729d4c6a771</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Shift</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d4daba0b20a0d45ae1265acf9233bf9b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Control</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d7faac129eabb364618c2f147775dddd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Alt</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d78df9bb6a131c160d5d7850aebbe2399</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_PageUp</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52db5764176c1fbc5b3058e545708bc2c7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_PageDown</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d67fdcf0a21fa225f138ae7eff5dc5d02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_End</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d52f767d967e30a4ef2b87375b58c3758</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Home</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d77efa77ae9e1a0d0da90a6da05978f3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Left</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52de67dc2b36f94673c36614c36a22c86a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Up</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d292b7bad0c08eca53003b16887dbbfa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Right</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d36408ed64c87279baf6752a718f1d867</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Down</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d81ce19fbff7cd5e33d311df5dc036b7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Insert</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d1b9d45e03463b8ce85e77072ee3ca7aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Delete</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d0974cc95023b3b3fcc89bed74ec4b820</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Escape</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d6fdfa052fee9a0ecad21a8ef29fc4a5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F1</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d2efc2110e512a5001b8ce6d58d940f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F2</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d7014a077073ead5bde183b3cbf4e8193</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F3</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d45c3287676adbc30f53facff89fd5001</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F4</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d444fd761aef07334c7bfbb59c1eb49a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F5</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d8ba749e5623684d7f908b5516eb474f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F6</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52dcc96e9d1ed8d5e11bac5d68623151694</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F7</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d124e3d34f1a696e33027fe48c003055e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F8</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d4e8fafdcba3de0933febe02c13e81a71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F9</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52de8d582832595b29a69a0a26a19b3cf53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F10</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d971d948e3abff0d42f8aa9409de16531</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F11</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d4dfdaa48520aa89b9f9b9caf7e31e9a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F12</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d9e048d50a8cc62e258572f8abe8d2412</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Space</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d5ec86a768d9ba285b2143df9977b5239</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_A</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d8eed1379a2c85aa3132f7f3170f95ea8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_B</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d069dbddc7a4b464624bba14f13c2084a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_C</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52dfddfb22114bd3d90f0ddb1c65feb3516</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_D</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52de1a302cbded84b1202a5107c808ed740</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_E</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52de454998d6c5ac2d5f7f6c91f0df2c71b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d098250f2140b5e2fb5b46e0ce5f10af5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_G</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d41e1288722f2b2f160aa81c28eccc4f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_H</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d716d8d1ef8dfd3aac7dbcead493127b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_I</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52dd927cec36329c7d65d751a8f031a249f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_J</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d59bef2a0589454049c2565648a6693ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_K</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52defbef7cec0c75b7fc2a53f573894b109</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_L</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d1e4f578cb8fb4a9319525b7a6af32eee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_M</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d88915645dbc4db17dfe3308fb65e9127</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_N</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d27d96fcd466dd0bdc867348ef07c0460</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_O</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d835039108055255d92e72f6ea9eca896</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_P</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52df681b38469fcc9b26a2866db5007fb46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Q</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d19771f87de22387fb76a417ae9b3ce89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_R</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d3ae47d7bd97b735e27c873c17d08e740</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_S</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d386061206cf7e0886720025eb2d152de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_T</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d468cd3a60da863a3e5c80c739c3ff789</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_U</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d65cc1a8b2bd95606398560bab5309e7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_V</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52df64151895196cf7907e5274d297bd65a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_W</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52de4d913efd09ed5ba93e8e73d636e350a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_X</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d606e38f4f386d7bafd43c04d0d6a8d6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Y</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d80f28601fb3b74843eb22f9f0381f076</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Z</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d2b51e784d1e7228464fde06b4d37f6ad</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Wt</name>
    <filename>namespaceWt.html</filename>
    <class kind="class">Wt::WAbstractArea</class>
    <class kind="class">Wt::WAbstractItemModel</class>
    <class kind="class">Wt::WAbstractListModel</class>
    <class kind="class">Wt::WAbstractProxyModel</class>
    <class kind="class">Wt::WAbstractToggleButton</class>
    <class kind="class">Wt::WAccordionLayout</class>
    <class kind="class">Wt::WAnchor</class>
    <class kind="class">Wt::WApplication</class>
    <class kind="class">Wt::WBorder</class>
    <class kind="class">Wt::WBorderLayout</class>
    <class kind="class">Wt::WBoxLayout</class>
    <class kind="class">Wt::WBreak</class>
    <class kind="class">Wt::WBrush</class>
    <class kind="class">Wt::WButtonGroup</class>
    <class kind="class">Wt::WCalendar</class>
    <class kind="class">Wt::WCanvasPaintDevice</class>
    <class kind="class">Wt::WCheckBox</class>
    <class kind="class">Wt::WCircleArea</class>
    <class kind="class">Wt::WColor</class>
    <class kind="class">Wt::WComboBox</class>
    <class kind="class">Wt::WCompositeWidget</class>
    <class kind="class">Wt::WContainerWidget</class>
    <class kind="class">Wt::WCssDecorationStyle</class>
    <class kind="class">Wt::WCssRule</class>
    <class kind="class">Wt::WCssTemplateRule</class>
    <class kind="class">Wt::WCssTextRule</class>
    <class kind="class">Wt::WCssStyleSheet</class>
    <class kind="class">Wt::InvalidDateException</class>
    <class kind="class">Wt::WDate</class>
    <class kind="class">Wt::WDatePicker</class>
    <class kind="class">Wt::WDateValidator</class>
    <class kind="class">Wt::WDefaultLayout</class>
    <class kind="class">Wt::WDefaultLoadingIndicator</class>
    <class kind="class">Wt::WDialog</class>
    <class kind="class">Wt::WDoubleValidator</class>
    <class kind="class">Wt::WEnvironment</class>
    <class kind="class">Wt::WMouseEvent</class>
    <class kind="class">Wt::WKeyEvent</class>
    <class kind="class">Wt::WDropEvent</class>
    <class kind="class">Wt::WScrollEvent</class>
    <class kind="class">Wt::WFileResource</class>
    <class kind="class">Wt::WFileUpload</class>
    <class kind="class">Wt::WFitLayout</class>
    <class kind="class">Wt::WFont</class>
    <class kind="class">Wt::WFormWidget</class>
    <class kind="class">Wt::WGridLayout</class>
    <class kind="class">Wt::WGroupBox</class>
    <class kind="class">Wt::WHBoxLayout</class>
    <class kind="class">Wt::WIconPair</class>
    <class kind="class">Wt::WImage</class>
    <class kind="class">Wt::WInPlaceEdit</class>
    <class kind="class">Wt::WInteractWidget</class>
    <class kind="class">Wt::WIntValidator</class>
    <class kind="class">Wt::WItemSelectionModel</class>
    <class kind="class">Wt::JSignal</class>
    <class kind="class">Wt::JSlot</class>
    <class kind="class">Wt::WLabel</class>
    <class kind="class">Wt::WLayout</class>
    <class kind="class">Wt::WLayoutItem</class>
    <class kind="class">Wt::WLayoutItemImpl</class>
    <class kind="class">Wt::WLength</class>
    <class kind="class">Wt::WLengthValidator</class>
    <class kind="class">Wt::WLineEdit</class>
    <class kind="class">Wt::WLineF</class>
    <class kind="class">Wt::WLoadingIndicator</class>
    <class kind="class">Wt::WLocalizedStrings</class>
    <class kind="class">Wt::WLogger</class>
    <class kind="class">Wt::WLogEntry</class>
    <class kind="class">Wt::WMemoryResource</class>
    <class kind="class">Wt::WMenu</class>
    <class kind="class">Wt::WMenuItem</class>
    <class kind="class">Wt::WMessageBox</class>
    <class kind="class">Wt::WMessageResourceBundle</class>
    <class kind="class">Wt::WModelIndex</class>
    <class kind="class">Wt::WObject</class>
    <class kind="class">Wt::WOverlayLoadingIndicator</class>
    <class kind="class">Wt::WPaintDevice</class>
    <class kind="class">Wt::WPaintedWidget</class>
    <class kind="class">Wt::WPainter</class>
    <class kind="class">Wt::WPainterPath</class>
    <class kind="class">Wt::WPanel</class>
    <class kind="class">Wt::WPen</class>
    <class kind="class">Wt::WPoint</class>
    <class kind="class">Wt::WPointF</class>
    <class kind="class">Wt::WPolygonArea</class>
    <class kind="class">Wt::WPopupMenu</class>
    <class kind="class">Wt::WPopupMenuItem</class>
    <class kind="class">Wt::WPushButton</class>
    <class kind="class">Wt::WRadioButton</class>
    <class kind="class">Wt::WRectArea</class>
    <class kind="class">Wt::WRectF</class>
    <class kind="class">Wt::WRegExpValidator</class>
    <class kind="class">Wt::WResource</class>
    <class kind="class">Wt::WScrollArea</class>
    <class kind="class">Wt::WScrollBar</class>
    <class kind="class">Wt::WSelectionBox</class>
    <class kind="class">Wt::WServer</class>
    <class kind="class">Wt::Signal</class>
    <class kind="class">Wt::EventSignal</class>
    <class kind="class">Wt::WSignalMapper</class>
    <class kind="class">Wt::WSlider</class>
    <class kind="class">Wt::WSocketNotifier</class>
    <class kind="class">Wt::WSortFilterProxyModel</class>
    <class kind="class">Wt::WStackedWidget</class>
    <class kind="class">Wt::WStandardItem</class>
    <class kind="class">Wt::WStandardItemModel</class>
    <class kind="class">Wt::WString</class>
    <class kind="class">Wt::WStringListModel</class>
    <class kind="class">Wt::WSubMenuItem</class>
    <class kind="class">Wt::WSuggestionPopup</class>
    <class kind="class">Wt::WSvgImage</class>
    <class kind="class">Wt::WTable</class>
    <class kind="class">Wt::WTableCell</class>
    <class kind="class">Wt::WTableColumn</class>
    <class kind="class">Wt::WTableRow</class>
    <class kind="class">Wt::WTabWidget</class>
    <class kind="class">Wt::WText</class>
    <class kind="class">Wt::WTextArea</class>
    <class kind="class">Wt::WTextEdit</class>
    <class kind="class">Wt::WTimer</class>
    <class kind="class">Wt::WTransform</class>
    <class kind="class">Wt::WTree</class>
    <class kind="class">Wt::WTreeNode</class>
    <class kind="class">Wt::WTreeTable</class>
    <class kind="class">Wt::WTreeTableNode</class>
    <class kind="class">Wt::WTreeView</class>
    <class kind="class">Wt::WValidationStatus</class>
    <class kind="class">Wt::WValidator</class>
    <class kind="class">Wt::WVBoxLayout</class>
    <class kind="class">Wt::WVectorImage</class>
    <class kind="class">Wt::WViewWidget</class>
    <class kind="class">Wt::WStaticModelView</class>
    <class kind="class">Wt::WVirtualImage</class>
    <class kind="class">Wt::WVmlImage</class>
    <class kind="class">Wt::WWebWidget</class>
    <class kind="class">Wt::WWidget</class>
    <class kind="class">Wt::WWidgetItem</class>
    <namespace>Wt::Chart</namespace>
    <namespace>Wt::Ext</namespace>
    <namespace>Wt::Sha1</namespace>
    <member kind="enumeration">
      <name>MatchFlags</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gf556e096021fe68e0188c5589687feb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchExactly</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggf556e096021fe68e0188c5589687feb97b0e63f3888f29b33a722dade0f2bfe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchStringExactly</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggf556e096021fe68e0188c5589687feb9c2dc009d041fc6e24084ed6be94a9747</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchStartsWith</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggf556e096021fe68e0188c5589687feb9af45aa78ff6ae362f112fa1988104730</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchEndsWith</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggf556e096021fe68e0188c5589687feb90b444585cace7576dda80036805d93bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchRegExp</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggf556e096021fe68e0188c5589687feb9801be4d30b88ade43408a788cef7b6ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchWildCard</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggf556e096021fe68e0188c5589687feb9e7967680e21f7dae7b603a1f1c5bf44a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchCaseSensitive</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggf556e096021fe68e0188c5589687feb972ef48ecccae23d56c8a5bbeb400568d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchWrap</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggf556e096021fe68e0188c5589687feb92e90a2f383a7da7e73e8f498e3f2faf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>AnchorTarget</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>6c93a6e97016801a310275457e43f333</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TargetSelf</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>6c93a6e97016801a310275457e43f333e976883723836b4423d81ecf590bde0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TargetThisWindow</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>6c93a6e97016801a310275457e43f333d4da0533d8114dc867406f18fef5bcce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TargetNewWindow</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>6c93a6e97016801a310275457e43f33395e5b4e8a2eed99252fc0eb2bb483cd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>WBrushStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gffe43936b1bbb1ca2b308572fcdeb157</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoBrush</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggffe43936b1bbb1ca2b308572fcdeb157a6f513232fadbbcaf8a576b7aaefc67a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SolidPattern</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggffe43936b1bbb1ca2b308572fcdeb157574469ed16523a26c683e83c8fee3ed6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>GlobalColor</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>g9686ea88ce4db2c0a12ea84452f60133</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>white</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f60133a8fbe7a33681fc09e0231d6dfbd90d66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>black</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f60133cf5dee884803e93b444f8bd222956bd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>red</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f6013357462cb05392ee7e39d27e5f66252c42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>darkRed</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f601339a39ff0e1a5aa34a2e69407f8895eb4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>green</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f601339de61f6576b0207b4d5c988cbeee1b8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>darkGreen</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f6013375712f6d7896b12273323acd21b28d7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>blue</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f601330cb88ce2189a8986f24a4409498e490e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>darkBlue</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f601338d8dd4dab4ab7688946bfcdfcb468b8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>cyan</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f6013352646bf8927d2018adec6814a2f903b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>darkCyan</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f60133fb298721c24d10cd3d47c5c8efec0042</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>magenta</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f60133434a521950245ccd5041ef2d74b04fe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>darkMagenta</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f60133b18a96d57e7cdcf8a986c4f112f5d18d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>yellow</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f60133e0950d4b5d4c4c9b98e3aa7334bda80a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>darkYellow</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f601337621702d04fd8d039e1a3230a8e7b2e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gray</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f601332ae20330b5a9eb890119be5074615858</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>darkGray</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f60133efe4fd296d57518c9566b524215f66ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>lightGray</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f60133e3718148b44536034789bc88ba71564c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>transparent</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gg9686ea88ce4db2c0a12ea84452f601336975fc5993d75cf4e71f097b548927a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>KeyboardModifier</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>g50f91169486bada5931f3adc3a623091</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoModifier</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg50f91169486bada5931f3adc3a6230917c97a6a0da658c8b189acea1f4c0e252</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ShiftModifier</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg50f91169486bada5931f3adc3a623091206924f86e7455d5d88c30a1d61899b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ControlModifier</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg50f91169486bada5931f3adc3a623091da8f2dab72c395e56d897b769f6d0050</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AltModifier</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg50f91169486bada5931f3adc3a623091f3044546ac4679d9259be8332cca0dd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MetaModifier</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg50f91169486bada5931f3adc3a62309173abfeaa5bbd55ab4f28fabf3d134720</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Key</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>g34e65660d30e69c56aa636a8856aa52d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_unknown</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d3b769e7e817ab438b6341fb15598aa2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Enter</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52db3c8e06184697e8b55705ec6e92ef57a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Tab</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d15a17a0b9c7794f1e212bb209f9a6b1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Backspace</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d9b6c475089ff4ecea25ba729d4c6a771</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Shift</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d4daba0b20a0d45ae1265acf9233bf9b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Control</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d7faac129eabb364618c2f147775dddd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Alt</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d78df9bb6a131c160d5d7850aebbe2399</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_PageUp</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52db5764176c1fbc5b3058e545708bc2c7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_PageDown</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d67fdcf0a21fa225f138ae7eff5dc5d02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_End</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d52f767d967e30a4ef2b87375b58c3758</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Home</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d77efa77ae9e1a0d0da90a6da05978f3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Left</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52de67dc2b36f94673c36614c36a22c86a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Up</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d292b7bad0c08eca53003b16887dbbfa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Right</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d36408ed64c87279baf6752a718f1d867</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Down</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d81ce19fbff7cd5e33d311df5dc036b7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Insert</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d1b9d45e03463b8ce85e77072ee3ca7aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Delete</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d0974cc95023b3b3fcc89bed74ec4b820</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Escape</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d6fdfa052fee9a0ecad21a8ef29fc4a5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F1</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d2efc2110e512a5001b8ce6d58d940f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F2</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d7014a077073ead5bde183b3cbf4e8193</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F3</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d45c3287676adbc30f53facff89fd5001</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F4</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d444fd761aef07334c7bfbb59c1eb49a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F5</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d8ba749e5623684d7f908b5516eb474f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F6</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52dcc96e9d1ed8d5e11bac5d68623151694</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F7</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d124e3d34f1a696e33027fe48c003055e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F8</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d4e8fafdcba3de0933febe02c13e81a71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F9</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52de8d582832595b29a69a0a26a19b3cf53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F10</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d971d948e3abff0d42f8aa9409de16531</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F11</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d4dfdaa48520aa89b9f9b9caf7e31e9a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F12</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d9e048d50a8cc62e258572f8abe8d2412</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Space</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d5ec86a768d9ba285b2143df9977b5239</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_A</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d8eed1379a2c85aa3132f7f3170f95ea8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_B</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d069dbddc7a4b464624bba14f13c2084a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_C</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52dfddfb22114bd3d90f0ddb1c65feb3516</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_D</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52de1a302cbded84b1202a5107c808ed740</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_E</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52de454998d6c5ac2d5f7f6c91f0df2c71b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d098250f2140b5e2fb5b46e0ce5f10af5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_G</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d41e1288722f2b2f160aa81c28eccc4f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_H</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d716d8d1ef8dfd3aac7dbcead493127b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_I</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52dd927cec36329c7d65d751a8f031a249f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_J</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d59bef2a0589454049c2565648a6693ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_K</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52defbef7cec0c75b7fc2a53f573894b109</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_L</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d1e4f578cb8fb4a9319525b7a6af32eee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_M</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d88915645dbc4db17dfe3308fb65e9127</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_N</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d27d96fcd466dd0bdc867348ef07c0460</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_O</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d835039108055255d92e72f6ea9eca896</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_P</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52df681b38469fcc9b26a2866db5007fb46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Q</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d19771f87de22387fb76a417ae9b3ce89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_R</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d3ae47d7bd97b735e27c873c17d08e740</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_S</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d386061206cf7e0886720025eb2d152de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_T</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d468cd3a60da863a3e5c80c739c3ff789</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_U</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d65cc1a8b2bd95606398560bab5309e7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_V</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52df64151895196cf7907e5274d297bd65a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_W</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52de4d913efd09ed5ba93e8e73d636e350a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_X</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d606e38f4f386d7bafd43c04d0d6a8d6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Y</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d80f28601fb3b74843eb22f9f0381f076</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Z</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gg34e65660d30e69c56aa636a8856aa52d2b51e784d1e7228464fde06b4d37f6ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ItemDataRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>g0ae864e12320f9f89172735e075ed068</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DisplayRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg0ae864e12320f9f89172735e075ed0685ed17aded8a0e3b712698cf85a218f1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DecorationRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg0ae864e12320f9f89172735e075ed068ab6678fc176854f7990d6cff4eed779e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EditRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg0ae864e12320f9f89172735e075ed0686bc0da3ea683a06ee293a5a15f903cde</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StyleClassRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg0ae864e12320f9f89172735e075ed068776934b313f273b8e5e602e7eee9f73b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CheckStateRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg0ae864e12320f9f89172735e075ed068ad55e3ad8d7b76279adfc160bcb74940</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ToolTipRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg0ae864e12320f9f89172735e075ed068bde5f65c6b5cab667d11d1ceb87e4606</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InternalPathRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg0ae864e12320f9f89172735e075ed0682f954b164f69cf17133993d15f25f8e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UrlRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg0ae864e12320f9f89172735e075ed06837c19d2357fb1de30464a0fde4cb5395</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UserRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg0ae864e12320f9f89172735e075ed0689b7eae9fc07ea4fd8afe7bc97954162c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ItemFlag</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>g1d77c4de293aebfacbdde124de06b8b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ItemIsSelectable</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg1d77c4de293aebfacbdde124de06b8b077f858c86a06358abdcc64e4f9d03e40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ItemIsEditable</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg1d77c4de293aebfacbdde124de06b8b08664c482d721bbcb73539a924c7a9fab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ItemIsUserCheckable</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg1d77c4de293aebfacbdde124de06b8b0f309bd7d1183d934c73aefb2830e591c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ItemIsDragEnabled</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg1d77c4de293aebfacbdde124de06b8b02b0edddfd15d67a84723c9043479ced1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ItemIsDropEnabled</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg1d77c4de293aebfacbdde124de06b8b095d23063251001545d4bfab1308879a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SortOrder</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>g4173856040cf108a9c7360927a43ebac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AscendingOrder</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg4173856040cf108a9c7360927a43ebacc2e51e9fbb9a1250c908443700e03d3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DescendingOrder</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gg4173856040cf108a9c7360927a43ebacaca46a90a3bf0912bf035a380722c9f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>DropAction</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gca801bdfb957c360c5f8709cc46949aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CopyAction</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggca801bdfb957c360c5f8709cc46949aa153a9813fd5eb77e31695657ac9cfb68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MoveAction</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggca801bdfb957c360c5f8709cc46949aa3f0ed7a05e822a2623d65f15e573bc73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PenStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gb70170afb6347d18ff9dac17e05e133e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoPen</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggb70170afb6347d18ff9dac17e05e133ea8125e799a1289cd6dd0b2595a496a82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SolidLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggb70170afb6347d18ff9dac17e05e133ec1888b9cee513c2bf98c6fb9f4e307ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggb70170afb6347d18ff9dac17e05e133e7667698a6fb5adbf8f128519cbb93af8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DotLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggb70170afb6347d18ff9dac17e05e133e26ade9ba6072abfcef185cca70227d15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggb70170afb6347d18ff9dac17e05e133e45cac3164febb16cf7028403e01077a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotDotLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggb70170afb6347d18ff9dac17e05e133e758c17a422e91d2e497f15054123e302</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PenCapStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>g819ef9a03fb79c9834508b79eac604f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FlatCap</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gg819ef9a03fb79c9834508b79eac604f2394700c2ab47fe2b23564ced1c1e129a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SquareCap</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gg819ef9a03fb79c9834508b79eac604f239a378820d5058a3677f9852c5783783</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RoundCap</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gg819ef9a03fb79c9834508b79eac604f23d1c8a630cb15cec7b33434d9564182a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PenJoinStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gaf495faaba3ae03366a1646a4b5526be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MiterJoin</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggaf495faaba3ae03366a1646a4b5526bed2f7df311a138e580c95d728b0128004</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BevelJoin</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggaf495faaba3ae03366a1646a4b5526be9550acce5f4da6e134f34392d7b072ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RoundJoin</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggaf495faaba3ae03366a1646a4b5526be3be2fdf749560b7229b3472d8ff6ad12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>CharEncoding</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>55b820090cc9d15753301df90e35fd52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LocalEncoding</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>55b820090cc9d15753301df90e35fd52e31c944a7e88c44611f9317e7c1223e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UTF8</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>55b820090cc9d15753301df90e35fd5292c04a55980fec5344377e55b271cfd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>TextFormat</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>140dea437d52d3d7c438ea3bd16a1480</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHTMLText</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>140dea437d52d3d7c438ea3bd16a1480847ab5a73b906fea275bd16877b420a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHTMLUnsafeText</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>140dea437d52d3d7c438ea3bd16a1480eff9ccfd4130ea9922c46d94f82119b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PlainText</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>140dea437d52d3d7c438ea3bd16a1480e06bb9ae9a26d13c3dcf9f20d5067885</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Orientation</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>2a8d45559e16a0185bf61bfad0a67912</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Horizontal</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>2a8d45559e16a0185bf61bfad0a67912c2ebf22b096a22b18eef23e736aa2e28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Vertical</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>2a8d45559e16a0185bf61bfad0a67912f916b7ec24727db2d972f0770170c7f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>StandardButton</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>270a5e1af09979a6559f0f39e3d93062</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoButton</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>270a5e1af09979a6559f0f39e3d93062aa5455299757b4f679b36da038a56262</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Ok</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>270a5e1af09979a6559f0f39e3d93062f92b793210df9123b9be1ee11dd0d36d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Cancel</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>270a5e1af09979a6559f0f39e3d93062c31abea0685e68a0e116038d0ad48ca8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Yes</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>270a5e1af09979a6559f0f39e3d930625bf8c24f48fc404ccfea9ae2248a989c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>No</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>270a5e1af09979a6559f0f39e3d930624ca128eca84d1965d7ac1bb8a6936e58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Abort</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>270a5e1af09979a6559f0f39e3d93062a30d8b78fa024381f9807fd878e0eddd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Retry</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>270a5e1af09979a6559f0f39e3d93062f060b3db6c76d047f1682753fc138f01</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Ignore</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>270a5e1af09979a6559f0f39e3d93062c1485cc8119800b35353d5f39231eab2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YesAll</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>270a5e1af09979a6559f0f39e3d9306262bd8313eeee1e2ca5076315b5158d88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoAll</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>270a5e1af09979a6559f0f39e3d930620edc88532d04470aaefe72ee8f09d26b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Icon</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>aa26ad9f143951595691fbd604567f5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoIcon</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>aa26ad9f143951595691fbd604567f5f2ad77ae37661ce098ec3134ae56af58d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Information</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>aa26ad9f143951595691fbd604567f5fd16cfa38c4fc25f8a8f893f98a020dd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Warning</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>aa26ad9f143951595691fbd604567f5fd0ce1bf7328e5a588f9c72c1093589aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Critical</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>aa26ad9f143951595691fbd604567f5ff62c8ff8ae07c8f988d1c472d68420c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Question</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>aa26ad9f143951595691fbd604567f5fb79ccb6836e6a346a95ed11497a7247c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SelectionMode</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>74b3f7eb1689a3cbf0ea514ffd20bccc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoSelection</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>74b3f7eb1689a3cbf0ea514ffd20bcccb681964d34d71d850361461bafc46891</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SingleSelection</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>74b3f7eb1689a3cbf0ea514ffd20bccc4fd3c5ba6ce5289a1e732d85f002882a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ExtendedSelection</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>74b3f7eb1689a3cbf0ea514ffd20bccc7784d55577e92022399052c3d4d69954</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SelectionBehavior</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>04aecd34ae0810219e82208a9890de13</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SelectItems</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>04aecd34ae0810219e82208a9890de13fcf79c96af1f3bd64b7b143fd1ec1126</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SelectRows</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>04aecd34ae0810219e82208a9890de13f392e7f86ea1d0807e54de5739011239</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SelectionUnit</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>f025d17ef7079356d2d48dbd4696a61c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CellSelection</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>f025d17ef7079356d2d48dbd4696a61c4cfefc4da153f637d75eecf37aa2133a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RowSelection</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>f025d17ef7079356d2d48dbd4696a61c8ceb1965df7210e3f80fab572de4ddc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Side</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>5a6f4636bcc6ab3c075165d249b3a5a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>None</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>5a6f4636bcc6ab3c075165d249b3a5a3bb992ed7779ced98f1f37c76c7a9dcf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Top</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>5a6f4636bcc6ab3c075165d249b3a5a368b058364f8c2380c1d369a321f22f92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bottom</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>5a6f4636bcc6ab3c075165d249b3a5a387ae7d3cb692a5a4e8f18a7fea93a8a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Left</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>5a6f4636bcc6ab3c075165d249b3a5a36568fecac7c7d7223afaed240bcfdd9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Right</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>5a6f4636bcc6ab3c075165d249b3a5a3cf431c3ce5eb6f14c0390feb14a68004</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CenterX</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>5a6f4636bcc6ab3c075165d249b3a5a385c5bceaa27f26663a1f82d20dbb29b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CenterY</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>5a6f4636bcc6ab3c075165d249b3a5a30a5872f3e46be874591b8390a4d1200f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CenterXY</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>5a6f4636bcc6ab3c075165d249b3a5a35c784d4ea850c53096c0771f7e055a5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Verticals</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>5a6f4636bcc6ab3c075165d249b3a5a335aec721d6f559a5c2f77e270694b13a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Horizontals</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>5a6f4636bcc6ab3c075165d249b3a5a395476fd60a3ef12f0809fc4a93d447aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>All</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>5a6f4636bcc6ab3c075165d249b3a5a3a5044b3d48cc3c7cbf1f3ab0efb9d8f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>VerticalAlignment</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>e5b4da68a7aa8812f74ae20c6b6951bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AlignBaseline</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>e5b4da68a7aa8812f74ae20c6b6951bd81ebe44f54e9c4ef2c3724fda9c3283c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AlignSub</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>e5b4da68a7aa8812f74ae20c6b6951bd81309664fff5d8406dab45c323d9f6fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AlignSuper</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>e5b4da68a7aa8812f74ae20c6b6951bda19e58feec8b10ac71c857149a905051</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AlignTop</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>e5b4da68a7aa8812f74ae20c6b6951bd58fe5182bd266132c59718c6d30945a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AlignTextTop</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>e5b4da68a7aa8812f74ae20c6b6951bd843f362e4ccfcc195ffe96b79abf1339</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AlignMiddle</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>e5b4da68a7aa8812f74ae20c6b6951bd2ed90f01dbf74049f428d33769d48e3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AlignBottom</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>e5b4da68a7aa8812f74ae20c6b6951bd4f2aa4abba8500e25651bf8db5f0c162</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AlignTextBottom</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>e5b4da68a7aa8812f74ae20c6b6951bd40acabc492a1f8a5a0ed98881b1128cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>HorizontalAlignment</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>e89446fc3f3dcab08384cd9bdb5d9314</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AlignLeft</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>e89446fc3f3dcab08384cd9bdb5d9314d033ef69b45d0b75633be34168c9b606</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AlignRight</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>e89446fc3f3dcab08384cd9bdb5d9314b250310385383f0b2f68d4e0ad5567e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AlignCenter</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>e89446fc3f3dcab08384cd9bdb5d9314121104cdbb5db77c7d038813a93998e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AlignJustify</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>e89446fc3f3dcab08384cd9bdb5d931418cdf9d975a5a41afa182aabfde0de88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PositionScheme</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>2551043da5512cfe7b857c5db6e5ae40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Static</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>2551043da5512cfe7b857c5db6e5ae40ab8d71e0c30250d77e05b6c1708e020f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Relative</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>2551043da5512cfe7b857c5db6e5ae40cceb16577ef89ec5d7dec10507e3142a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Absolute</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>2551043da5512cfe7b857c5db6e5ae40f924d8e24cb9e55dbeac9284c5640c69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Fixed</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>2551043da5512cfe7b857c5db6e5ae402e157222a2018e8665c15c1ba56df530</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Cursor</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>6dc0346a6ae888d6d4ab44f022e61eb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ArrowCursor</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>6dc0346a6ae888d6d4ab44f022e61eb6b8be050ebabfd528fce3c8b4ce972088</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AutoCursor</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>6dc0346a6ae888d6d4ab44f022e61eb69cd0118f12b79f6894086fa07777f0a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CrossCursor</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>6dc0346a6ae888d6d4ab44f022e61eb6069ee2c69ffe75cc06bff8c6c946f21e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PointingHandCursor</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>6dc0346a6ae888d6d4ab44f022e61eb6f860d39b9a2ba8f7d7359453bf15a37c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OpenHandCursor</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>6dc0346a6ae888d6d4ab44f022e61eb6b8033fd03ad261e11583fe7c4200b0a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WaitCursor</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>6dc0346a6ae888d6d4ab44f022e61eb641173c71ae3df9016a1057a24f01f20b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IBeamCursor</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>6dc0346a6ae888d6d4ab44f022e61eb6e10e6e6970e8a042483ccaf1f66c7e44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WhatsThisCursor</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>6dc0346a6ae888d6d4ab44f022e61eb64adb56b89e435dedd82aac10a7cbb5ac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAbstractArea</name>
    <filename>classWt_1_1WAbstractArea.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WAbstractArea</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>2ca3fe7cc0229dffe137d2cd4edf7c50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHole</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>f3c8461b36ec142326d0204e16c9bb34</anchor>
      <arglist>(bool hole)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHole</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>5cf67f536eaecba3c2165fc927c76707</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRef</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>4c3350282fd3563886c093257ecd3119</anchor>
      <arglist>(const std::string &amp;ref)</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>ref</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>34cbb1334be3c8813ed1f8b401028544</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResource</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>f33f85a8505629ea9ded1ec1b962c359</anchor>
      <arglist>(WResource *resource)</arglist>
    </member>
    <member kind="function">
      <type>WResource *</type>
      <name>resource</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>ed1e5e63fee2a9f7d2a58974902d4145</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTarget</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>4b1d968e9681eefe588916c8a2ae944b</anchor>
      <arglist>(AnchorTarget target)</arglist>
    </member>
    <member kind="function">
      <type>AnchorTarget</type>
      <name>target</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>b43a761767de10f92b00dcae6b8adff4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlternateText</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>0119bf73439f81f83b754906785746bf</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString</type>
      <name>alternateText</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a4902223227eded25c34c556edb17b2f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToolTip</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>310e8e1d6360d22bf8bf0e484a52b8f9</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toolTip</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>05cd3a6e69b3dd98f10aeac4e4355e23</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCursor</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>6fc412a79674a320cac108e54dbad72c</anchor>
      <arglist>(Cursor)</arglist>
    </member>
    <member kind="function">
      <type>Cursor</type>
      <name>cursor</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>312cca5512a261011dab5014574f1af5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyWentDown</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>9afb5ecb2220cf3d84a2ab2c17a32344</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyPressed</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>be2afeaf79be90e7fca88df9fc7eeab9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyWentUp</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>d549683e83afab0bbcb8419b75e58095</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; void &gt; &amp;</type>
      <name>enterPressed</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>15e411e227ff8594a7b9aa1f3f165afd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; void &gt; &amp;</type>
      <name>escapePressed</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>2a5b1734e5c1a59d0420c6bd5277fca1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>clicked</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>3848d31789b01652d8abd0fd3e9a073b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>doubleClicked</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a13f05a9eeece4aaac37997e96102b68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseWentDown</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>486bf7619203d09bf278861db23b9b45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseWentUp</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>d777e0b72016e7d8d00daa9e65a2c4c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseWentOut</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>22a489ddc70d708935f28deeda18199e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseWentOver</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>40d863f68ebfe60e2d6d3077bf99553b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseMoved</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>7aa19a185cf4e8ffa3442993fec8cdd1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAbstractItemModel</name>
    <filename>classWt_1_1WAbstractItemModel.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type></type>
      <name>WAbstractItemModel</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ceb39c2027dc4dc464ac5942798e62e6</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WAbstractItemModel</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>7be019775b43ecc4f3ac5f59f5ddaca3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>bcf7912a95a0a60f8e9b1c37d30b8383</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>rowCount</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>b0709a8f71fd5df882f29bb29fd055f0</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>flags</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>e64b7959ec5fec60b9b819e87ea87a5e</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasChildren</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>f26d7dc00f8c1bc15fe3d5d4b64bb371</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WModelIndex</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>da454d45706ca0c1a0921dedd351c48c</anchor>
      <arglist>(const WModelIndex &amp;index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual boost::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>9112b74d160f916ef75fb6c1c09dd8fe</anchor>
      <arglist>(const WModelIndex &amp;index, int role=DisplayRole) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::map&lt; int, boost::any &gt;</type>
      <name>itemData</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>1ffd587f97356aad5f86b2fe822de4f3</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual boost::any</type>
      <name>headerData</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>86bbab7c809fce4de9b5cb543b2fb124</anchor>
      <arglist>(int section, Orientation orientation=Horizontal, int role=DisplayRole) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WModelIndex</type>
      <name>index</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>83f37bf04b8574b328c139b02523b8cb</anchor>
      <arglist>(int row, int column, const WModelIndex &amp;parent=WModelIndex()) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndexList</type>
      <name>match</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a280365cdb4240074a40dc55cb92dd41</anchor>
      <arglist>(const WModelIndex &amp;start, int role, const boost::any &amp;value, int hits=-1, MatchFlags flags=MatchFlags(MatchStartsWith|MatchWrap)) const </arglist>
    </member>
    <member kind="function">
      <type>boost::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>0301a303654b113f7f11686dff277228</anchor>
      <arglist>(int row, int column, int role=DisplayRole, const WModelIndex &amp;parent=WModelIndex()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasIndex</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>f8453f8f06427e598a35000723c5b86c</anchor>
      <arglist>(int row, int column, const WModelIndex &amp;parent=WModelIndex()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>insertColumns</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>1eded9eb68b9247ae2ff371f74a5e5f2</anchor>
      <arglist>(int column, int count, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>insertRows</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>bcafc38dc24fd9edf70eafe834ca411d</anchor>
      <arglist>(int row, int count, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeColumns</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>27428d1a02830336ec9db69c6d0b0762</anchor>
      <arglist>(int column, int count, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeRows</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>29cf3003ee8f97b2b5de9c52af27361a</anchor>
      <arglist>(int row, int count, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>70856db8c322be8c7f397a932165a943</anchor>
      <arglist>(const WModelIndex &amp;index, const boost::any &amp;value, int role=EditRole)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setItemData</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>7944b7761fb939586fa434e9c61da6d6</anchor>
      <arglist>(const WModelIndex &amp;index, const std::map&lt; int, boost::any &gt; &amp;values)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setHeaderData</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>57f5d417f933440db0d38ece7dd370f4</anchor>
      <arglist>(int section, Orientation orientation, const boost::any &amp;value, int role=EditRole)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setHeaderData</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>fad1dffa150e21c73f71802d9784279f</anchor>
      <arglist>(int section, const boost::any &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sort</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>133931424d4daa8422bcdea911cda713</anchor>
      <arglist>(int column, SortOrder order=AscendingOrder)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>toRawIndex</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>5c4db8b3265c914f77efead35450f6dc</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>fromRawIndex</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>85beaaea2e8609556543019618fd2a89</anchor>
      <arglist>(void *rawIndex) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>mimeType</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>4c62d2cc18d133d7926a91b4f2eebe62</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>acceptDropMimeTypes</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>9e92a29b30e3d4de1f6df9f505e952c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>dropEvent</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>f9142a0328922a1b6872f0186164b066</anchor>
      <arglist>(const WDropEvent &amp;e, DropAction action, int row, int column, const WModelIndex &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insertColumn</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>d0e634e9fb1276703e41438e8aa50cca</anchor>
      <arglist>(int column, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insertRow</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>f4a389e8544fc887a24099c506c8bd7b</anchor>
      <arglist>(int row, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeColumn</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>7b46c63a32eb9ca9838a1a7cd5853552</anchor>
      <arglist>(int column, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeRow</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>da64c5f4d4eba6cecab2c1e443372cb3</anchor>
      <arglist>(int row, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>df3aee29503da7f4a78bafeb96956195</anchor>
      <arglist>(int row, int column, const boost::any &amp;value, int role=EditRole, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; WModelIndex, int, int &gt;</type>
      <name>columnsAboutToBeInserted</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>2e8564aed90664ff2a010f0df5cd148f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; WModelIndex, int, int &gt;</type>
      <name>columnsAboutToBeRemoved</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>9c2544da827f1de0c4965919131a9c19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; WModelIndex, int, int &gt;</type>
      <name>columnsInserted</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>53ebdb089bda7505f4541529ccf3fb4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; WModelIndex, int, int &gt;</type>
      <name>columnsRemoved</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>cb12785d7eb99652ae8f6b8b82182cfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; WModelIndex, int, int &gt;</type>
      <name>rowsAboutToBeInserted</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>1e274db4105d5afe4523c653d3fbaf99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; WModelIndex, int, int &gt;</type>
      <name>rowsAboutToBeRemoved</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>8f67cf9723d5da8716bb59d4f1c4adf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; WModelIndex, int, int &gt;</type>
      <name>rowsInserted</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>6ada97226e639da6bf567f4e86c9b1b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; WModelIndex, int, int &gt;</type>
      <name>rowsRemoved</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>27b41a0fee13d1ffb3bbb21f78dbcf2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; WModelIndex, WModelIndex &gt;</type>
      <name>dataChanged</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>93edb7efae476f82058d76db48be66cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; Orientation, int, int &gt;</type>
      <name>headerDataChanged</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>c961d6b086133af6025415115183cfe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Signal</type>
      <name>layoutAboutToBeChanged</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>2d3c15eb699617aa5b75280318cf76f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Signal</type>
      <name>layoutChanged</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>59464793dc7fb0f2e114b68ad76eae66</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WModelIndex</type>
      <name>createIndex</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>c837a73fe423255035ffb076946de122</anchor>
      <arglist>(int row, int column, void *ptr) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WModelIndex</type>
      <name>createIndex</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ca9c0c10479b66b5f6742a9a31aa9e9f</anchor>
      <arglist>(int row, int column, uint64_t id) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WModelIndex</type>
      <name>createIndex</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>efe88abbf254cbc2184eacc74e74b37b</anchor>
      <arglist>(int row, int column, const Sha1::Digest &amp;hashId) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>beginInsertColumns</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>1b0c2b404763032e48637a2a3615b2b6</anchor>
      <arglist>(const WModelIndex &amp;parent, int first, int last)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>beginInsertRows</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>91e52898a805996aee496877cd090eb4</anchor>
      <arglist>(const WModelIndex &amp;parent, int first, int last)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>beginRemoveColumns</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>8dbef6f3633812d2df7289cb7cfb192b</anchor>
      <arglist>(const WModelIndex &amp;parent, int first, int last)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>beginRemoveRows</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>5286cc70219c8d8d720abc255b0183f5</anchor>
      <arglist>(const WModelIndex &amp;parent, int first, int last)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>endInsertColumns</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>2422779ff8af9d19c6bfd3e169c84422</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>endInsertRows</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ce03c0bc5b0b57b6add882aaf444b62f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>endRemoveColumns</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>840b32221ade669cb4e987f86203d1d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>endRemoveRows</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>fceaf639f2a5088f45c00f03d550f262</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>asString</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>7e9299e60b532d5e06b26c99e7aa4bf6</anchor>
      <arglist>(const boost::any &amp;v, const WString &amp;formatString=WString::emptyString)</arglist>
    </member>
    <member kind="function">
      <type>WT_API double</type>
      <name>asNumber</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>7c5468805b11a96579d315875761343f</anchor>
      <arglist>(const boost::any &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAbstractListModel</name>
    <filename>classWt_1_1WAbstractListModel.html</filename>
    <base>Wt::WAbstractItemModel</base>
    <member kind="function">
      <type></type>
      <name>WAbstractListModel</name>
      <anchorfile>classWt_1_1WAbstractListModel.html</anchorfile>
      <anchor>c74d8359ff0806b4efe10ec34c8e1d4a</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WAbstractListModel</name>
      <anchorfile>classWt_1_1WAbstractListModel.html</anchorfile>
      <anchor>1476c92cf08ce4548a08858f45007746</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WAbstractListModel.html</anchorfile>
      <anchor>b5d047d66626660447a76f17109aef2e</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>index</name>
      <anchorfile>classWt_1_1WAbstractListModel.html</anchorfile>
      <anchor>256e0cbdd9e62e1eef61063bd350d492</anchor>
      <arglist>(int row, int column, const WModelIndex &amp;parent=WModelIndex()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1WAbstractListModel.html</anchorfile>
      <anchor>c1067d3ba070038275690deb2e9a40f4</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAbstractProxyModel</name>
    <filename>classWt_1_1WAbstractProxyModel.html</filename>
    <base>Wt::WAbstractItemModel</base>
    <member kind="function">
      <type></type>
      <name>WAbstractProxyModel</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>b59d85e0a005539ead29d3b5e730807c</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WModelIndex</type>
      <name>mapFromSource</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>856d190cc66edcf05462e2476f43b01d</anchor>
      <arglist>(const WModelIndex &amp;sourceIndex) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WModelIndex</type>
      <name>mapToSource</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>c36b0ee3110073578da8b999d1882bf7</anchor>
      <arglist>(const WModelIndex &amp;proxyIndex) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSourceModel</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>80f03a23bcd5d34eef1091a4891cda87</anchor>
      <arglist>(WAbstractItemModel *sourceModel)</arglist>
    </member>
    <member kind="function">
      <type>WAbstractItemModel *</type>
      <name>sourceModel</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>553fbfaa929ade5275a57186eaf7f2bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual boost::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>816f887f847e838e6b2cb3539f1614cd</anchor>
      <arglist>(const WModelIndex &amp;index, int role=DisplayRole) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>59e6feb26b7e6f714cb84ad14c3fdb15</anchor>
      <arglist>(const WModelIndex &amp;index, const boost::any &amp;value, int role=EditRole)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>flags</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>12be89c6a301081bb329e82f214bd007</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setHeaderData</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>437a2f06fdf9025a7e8e72c0203db34b</anchor>
      <arglist>(int section, Orientation orientation, const boost::any &amp;value, int role=EditRole)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual boost::any</type>
      <name>headerData</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>18f44f23d6402c7a0eabd46bec96813b</anchor>
      <arglist>(int section, Orientation orientation=Horizontal, int role=DisplayRole) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>insertColumns</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>5d3d940e4789d25791efead3fd14b9aa</anchor>
      <arglist>(int column, int count, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>insertRows</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>6ee3a51e41a45d91472382093c0a1984</anchor>
      <arglist>(int row, int count, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeColumns</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>9da4b69588ca66ef9d591e6b1433c655</anchor>
      <arglist>(int column, int count, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeRows</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>0c8d19dd3efcff79781566c634ec7522</anchor>
      <arglist>(int row, int count, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>mimeType</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>59b7d0b8afcc709be5a93a08e92e0857</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>acceptDropMimeTypes</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>c315164c99220a7846d1303a56188054</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>dropEvent</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>cd6129e7686db3e3ddf1e000a379983e</anchor>
      <arglist>(const WDropEvent &amp;e, DropAction action, int row, int column, const WModelIndex &amp;parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>toRawIndex</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>4c406e858ed3020a2fac8414293bed2f</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>fromRawIndex</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>c32c44c4ac80644bd4293e2d250f6fa6</anchor>
      <arglist>(void *rawIndex) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAbstractToggleButton</name>
    <filename>classWt_1_1WAbstractToggleButton.html</filename>
    <base>Wt::WFormWidget</base>
    <member kind="slot">
      <type>void</type>
      <name>setChecked</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>0b638378fdf5970588d9ee03e326b3c0</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual void</type>
      <name>setChecked</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>2b4ab0746beb381276ff7fcf0bde93c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual void</type>
      <name>setUnChecked</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>b772a43209d2b042f5ac74ae078f1045</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>e6e083c723a7f3c7e573f0d95ddf3ee2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>7a75e3b2585124eefdea57c9bf9a7696</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString</type>
      <name>text</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>3ef9682b5fe66d802380ccd6c698725d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isChecked</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>bd40ce7a6c4b4e924c9097015f4971ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; void &gt;</type>
      <name>checked</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>f5b1bdc5264add0f5f56690627438419</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; void &gt;</type>
      <name>unChecked</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>e8bb28ceafa80e3ca999bbc899a5aac5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WAbstractToggleButton</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>8dafae860bd28e00e707d567d124ea4e</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WAbstractToggleButton</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>0d8e9ead61c0ab655f472a240bef86f5</anchor>
      <arglist>(const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAccordionLayout</name>
    <filename>classWt_1_1WAccordionLayout.html</filename>
    <base>Wt::WDefaultLayout</base>
    <member kind="function">
      <type></type>
      <name>WAccordionLayout</name>
      <anchorfile>classWt_1_1WAccordionLayout.html</anchorfile>
      <anchor>876fa763ec385acba2da576138fed13e</anchor>
      <arglist>(WWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAnchor</name>
    <filename>classWt_1_1WAnchor.html</filename>
    <base>Wt::WContainerWidget</base>
    <member kind="function">
      <type></type>
      <name>WAnchor</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>0416606719711d768ba21ceacc5bf496</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WAnchor</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>c2187f2f49e6f25f1d537203558432f2</anchor>
      <arglist>(const std::string &amp;url, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WAnchor</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>667242ca0bbb3690a434ba9ffbb5b5e9</anchor>
      <arglist>(WResource *resource, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WAnchor</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>7a1283860b03fa23e4b777971e9b8f00</anchor>
      <arglist>(const std::string &amp;url, const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WAnchor</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>1fabbd73453d9462e0fd20a9d4161bf9</anchor>
      <arglist>(WResource *resource, const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WAnchor</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>b816a891dde296d19fe7a8a2351597e2</anchor>
      <arglist>(const std::string &amp;ref, WImage *image, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WAnchor</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>94e54cb64ea12090170f526fd8d6ae55</anchor>
      <arglist>(WResource *resource, WImage *image, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRef</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>cf0206a2ac91ea67d68ba10e3a951ba3</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRefInternalPath</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>e3ea26646f135bf133871564f5d6798d</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>ref</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>c188644d6b10201ea99714f073c5b20f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResource</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>f4b130e223525c4b6084eb2fb8797738</anchor>
      <arglist>(WResource *resource)</arglist>
    </member>
    <member kind="function">
      <type>WResource *</type>
      <name>resource</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>e95cf2ea27a8b04e74334e0e78e46bad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>8379cfef23023ac070d2b7dcedacdac8</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>a29b29327d79b2e15ac74904e8b79cac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWordWrap</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>5c2579ab4bb1452eab27f52ef02166a3</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wordWrap</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>f31ca59038f6b696b90c79fc1232ea64</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImage</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>d9fc10558d724684b1fd9314aa5ea8e7</anchor>
      <arglist>(WImage *image)</arglist>
    </member>
    <member kind="function">
      <type>WImage *</type>
      <name>image</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>144d76630a616ea8fb7b268240c6f7ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTarget</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>169c32b60dcb5d4511a3cbdd4979c941</anchor>
      <arglist>(AnchorTarget target)</arglist>
    </member>
    <member kind="function">
      <type>AnchorTarget</type>
      <name>target</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>75c557c92118cf0cdaaad437f8d91ad5</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WApplication</name>
    <filename>classWt_1_1WApplication.html</filename>
    <base>Wt::WObject</base>
    <member kind="enumeration">
      <name>AjaxMethod</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>102e3adfb4eb058288861c06dfd6a12a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XMLHttpRequest</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>102e3adfb4eb058288861c06dfd6a12a9dc5b270e2b5c180556fb688cd8f06c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DynamicScriptTag</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>102e3adfb4eb058288861c06dfd6a12a66ad42375422870da68e3666a1712d39</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Wt::ApplicationCreator</type>
      <name>ApplicationCreator</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>28b5dd3d1272f46fbacbfb21a0846d07</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>quit</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>5231d54ed34982f4366058eb6440c8f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WApplication</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>e29a843f4d50159b17abfa9503c389db</anchor>
      <arglist>(const WEnvironment &amp;environment)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WApplication</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>d0d9408ddc0fda917235d8416da3777f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const WEnvironment &amp;</type>
      <name>environment</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>19f3b913f4bc2f69761d9a3738bf142b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WContainerWidget *</type>
      <name>root</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>17e118a04d962459484a12989a80bc05</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WCssStyleSheet &amp;</type>
      <name>styleSheet</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>6a9a20d65ce9e7c2f62b27387c94e10d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useStyleSheet</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>492358ada6982b4be05e9fe438253825</anchor>
      <arglist>(const std::string &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useStyleSheet</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>3a4271ac715e309e3581c38546d19544</anchor>
      <arglist>(const std::string &amp;uri, const std::string &amp;condition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>8f2f1219b0e7bd5f01ca8347dcec88ed</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>title</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>86aefff2a3438fecdfde3e0e7dd6e5da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WLocalizedStrings *</type>
      <name>localizedStrings</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a140cb3c65451413939010d704e9a58a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLocalizedStrings</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>7afed79e345befc2ea770fcff3e1b87c</anchor>
      <arglist>(WLocalizedStrings *translator)</arglist>
    </member>
    <member kind="function">
      <type>WMessageResourceBundle &amp;</type>
      <name>messageResourceBundle</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>5386565e35a58c94ccbbfab48f2212a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLocale</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>5c9cc1350019d69f154a2b44cdaf2596</anchor>
      <arglist>(const std::string &amp;locale)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>locale</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>6e782f1f38a6f56e2024aab1a917a80b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>02b9d8aa1b6c2d0dc9edc1b9c63f86dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindWidget</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ba49e1b9e696ac7244f5e2b63ca07de5</anchor>
      <arglist>(WWidget *widget, const std::string &amp;domId)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>applicationName</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>fd4452b096ce8b467e31b9f4a9533bae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>url</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>455fe732c1dd087ed507bc5975420828</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>bookmarkUrl</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>37b4cf44f393688785ed3b34f53fead1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>bookmarkUrl</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>c99ee110fd00d89de51e6e90ad166626</anchor>
      <arglist>(const std::string &amp;internalPath) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalPath</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ca2b2e8766b8c1bd03336e30543df5c3</anchor>
      <arglist>(const std::string &amp;internalPath, bool emitChange=false)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>internalPath</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ab6320ecdd0e8e4026e9ef1aca710ca5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>internalPathNextPart</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>95e6b5e4dc9084d45e166264b10b3c46</anchor>
      <arglist>(const std::string &amp;path) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>internalPathMatches</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ed54bd83339bc80b3cffba9067ab1e39</anchor>
      <arglist>(const std::string &amp;path) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>redirect</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>4dcbf69c8b09c301577b5b6aa8a4da18</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>sessionId</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>b55c625a3197fec416544be8ad1529af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableUpdates</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>e04137e18677197f040063e8e61ecaab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updatesEnabled</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>5a8e6970e9123fb1c23aa43711093135</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>triggerUpdate</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>51f50e0641a6d702a7c6ab7f8dd5946a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attachThread</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>8b03a693a8277b7d5e0775a9b9581803</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>UpdateLock</type>
      <name>getUpdateLock</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>c7582c37defc49b5e8d6ccbda3b68d45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doJavaScript</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>2a92457b9212cef4057cb54e56183967</anchor>
      <arglist>(const std::string &amp;javascript, bool afterLoaded=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>require</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>13eaf4a3d907137c0de2b8200e3bfffa</anchor>
      <arglist>(const std::string &amp;uri, const std::string &amp;symbol=std::string())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processEvents</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>48ceb7972ef7ec0e557adf441f660f2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAjaxMethod</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>f2b590f865a4a6a6b144c45682b4bc1a</anchor>
      <arglist>(AjaxMethod method)</arglist>
    </member>
    <member kind="function">
      <type>AjaxMethod</type>
      <name>ajaxMethod</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>10cd5e55a610b7f6587c881a2c35188c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>42fc7f65116073d4032573f1e42c1173</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>finalize</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>10317a8a50dc95db9b27ad54409ab39f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTwoPhaseRenderingThreshold</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>63d991e268c9af8898329217a1242563</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCookie</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>0aa2703da36531cf1773d3e756791bf6</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value, int maxAge, const std::string &amp;domain=&quot;&quot;, const std::string &amp;path=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maximumRequestSize</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>781ae50d1941783913de98d4d4d08a97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WLogEntry</type>
      <name>log</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>75067771ba8fcc56e174f2e741ce278f</anchor>
      <arglist>(const std::string &amp;type) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoadingIndicator</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>080d01aa8e92ae57ef9c9491d33a7fca</anchor>
      <arglist>(WLoadingIndicator *indicator)</arglist>
    </member>
    <member kind="function">
      <type>WLoadingIndicator *</type>
      <name>loadingIndicator</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>435c81aaee5f9d0993b329d2541ee21a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>e3ab007fa40783e4c3390713d893e909</anchor>
      <arglist>(const std::string &amp;key, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>state</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>d2e52b7029395b956eea71ac6c4dfbea</anchor>
      <arglist>(const std::string &amp;key) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>bookmarkUrl</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>6927b60d3523ee4368f9cc4549eb6ad4</anchor>
      <arglist>(const std::string &amp;scope, const std::string &amp;state)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WApplication *</type>
      <name>instance</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>38d922da0a0d83395519f3eaab85d0f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>readConfigurationProperty</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>c0f5599ed35eb159fa6912aa0ff3c75c</anchor>
      <arglist>(const std::string &amp;name, std::string &amp;value)</arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; std::string &gt;</type>
      <name>internalPathChanged</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>41c9bda19b28526e47e70b1b6045e7cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; std::string, std::string &gt;</type>
      <name>stateChanged</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>43f3a8de696e6e301e6e321670ac51fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; int &gt;</type>
      <name>requestTooLarge</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>c3b67462c8fd5b2859d3072efa4d9c7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>notify</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>4a6f167bea94aefa8ba24f914c2fbee5</anchor>
      <arglist>(const WEvent &amp;e)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>isExposed</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>17e25e84fab304664baab5b0c748b802</anchor>
      <arglist>(WWidget *w) const </arglist>
    </member>
    <member kind="typedef">
      <type>WApplication *(*</type>
      <name>ApplicationCreator</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>aa9f20bdeb8ebcbb3ec5d633b010511f</anchor>
      <arglist>)(const WEnvironment &amp;env)</arglist>
    </member>
    <class kind="class">Wt::WApplication::UpdateLock</class>
  </compound>
  <compound kind="class">
    <name>Wt::WApplication::UpdateLock</name>
    <filename>classWt_1_1WApplication_1_1UpdateLock.html</filename>
    <member kind="function">
      <type></type>
      <name>UpdateLock</name>
      <anchorfile>classWt_1_1WApplication_1_1UpdateLock.html</anchorfile>
      <anchor>3c3b5a14188d11f8023fb8eb88d843a4</anchor>
      <arglist>(const UpdateLock &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~UpdateLock</name>
      <anchorfile>classWt_1_1WApplication_1_1UpdateLock.html</anchorfile>
      <anchor>7d9898c9d19bd54675c7d178746659c0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WBorder</name>
    <filename>classWt_1_1WBorder.html</filename>
    <member kind="enumeration">
      <name>Width</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>057b146bbbdda832d91909b75aac7474</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Thin</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>057b146bbbdda832d91909b75aac74743026a5104645b5d86aa903cc6de423c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Medium</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>057b146bbbdda832d91909b75aac7474b0f5a6808e8f9e4487651cb99f697210</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Thick</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>057b146bbbdda832d91909b75aac7474b7b099599322af02c9bf7b1dcbfdde2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Explicit</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>057b146bbbdda832d91909b75aac7474b1b357c35b95138f9ac67426f4e9b00b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Style</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>298e90bd177b66c5cf84c5eaa60eff6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>None</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>298e90bd177b66c5cf84c5eaa60eff6b5e191ab41e2db89bcd8af7cba37b2c8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Hidden</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>298e90bd177b66c5cf84c5eaa60eff6b739de5d3fcfcdd56059478b44dc078c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dotted</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>298e90bd177b66c5cf84c5eaa60eff6b664ba009c1db9768b880a97a7ad7751b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dashed</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>298e90bd177b66c5cf84c5eaa60eff6b8acfc02263e192726d4d1983cc9871fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Solid</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>298e90bd177b66c5cf84c5eaa60eff6b4b4d9319fbd6f910ded24458411eab9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Double</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>298e90bd177b66c5cf84c5eaa60eff6bf1b73b785fcaec95aa6e76b137a0cc4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Groove</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>298e90bd177b66c5cf84c5eaa60eff6b5289417986aa8f9be7780ec6499a4a59</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Ridge</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>298e90bd177b66c5cf84c5eaa60eff6b4406fe085c60b80c760f207c30ebd33a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Inset</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>298e90bd177b66c5cf84c5eaa60eff6b68163490fc47f2fe1ab6712c2ac133ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Outset</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>298e90bd177b66c5cf84c5eaa60eff6b7861b0b4d708939521f0a6313e90e1bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WBorder</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>cc8471953ee905e5bc363184bf37a8df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WBorder</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>735182fbb1f2e119de06952bc3460660</anchor>
      <arglist>(Style style, Width=Medium, WColor color=WColor())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WBorder</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>81c4210c470038ffacd8ceff211f0ff1</anchor>
      <arglist>(Style style, const WLength &amp;width, WColor color=WColor())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>8f40f4e2ec2371a5c7e3452f3ab3ecae</anchor>
      <arglist>(const WBorder &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>791d126be2248fb6915051252a420e6b</anchor>
      <arglist>(const WBorder &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>de27258eaf9640ab7fae8a71994a768c</anchor>
      <arglist>(Width width, const WLength &amp;explicitWidth=WLength())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>8336b810e01de7acc051644c75a74ac0</anchor>
      <arglist>(WColor color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyle</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>d02585c81144d4af539dfe123f0e2efb</anchor>
      <arglist>(Style style)</arglist>
    </member>
    <member kind="function">
      <type>Width</type>
      <name>width</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>599c605367bae4e63e99890130d066b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WLength</type>
      <name>explicitWidth</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>68f59399c4cb2a384ee2c8952b872a33</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WColor</type>
      <name>color</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>117d64f8d50d5a9fb90cdc52ec1edc9e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Style</type>
      <name>style</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>f566f4e98887008cfb23f3c5d2115814</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WBorderLayout</name>
    <filename>classWt_1_1WBorderLayout.html</filename>
    <base>Wt::WLayout</base>
    <member kind="enumeration">
      <name>Position</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>342b3134ad39ee14d6129c4dc35e0f0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>North</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>342b3134ad39ee14d6129c4dc35e0f0ef2e38a6995be9664803dbb76be808cf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>East</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>342b3134ad39ee14d6129c4dc35e0f0e8a84892f4ad01b663668150ea5a1a120</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>South</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>342b3134ad39ee14d6129c4dc35e0f0e22e18e93ad91e56d4d58a74593212257</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>West</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>342b3134ad39ee14d6129c4dc35e0f0e083d8ef2c7e8cea026f902dca9b519cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Center</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>342b3134ad39ee14d6129c4dc35e0f0e6f0ad0bd2eb8d3c4f86ecd568e33ebe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WBorderLayout</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>cbf879399f66c7d82695b0e6bee881ec</anchor>
      <arglist>(WWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WBorderLayout</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>0dedcf9a1a5ed39adee1efad66ca27ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>5f9a17668850dfbd4566b4351334ab48</anchor>
      <arglist>(WLayoutItem *item)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeItem</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>1d6703aaefe8924d71ad48dbd4b7dcab</anchor>
      <arglist>(WLayoutItem *item)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLayoutItem *</type>
      <name>itemAt</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>cd496ae37d97427d2234fb3147a2f500</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>1a29297adea327f48c1235022125f069</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>f7667b3d486dc649a7ed0c56f8c06206</anchor>
      <arglist>(WWidget *widget, Position position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>fbf14676206fad724c6eb725d4650842</anchor>
      <arglist>(WLayoutItem *item, Position position)</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>widgetAt</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>ac75ab996385ab95fa5c774a12eb68a5</anchor>
      <arglist>(Position position) const </arglist>
    </member>
    <member kind="function">
      <type>WLayoutItem *</type>
      <name>itemAt</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>b241699474232f2562a5f2b5c4474879</anchor>
      <arglist>(Position position) const </arglist>
    </member>
    <member kind="function">
      <type>Position</type>
      <name>position</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>322f2277abc4904bd92b4016bb5e27b8</anchor>
      <arglist>(WLayoutItem *item) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WBoxLayout</name>
    <filename>classWt_1_1WBoxLayout.html</filename>
    <base>Wt::WLayout</base>
    <member kind="enumeration">
      <name>Direction</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>ddc4cd1f8b1158dcf16eb10d429803ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LeftToRight</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>ddc4cd1f8b1158dcf16eb10d429803ec174fcc4fd0b807e60c838385be19e1f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RightToLeft</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>ddc4cd1f8b1158dcf16eb10d429803eca4a4afece8c59ddaf384c08b276aa70f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TopToBottom</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>ddc4cd1f8b1158dcf16eb10d429803ecf705eddcc1a4639aeb1908f1c7acface</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BottomToTop</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>ddc4cd1f8b1158dcf16eb10d429803ecf25be1e7bbefae032ceb333e67bda5f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WBoxLayout</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>9472dd446911a6a6d33b019a34a0c4fc</anchor>
      <arglist>(Direction dir, WWidget *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>2932a804ac01e0b314408bf4d366385d</anchor>
      <arglist>(WLayoutItem *item)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeItem</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a01f05c0f40fa89e418b802f78f2870c</anchor>
      <arglist>(WLayoutItem *item)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLayoutItem *</type>
      <name>itemAt</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>ad2ec4be48cb11a7802b3e6d7cb8f0fd</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>961fe311fd07adbf7b60b571ef7a8278</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDirection</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>f669ef9fbcdb8954d1cfa7bb9e47b90f</anchor>
      <arglist>(Direction direction)</arglist>
    </member>
    <member kind="function">
      <type>Direction</type>
      <name>direction</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a101f33971e037bed0e4bfea164cf0dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpacing</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>34d544a1a2bd8beffa6b8e5e84fbc19b</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>spacing</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a9d0d7ef4ea1753f898d6d71ad8e9b22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>c621e6977db1406ca078e7c81fc1df39</anchor>
      <arglist>(WWidget *widget, int stretch=0, int alignment=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLayout</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>b1627d60f60809ff5ba0c49ddab40e57</anchor>
      <arglist>(WLayout *layout, int stretch=0, int alignment=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSpacing</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>3cbd78251252e724d01937e2f6cc803d</anchor>
      <arglist>(const WLength &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addStretch</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>811708ce9336d753c20aaedc14b00d5f</anchor>
      <arglist>(int stretch=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertWidget</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>1356291ab50ed2dbbcdeb6c29370e298</anchor>
      <arglist>(int index, WWidget *widget, int stretch=0, int alignment=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertLayout</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>03d4cc8b1a53edd610aaab8bb7319a93</anchor>
      <arglist>(int index, WLayout *layout, int stretch=0, int alignment=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertSpacing</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>0d5d6a9e408c6bc7e25020f8c85cb4cf</anchor>
      <arglist>(int index, const WLength &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertStretch</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>0174de2ae36e2992b7209cf789d85271</anchor>
      <arglist>(int index, int stretch=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setStretchFactor</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>47182ea3c459afdadb3cc03232a8d110</anchor>
      <arglist>(WLayout *layout, int stretch)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setStretchFactor</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>f5ce73d289874c80e88ed6fd9934bb39</anchor>
      <arglist>(WWidget *widget, int stretch)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WBreak</name>
    <filename>classWt_1_1WBreak.html</filename>
    <base>Wt::WWebWidget</base>
    <member kind="function">
      <type></type>
      <name>WBreak</name>
      <anchorfile>classWt_1_1WBreak.html</anchorfile>
      <anchor>ad7ecf140e87a6dd8f4dc5c8229c3695</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WBrush</name>
    <filename>classWt_1_1WBrush.html</filename>
    <member kind="function">
      <type></type>
      <name>WBrush</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>b650511b8300044e2c62b209d8b5ada2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WBrush</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>e7725eeec8605983235ba8bb6b05695b</anchor>
      <arglist>(WBrushStyle style)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WBrush</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>1cd32bceb74be7792cf1b89d5df862a6</anchor>
      <arglist>(const WColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WBrush</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>c8529901dfbd7804fa10f8ee91c3bf77</anchor>
      <arglist>(GlobalColor color)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>77eaae76488f6febfaba2a5b0b94e7bb</anchor>
      <arglist>(const WBrush &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>c3a156efe8eb36d25680e391a9540b71</anchor>
      <arglist>(const WBrush &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyle</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>b52dc087359100109e5db040af72ea9c</anchor>
      <arglist>(WBrushStyle style)</arglist>
    </member>
    <member kind="function">
      <type>WBrushStyle</type>
      <name>style</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>01a01f9b48e940122c6485ddd078fce2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>9b6a446a81d6c3089a2cf37010fc5743</anchor>
      <arglist>(const WColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>const WColor &amp;</type>
      <name>color</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>af854f81f54f87eab71c0d550e4f6156</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="enumeration">
      <name>WBrushStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gffe43936b1bbb1ca2b308572fcdeb157</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoBrush</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggffe43936b1bbb1ca2b308572fcdeb157a6f513232fadbbcaf8a576b7aaefc67a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SolidPattern</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggffe43936b1bbb1ca2b308572fcdeb157574469ed16523a26c683e83c8fee3ed6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WButtonGroup</name>
    <filename>classWt_1_1WButtonGroup.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type></type>
      <name>WButtonGroup</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>2e29884c479c910861aa6f023d324210</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WButtonGroup</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>0f1876538ca9400a0afc7e2d2831e7a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addButton</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>aac6b9c80821c9c491b91533a48391e6</anchor>
      <arglist>(WRadioButton *button)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addButton</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>53cf739bd8e700e0046194f85e3b25e8</anchor>
      <arglist>(Ext::RadioButton *button)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeButton</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>de4ea1cf5ac08b17e0f92153c98204d3</anchor>
      <arglist>(WRadioButton *button)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeButton</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>9b2c7ea25d0e83d9ae894c2f0ce9bd67</anchor>
      <arglist>(Ext::RadioButton *button)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectedButtonIndex</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>968222f7cba72561b1712c90efc30d46</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>selectedButtonIndex</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>44aa1dc058bbfbc698289d56ba0424ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WRadioButton *</type>
      <name>selectedButton</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>a69b94b264e9c37fae15a85cb834728e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>ff9a2079d4fffaf4d2aa5c816bd37abf</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCalendar</name>
    <filename>classWt_1_1WCalendar.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WCalendar</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>283957dc081b948dbb82a0d627bdf37e</anchor>
      <arglist>(bool i18n=false, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMultipleSelection</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>075e2a4c5c39f8b6144865cfd0ae07f0</anchor>
      <arglist>(bool multiple)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>browseToPreviousYear</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a60744e2ecaeda40a2a9b0a401010470</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>browseToPreviousMonth</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>99c57c17f6afab4a0aa3a74ee9b19289</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>browseToNextYear</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>be866003ddb73b9fed91f35b7383e8ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>browseToNextMonth</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>4e77a4335ac8891a4d51441ce0f9e626</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>browseTo</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>59949bcc20f604fd96a73aa342157b8d</anchor>
      <arglist>(const WDate &amp;date)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentMonth</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>28bf4605a51c67258ee8e9182a1e27a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentYear</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>95a1fdb04b8b21bfb473dcf509e5d864</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearSelection</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>ff46e84192787483ec4f00c5b1410a8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>b3b72e0e5a76f3e365d94d056465453f</anchor>
      <arglist>(const WDate &amp;date)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a128787a7b96264b5e755712e720f928</anchor>
      <arglist>(const std::set&lt; WDate &gt; &amp;dates)</arglist>
    </member>
    <member kind="function">
      <type>const std::set&lt; WDate &gt; &amp;</type>
      <name>selection</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>de00a32163a903b22bd441179c95d9d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; void &gt;</type>
      <name>selectionChanged</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>87c7ef9d295cdac2bc7940d1b49709e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; void &gt;</type>
      <name>selected</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>4acf9a019c082020b96b6a6b2d8fc0c9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCanvasPaintDevice</name>
    <filename>classWt_1_1WCanvasPaintDevice.html</filename>
    <base>Wt::WPaintDevice</base>
    <base>Wt::WObject</base>
    <member kind="function">
      <type></type>
      <name>WCanvasPaintDevice</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>74c2268a9de31d083ca10db9db2d8145</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height, WObject *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setChanged</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>b89d1c3fdc9fa903b01765a77847cddd</anchor>
      <arglist>(int flags)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawArc</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>5ce1b5b6b4c2607c0d461c4347e1f373</anchor>
      <arglist>(const WRectF &amp;rect, double startAngle, double spanAngle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>011ff1caec6097d318a05c7153c3440b</anchor>
      <arglist>(const WRectF &amp;rect, const std::string &amp;imgUri, int imgWidth, int imgHeight, const WRectF &amp;sourceRect)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawLine</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>e10a371dd76345d825fc4d48fc85a4fd</anchor>
      <arglist>(double x1, double y1, double x2, double y2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawPath</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>79b27f0948676ac4045ecbabf4f9e9c1</anchor>
      <arglist>(const WPainterPath &amp;path)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawText</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>0d776ff99067bfc3cdb8ede684e55f7b</anchor>
      <arglist>(const WRectF &amp;rect, int flags, const WString &amp;text)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>bf398b5c8a8ae39af1368c647d58d37c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>done</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>f5d71bb7c6dd867a94ecf5f4b745998d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCheckBox</name>
    <filename>classWt_1_1WCheckBox.html</filename>
    <base>Wt::WAbstractToggleButton</base>
    <member kind="function">
      <type></type>
      <name>WCheckBox</name>
      <anchorfile>classWt_1_1WCheckBox.html</anchorfile>
      <anchor>6277263fb7405d39bd6d6124e56fbb5c</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WCheckBox</name>
      <anchorfile>classWt_1_1WCheckBox.html</anchorfile>
      <anchor>16025c975c9586c89e548875df811c6a</anchor>
      <arglist>(const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCircleArea</name>
    <filename>classWt_1_1WCircleArea.html</filename>
    <base>Wt::WAbstractArea</base>
    <member kind="function">
      <type></type>
      <name>WCircleArea</name>
      <anchorfile>classWt_1_1WCircleArea.html</anchorfile>
      <anchor>60514d5a3a2da148a684b0a0b3a5b235</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WCircleArea</name>
      <anchorfile>classWt_1_1WCircleArea.html</anchorfile>
      <anchor>e2d43a04099e8d29a317700570828365</anchor>
      <arglist>(int x, int y, int radius)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCenter</name>
      <anchorfile>classWt_1_1WCircleArea.html</anchorfile>
      <anchor>10932e173eef6c9531c8086324b7ced8</anchor>
      <arglist>(const WPoint &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCenter</name>
      <anchorfile>classWt_1_1WCircleArea.html</anchorfile>
      <anchor>604bd32d585d03c2ea509b57f71412f3</anchor>
      <arglist>(const WPointF &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCenter</name>
      <anchorfile>classWt_1_1WCircleArea.html</anchorfile>
      <anchor>939c6645039059067b6924466a477c6c</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>centerX</name>
      <anchorfile>classWt_1_1WCircleArea.html</anchorfile>
      <anchor>34a758fe81f9f9705e2bd1c9c4d46c41</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>centerY</name>
      <anchorfile>classWt_1_1WCircleArea.html</anchorfile>
      <anchor>044104f691997c0238b3abfb95217ee2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRadius</name>
      <anchorfile>classWt_1_1WCircleArea.html</anchorfile>
      <anchor>69d4391565a8cb7c707d951362fe22bf</anchor>
      <arglist>(int radius)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>radius</name>
      <anchorfile>classWt_1_1WCircleArea.html</anchorfile>
      <anchor>fe7fed59edd0636ca23771400a63d7f4</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WColor</name>
    <filename>classWt_1_1WColor.html</filename>
    <member kind="function">
      <type></type>
      <name>WColor</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>0aca175990842e4be3d944236e27cda3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WColor</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>5e0102afbdf3ece70a200c1379ad3522</anchor>
      <arglist>(int red, int green, int blue, int alpha=255)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WColor</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>00336e4511fb1fd68f3c66d58c30a4c1</anchor>
      <arglist>(const WString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WColor</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>12eeb92c9177d1033e2dbd72e799ddcc</anchor>
      <arglist>(GlobalColor name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRgb</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>b3e459365133f983d702a310dd600772</anchor>
      <arglist>(int red, int green, int blue, int alpha=255)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>ea520f8d33c730809176bd555463e33a</anchor>
      <arglist>(const WString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDefault</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>1aa64740fc2dcfd7b30dfddfe2de8000</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>red</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>1f176a8557b9ebe2a9260b49acae3c3e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>green</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>c4fa50432b68fd0f1134e80cda0754c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>blue</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>1126ef11c5211e2b0ec29020ea930f36</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>alpha</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>7fe483df7025fbb2bcb13764bffd9fd1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>4812291da745a35b8e505848c27bedcd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>d26120c40c96c29c58a22cae5a92d0a5</anchor>
      <arglist>(const WColor &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>9e457a4ece07294a1eb16fc6dbc22d95</anchor>
      <arglist>(const WColor &amp;other) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WComboBox</name>
    <filename>classWt_1_1WComboBox.html</filename>
    <base>Wt::WFormWidget</base>
    <member kind="slot">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>0ed207e9616b51089d97030cc767409d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WComboBox</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>0403b5ef9b90f4868a3177245f0bbb62</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>9b2308a7d962ceb17c1ee32627b106d4</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>58fff2a9bd76213f107cbc776e15112e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentIndex</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>94b6a87121adab0abbf23562d35a716e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertItem</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>2092c15c7c0c2f77342d0abdc393ca6b</anchor>
      <arglist>(int index, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeItem</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>95db6ec7468a1eabbf95f7eba3012a54</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentIndex</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>903e2d98c6860fe09198bdb43f0566bd</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setItemText</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>8eafbaa6e87ca46a411b904b78b12db6</anchor>
      <arglist>(int index, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString</type>
      <name>currentText</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>ec0856e1bacf24fded9621054a0c357c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const WString</type>
      <name>itemText</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>f787aa7aa37e2ce2eddb499c15db52a4</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModel</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>3d10438b053fe43dcd05e66b7ca78826</anchor>
      <arglist>(WAbstractItemModel *model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModelColumn</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>5d33b665d2fa12b349fa2783ba4d2033</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>WAbstractItemModel *</type>
      <name>model</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>20b54b2271b0219c2375775538d454a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>findText</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>bcc5b03d64ed35ecbc99a00237b32a3f</anchor>
      <arglist>(const WString &amp;text, MatchFlags flags=MatchFlags(MatchExactly|MatchCaseSensitive))</arglist>
    </member>
    <member kind="function">
      <type>WValidator::State</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>36ca680db19aac3ac847a422bb821b6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>ea94ab9c31cd5030906d73a8134e6e00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; int &gt;</type>
      <name>activated</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>f3a2df3f04f146446ec76628eb7219bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; WString &gt;</type>
      <name>sactivated</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>fb8a050b6c2fd83aa2778a66f6565fdf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCompositeWidget</name>
    <filename>classWt_1_1WCompositeWidget.html</filename>
    <base>Wt::WWidget</base>
    <member kind="function">
      <type></type>
      <name>WCompositeWidget</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>43fc53dd07a7568cb153822c439c4c65</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPositionScheme</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>332ea77de7e6adb5b0ac25cc1b417ef8</anchor>
      <arglist>(PositionScheme scheme)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PositionScheme</type>
      <name>positionScheme</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>ad3efcdd7d77fbf0d914547dc2843a3d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setOffsets</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>84851e60a9bdbb6b8bc5c9d67c7e6935</anchor>
      <arglist>(const WLength &amp;offset, int sides=All)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>offset</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>55d5b1a5d852863ed29dbea622e67efc</anchor>
      <arglist>(Side s) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>976e94e38c7a9cc0f212e13a9792912e</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>width</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>3358bb9a93e5c7999c4f6d39d9880c8f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>height</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>b20c559ba960c80be16572293df7fd96</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMinimumSize</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>cf95c795e47eee85425c98509aa8e57a</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>minimumWidth</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>b14d3fa5b63d36c1df1148f49b62e92a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>minimumHeight</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>3289852d4a8a268fc8ee2c4c474bce15</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaximumSize</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>7ba5622622b118e72b9a407d10df7ece</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>maximumWidth</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>24acfbaf36c581e0d1bd07d2c477decb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>maximumHeight</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>2b37e2f64cd18ec77b0fdcd5e2adf791</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLineHeight</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>37135f5af75e17fa920d73aee823b3e8</anchor>
      <arglist>(const WLength &amp;height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>lineHeight</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>2132b8941b1f5d7febfea902f9625d39</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFloatSide</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>afed7408935752c6b0c8195ac49f2e9c</anchor>
      <arglist>(Side s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Side</type>
      <name>floatSide</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>80b012cbb3a043ed106822f708ba1e56</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setClearSides</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>b6967778ea687b8b1bd0eee3fc934c87</anchor>
      <arglist>(int sides)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>clearSides</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>bf18f9674e0ed1b8f9fae4d6528a260d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMargin</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>7f6a93e92c3e229f825570d7061136b8</anchor>
      <arglist>(const WLength &amp;margin, int sides=All)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>margin</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>06555482bd1410ce970165c71a8e22e8</anchor>
      <arglist>(Side side) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>ff347ab5d4d5cdbfb0a07aad1636f2d5</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isHidden</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>c22140fb020018e0d855ad524c6effff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPopup</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>247b586fcafc027db2ba6f1ffa37dc0b</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isPopup</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>6b2ad79236863c701e08553146987045</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setInline</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>ed7eec7b9a562b84fdb97f68f37ce694</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isInline</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a82c263fd93dda5dd21baa74b979441f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WCssDecorationStyle &amp;</type>
      <name>decorationStyle</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>d1eb3d24f374cb311ef88e43b3036503</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setStyleClass</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>f9a8abf4e8b5be186a31cd951e60bdc6</anchor>
      <arglist>(const WString &amp;styleClass)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>styleClass</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>dd2437d41d367251cbfa98fa18dedba8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVerticalAlignment</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>ab9b30f0c556bacb1211c66cd8a45ade</anchor>
      <arglist>(VerticalAlignment alignment, const WLength &amp;length=WLength())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual VerticalAlignment</type>
      <name>verticalAlignment</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>5bcbbcfaa10a5d809b30db6afcde89ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>verticalAlignmentLength</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>9f45784318e94541bb490979d418a968</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setToolTip</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a18741866255b277604b97a04730b86b</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>toolTip</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>5230e4ddc72e1fca9046e4f1166d34a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>2c7709c1b62475863600551a10728ef1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttributeValue</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>874b7a77d0785623f5059ad4dfe93266</anchor>
      <arglist>(const std::string &amp;name, const WString &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>dab4431e472ee5398e6c97420003ffdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>loaded</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>23066e3ab76634bef5ed39396603f56c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setId</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>c348ec52af6565bf37c6d52b7bae2ef2</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setImplementation</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a5a3e93a551fd41b180c6b28fa169946</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WContainerWidget</name>
    <filename>classWt_1_1WContainerWidget.html</filename>
    <base>Wt::WInteractWidget</base>
    <member kind="enumeration">
      <name>Overflow</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>bcc1911965f1669b94bd3f8fbf86a2d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OverflowVisible</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>bcc1911965f1669b94bd3f8fbf86a2d6a195ca15f69167c8f3087e5bc3e24f68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OverflowAuto</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>bcc1911965f1669b94bd3f8fbf86a2d6c8fcc7d215f329753187326459cf5856</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OverflowHidden</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>bcc1911965f1669b94bd3f8fbf86a2d6c5ba5a20547ae53b1caef3f05d0c3241</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OverflowScroll</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>bcc1911965f1669b94bd3f8fbf86a2d63c51faeacd0f1d2c6fa287f5e9932be9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WContainerWidget</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>520ba6e52a36a7f2efbef1a31a69e898</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WContainerWidget</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>bcdb141e27e673f10c8e0e693307bf94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLayout</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>1c84e0ffe330d4798f0ce217f75be08c</anchor>
      <arglist>(WLayout *layout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLayout</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>6d07b45c8e125a123e71c92f0f51dee8</anchor>
      <arglist>(WLayout *layout, int alignment)</arglist>
    </member>
    <member kind="function">
      <type>WLayout *</type>
      <name>layout</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>faba82a27836f4a82bab48e8b26ccca2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>2cfe66d9b62940f889e99538a9f478d2</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insertBefore</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>1439877a32c4b082f312fee81d139665</anchor>
      <arglist>(WWidget *widget, WWidget *before)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insertWidget</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>15ffcecaf10e6f04ec5667d2b3f0d919</anchor>
      <arglist>(int index, WWidget *widget)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeWidget</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>4292867b1872bd31c7d0c3346d988470</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>608f748cbdda763f1a11556ddad9fbe1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>indexOf</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>7cf9f4f1c261080bce30b6a6ea19014e</anchor>
      <arglist>(WWidget *widget) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>53c79a7311ffe3c132b50bdbb830856d</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>85abd4d928575717052ff7fa04c3c2c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContentAlignment</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>e62432040823863ed378541caa3fab3e</anchor>
      <arglist>(HorizontalAlignment contentAlignment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPadding</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>993eaa1300099efd3a61817d76577a7b</anchor>
      <arglist>(const WLength &amp;padding, int sides=All)</arglist>
    </member>
    <member kind="function">
      <type>WLength</type>
      <name>padding</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>326a0c9d7e4307dfd9c6979a2c441a96</anchor>
      <arglist>(Side side) const </arglist>
    </member>
    <member kind="function">
      <type>HorizontalAlignment</type>
      <name>contentAlignment</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a89ebe7354f73619d1db027809af6070</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOverflow</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>6205e2047e06508e02226770f9929a7a</anchor>
      <arglist>(Overflow overflow, int orientation=(Horizontal|Vertical))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setList</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>4b1857ba8e8a677887cd20aa657fb77f</anchor>
      <arglist>(bool list, bool ordered=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isList</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>2ba1ccbc634a57f21608c410d28bbff5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUnorderedList</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>e0db17987ae260b71d860b8f670c0c8a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOrderedList</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>f7c9ba23a66d27cb7442557284464f3f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; WScrollEvent &gt;</type>
      <name>scrolled</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>15510aff755c08fa179807f8c7eaf1a6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCssDecorationStyle</name>
    <filename>classWt_1_1WCssDecorationStyle.html</filename>
    <member kind="enumeration">
      <name>Repeat</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>6110934e7bf757aa4b2235137027b23a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RepeatXY</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>6110934e7bf757aa4b2235137027b23aabbf4cda2d8db7c076a1fcc15d5519b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RepeatX</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>6110934e7bf757aa4b2235137027b23aabb992f24c718545ae57cd5ee111bdb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RepeatY</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>6110934e7bf757aa4b2235137027b23a0aeb307a9966be9867e8cfb44dadeff6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoRepeat</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>6110934e7bf757aa4b2235137027b23a40aeeeb48d51ff0c73eb495791a1fece</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>TextDecoration</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>2028d60151aa68cca6d0d41b446b47bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Underline</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>2028d60151aa68cca6d0d41b446b47bc72c16a3d5fcc40f2c354840200f66b09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Overline</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>2028d60151aa68cca6d0d41b446b47bc5793fed852e0810c308563a99869ce26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LineThrough</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>2028d60151aa68cca6d0d41b446b47bcce9662dc82350134b5b840665f98ac2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Blink</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>2028d60151aa68cca6d0d41b446b47bc7791a60b982e799bb595b3a8970634f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WCssDecorationStyle</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>b7eebc38d1b857016e2b4e521edda0d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WCssDecorationStyle &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>7076ca4b870ba4c59c83cb8326af6e37</anchor>
      <arglist>(const WCssDecorationStyle &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCursor</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>fa12d38e05ad171e9ec718e7ae0d7b70</anchor>
      <arglist>(Cursor c)</arglist>
    </member>
    <member kind="function">
      <type>Cursor</type>
      <name>cursor</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>9a5b967e8fca0ea878e856538ca15213</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackgroundColor</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>c6bd2a8b86c8092fc437329dac09b302</anchor>
      <arglist>(WColor color)</arglist>
    </member>
    <member kind="function">
      <type>WColor</type>
      <name>backgroundColor</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>973c0007344280910c63589d468a72bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackgroundImage</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>8b97d65811773c70b903564c65fe2cb9</anchor>
      <arglist>(const std::string &amp;imageHRef, Repeat repeat=RepeatXY, int sides=0)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>backgroundImage</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>94deb7cf496f241d0d39f9eb7d099350</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Repeat</type>
      <name>backgroundImageRepeat</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>84b82fe0eeec3e09a1d0a24c79fefa6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForegroundColor</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>986681e0391d09bdf7f82d0cf283ae86</anchor>
      <arglist>(WColor color)</arglist>
    </member>
    <member kind="function">
      <type>WColor</type>
      <name>foregroundColor</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>269ea8ed4d7bf54ff4d11db611f581c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBorder</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>18b3f17fe65e32ca331ea4d948e0e06c</anchor>
      <arglist>(WBorder border, int sides=WWidget::All)</arglist>
    </member>
    <member kind="function">
      <type>WBorder</type>
      <name>border</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>35c4ef3dc9cbd213bba8abf5ef307e83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFont</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>876f3f4a081622b0500d02032b56b659</anchor>
      <arglist>(const WFont &amp;font)</arglist>
    </member>
    <member kind="function">
      <type>WFont &amp;</type>
      <name>font</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>5e552350f0955212ea237994a98638dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextDecoration</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>b1d1141bc67501f1fc217db7ecd45fb3</anchor>
      <arglist>(int decoration)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>textDecoration</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>0e539c4d21dc7d7954e647a9af7d4d61</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCssRule</name>
    <filename>classWt_1_1WCssRule.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WCssRule</name>
      <anchorfile>classWt_1_1WCssRule.html</anchorfile>
      <anchor>fcb8249f4038c7185eb37fcecaca6675</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>selector</name>
      <anchorfile>classWt_1_1WCssRule.html</anchorfile>
      <anchor>10b8706772e9a7616db278a73fe82096</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WCssStyleSheet *</type>
      <name>sheet</name>
      <anchorfile>classWt_1_1WCssRule.html</anchorfile>
      <anchor>3740e3360c7185ff2a3838c606d34cd9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>modified</name>
      <anchorfile>classWt_1_1WCssRule.html</anchorfile>
      <anchor>15ca55980b693ac64e70ca5f0d8cbf5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string</type>
      <name>declarations</name>
      <anchorfile>classWt_1_1WCssRule.html</anchorfile>
      <anchor>be99bca6582d1ec43b7135f3a28956b4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WCssRule</name>
      <anchorfile>classWt_1_1WCssRule.html</anchorfile>
      <anchor>dc9c4088ba70dae3f82175a370677ee9</anchor>
      <arglist>(const std::string &amp;selector)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCssTemplateRule</name>
    <filename>classWt_1_1WCssTemplateRule.html</filename>
    <base>Wt::WCssRule</base>
    <member kind="function">
      <type></type>
      <name>WCssTemplateRule</name>
      <anchorfile>classWt_1_1WCssTemplateRule.html</anchorfile>
      <anchor>e05ee2d960f007cda1db3fa3bc2db60d</anchor>
      <arglist>(const std::string &amp;selector)</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>templateWidget</name>
      <anchorfile>classWt_1_1WCssTemplateRule.html</anchorfile>
      <anchor>ebf91a4bcb9c9b737e20ce6177624553</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>declarations</name>
      <anchorfile>classWt_1_1WCssTemplateRule.html</anchorfile>
      <anchor>b10a2ebfc6f80cf3357c963716868598</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCssTextRule</name>
    <filename>classWt_1_1WCssTextRule.html</filename>
    <base>Wt::WCssRule</base>
    <member kind="function">
      <type></type>
      <name>WCssTextRule</name>
      <anchorfile>classWt_1_1WCssTextRule.html</anchorfile>
      <anchor>437f6c4f45fd1388728ed37d6aa214c4</anchor>
      <arglist>(const std::string &amp;selector, const WString &amp;declarations)</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>declarations</name>
      <anchorfile>classWt_1_1WCssTextRule.html</anchorfile>
      <anchor>5950660406de9b1e3d17082116718649</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCssStyleSheet</name>
    <filename>classWt_1_1WCssStyleSheet.html</filename>
    <member kind="function">
      <type></type>
      <name>WCssStyleSheet</name>
      <anchorfile>classWt_1_1WCssStyleSheet.html</anchorfile>
      <anchor>e94dfb465a5d4f7eb405842dfda08d32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WCssStyleSheet</name>
      <anchorfile>classWt_1_1WCssStyleSheet.html</anchorfile>
      <anchor>aa08125ae86aa489b65edf98ffa984f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WCssTextRule *</type>
      <name>addRule</name>
      <anchorfile>classWt_1_1WCssStyleSheet.html</anchorfile>
      <anchor>d2c989b38a7ee084a7c9b681e16e8a8c</anchor>
      <arglist>(const std::string &amp;selector, const WString &amp;declarations, const std::string &amp;ruleName=std::string())</arglist>
    </member>
    <member kind="function">
      <type>WCssTemplateRule *</type>
      <name>addRule</name>
      <anchorfile>classWt_1_1WCssStyleSheet.html</anchorfile>
      <anchor>3ecf53815b4044ea0337db6ce90fb5c9</anchor>
      <arglist>(const std::string &amp;selector, const WCssDecorationStyle &amp;style, const std::string &amp;ruleName=std::string())</arglist>
    </member>
    <member kind="function">
      <type>WCssRule *</type>
      <name>addRule</name>
      <anchorfile>classWt_1_1WCssStyleSheet.html</anchorfile>
      <anchor>fba6dc2162b71ee0271545739e374427</anchor>
      <arglist>(WCssRule *rule, const std::string &amp;ruleName=std::string())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDefined</name>
      <anchorfile>classWt_1_1WCssStyleSheet.html</anchorfile>
      <anchor>e4a8dc5e77f2d90f7ca51af0194e8b0c</anchor>
      <arglist>(const std::string &amp;ruleName) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeRule</name>
      <anchorfile>classWt_1_1WCssStyleSheet.html</anchorfile>
      <anchor>ac9a375cdf712c604977d2e39ab16bb3</anchor>
      <arglist>(WCssRule *rule)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::InvalidDateException</name>
    <filename>classWt_1_1InvalidDateException.html</filename>
    <member kind="function">
      <type>const char *</type>
      <name>what</name>
      <anchorfile>classWt_1_1InvalidDateException.html</anchorfile>
      <anchor>615608cd6869cf70c1027e2654f8b84e</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WDate</name>
    <filename>classWt_1_1WDate.html</filename>
    <member kind="function">
      <type></type>
      <name>WDate</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>88823f7de1cc16e9211015733f15eac3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDate</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>704860c600ad3d72bb2d858c3cfed3b1</anchor>
      <arglist>(long modifiedJulianDays)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDate</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>e88e64cff5fa3f28283f26fa7c8e4b99</anchor>
      <arglist>(int year, int month, int day)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDate</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>d9f497db41a525c9955aa6c45fa9a692</anchor>
      <arglist>(int year, int month, int day)</arglist>
    </member>
    <member kind="function">
      <type>WDate</type>
      <name>addDays</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>55c4709c6cec54f8dd3e69355381630f</anchor>
      <arglist>(int ndays) const </arglist>
    </member>
    <member kind="function">
      <type>WDate</type>
      <name>addMonths</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>d85d82a3aa5c2613550e9cf52983d66b</anchor>
      <arglist>(int nmonths) const </arglist>
    </member>
    <member kind="function">
      <type>WDate</type>
      <name>addYears</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>60915b6de93a109dccbcaa589890370e</anchor>
      <arglist>(int nyears) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a2d504303dfd4768b6f1ce942fb348be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>6e7f68474aa2fd9570cede81c85f6e3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>year</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>69b9c1a505490006774614a3b5a402f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>month</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>9eb0594dde9b3c92ecf66d399558dd81</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>day</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>7e0d6855b08d7293e55c9929ec7737ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dayOfWeek</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>933d7b11edbbc207dfe0baaabeeceb57</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>daysTo</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>fb8eb54c90bc928847e3d94b0ea61d3b</anchor>
      <arglist>(const WDate &amp;d) const </arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>modifiedJulianDay</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>87b73fce0a5a8b564071792903df3e7a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>aa48849f8e1cd2bb6dacd5a675fc8bb9</anchor>
      <arglist>(const WDate &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>29ab4d83fc8e27fa37e64c2ba8ad1d96</anchor>
      <arglist>(const WDate &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>b450e46b3da2f0662c946f8952d0b187</anchor>
      <arglist>(const WDate &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>26f44d313ed4a8ba899879375020dbd8</anchor>
      <arglist>(const WDate &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>ef3b62770bdbcb7335fd16871d0651f1</anchor>
      <arglist>(const WDate &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>bf0fc8e2ec380e2bbf96467283877cf6</anchor>
      <arglist>(const WDate &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toString</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>1d9b6450f5f6126722f07c971ea9e4c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toString</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>2be436babc9c5cb836901f4b2805f7ff</anchor>
      <arglist>(const WString &amp;format) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WDate</type>
      <name>fromString</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>86383757788870ff2f22bd29536336b7</anchor>
      <arglist>(const WString &amp;s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WDate</type>
      <name>fromString</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>25e1f637674f18ebb4fa528d107b3d46</anchor>
      <arglist>(const WString &amp;s, const WString &amp;format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WDate</type>
      <name>currentDate</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>6221e680cd7b1f7d324f1f1932e4a3db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WDate</type>
      <name>currentServerDate</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>57a614e3408f39c70605027fe3e3f3f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>shortDayName</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>01ad704115e2018a53ede745324d4086</anchor>
      <arglist>(int weekday)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>shortMonthName</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>54d59b0ffe528151de60a6880f728fa9</anchor>
      <arglist>(int month)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>longDayName</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>40a03ad1d529da1708b47a9f2d472061</anchor>
      <arglist>(int weekday)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>longMonthName</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>f33b02874b9b683239def4d9e7f37e9e</anchor>
      <arglist>(int month)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WDatePicker</name>
    <filename>classWt_1_1WDatePicker.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WDatePicker</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>662b5c1d13d97c836f05372f3a1a3375</anchor>
      <arglist>(WInteractWidget *displayWidget, WLineEdit *forEdit, bool i18n=false, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFormat</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>4eea10671eea698aea906802b7f67fde</anchor>
      <arglist>(const WString &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>format</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>deaf91b8f2319a28f0090d0a4a07cd68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WCalendar *</type>
      <name>calendar</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>6fb5e37c7b81d104c21f2c0f587fe6aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WLineEdit *</type>
      <name>lineEdit</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>50e3f4c7c700e0628fccebe0cb5d8268</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WInteractWidget *</type>
      <name>displayWidget</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>f91c0bb2fb868faf669380275eb8c667</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WDate</type>
      <name>date</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>bfeb0d23dece4cf7fa7e9b65c0376f73</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDate</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>dc47d5a1b0faf43dfed193f22f93c559</anchor>
      <arglist>(const WDate &amp;date)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WDateValidator</name>
    <filename>classWt_1_1WDateValidator.html</filename>
    <base>Wt::WValidator</base>
    <member kind="function">
      <type></type>
      <name>WDateValidator</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>d1df00f1fc29681bd8722952bac6da50</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDateValidator</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>652b313001a1544bfaecdada2464d26b</anchor>
      <arglist>(const WDate &amp;bottom, const WDate &amp;top, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDateValidator</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>f6c20524605414a8bb242acb718da6f1</anchor>
      <arglist>(const WString &amp;format, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDateValidator</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>77b6801a9e597d4ddc08547a185364ae</anchor>
      <arglist>(const WString &amp;format, const WDate &amp;bottom, const WDate &amp;top, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBottom</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>65ef611c859119da8eb71f2020599077</anchor>
      <arglist>(const WDate &amp;bottom)</arglist>
    </member>
    <member kind="function">
      <type>const WDate &amp;</type>
      <name>bottom</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>7452061f89fcc542cd38acbc05f8fa6d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTop</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>e6354b791d536a6de2d8f619f51e560f</anchor>
      <arglist>(const WDate &amp;top)</arglist>
    </member>
    <member kind="function">
      <type>const WDate &amp;</type>
      <name>top</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>07374f374ac117bcd42b8e741ed565d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFormat</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>cee1f3949840c056c60bf38e78b911e4</anchor>
      <arglist>(const WString &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>format</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>72c952300e99cd9384c713b92ddfcc07</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>183f525d14d42195c6ef83cf16f87fc2</anchor>
      <arglist>(WString &amp;input, int &amp;pos) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createExtConfig</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>edca72a61fc33a310ec7a655aef7877a</anchor>
      <arglist>(std::ostream &amp;config) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidNotADateText</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>73be0b02ae9d2532a0b951ea51e4f053</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidNotADateText</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>b56b3eb0258272cbfba1df195d582011</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidTooEarlyText</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>d1ffa06a037d203da6f7c6e121a066be</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidTooEarlyText</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>dc07d7402224e7d6f65a3e1e5a60e59c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidTooLateText</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>16559b0e658bf4211d9dc797455c930e</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidTooLateText</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>373d5577bcd4bef7e144ff6c68783f68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WDate</type>
      <name>parse</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>bd99f0290618c49cd31344dbf86731a5</anchor>
      <arglist>(const WString &amp;input)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>javaScriptValidate</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>de82d221d04556f2d219d1b9b80bce45</anchor>
      <arglist>(const std::string &amp;jsRef) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WDefaultLayout</name>
    <filename>classWt_1_1WDefaultLayout.html</filename>
    <base>Wt::WLayout</base>
    <member kind="function">
      <type></type>
      <name>WDefaultLayout</name>
      <anchorfile>classWt_1_1WDefaultLayout.html</anchorfile>
      <anchor>01f835b2194ad6c57abbbd76bbe9ef6f</anchor>
      <arglist>(WWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WDefaultLayout</name>
      <anchorfile>classWt_1_1WDefaultLayout.html</anchorfile>
      <anchor>cecb272acef4ae61ab28f023950b70a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WDefaultLayout.html</anchorfile>
      <anchor>281200191e8568c0dd8f7f355640cfbf</anchor>
      <arglist>(WLayoutItem *item)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeItem</name>
      <anchorfile>classWt_1_1WDefaultLayout.html</anchorfile>
      <anchor>2172639feddcd11fd319eb481a5d20a6</anchor>
      <arglist>(WLayoutItem *item)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLayoutItem *</type>
      <name>itemAt</name>
      <anchorfile>classWt_1_1WDefaultLayout.html</anchorfile>
      <anchor>865e47b372c73f913f5a1c7d7124bd1e</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>indexOf</name>
      <anchorfile>classWt_1_1WDefaultLayout.html</anchorfile>
      <anchor>b07de0e688076a6d722c2558a5675337</anchor>
      <arglist>(WLayoutItem *item) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WDefaultLayout.html</anchorfile>
      <anchor>2c662db2763510aa0e47a84c098dcc62</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WDefaultLoadingIndicator</name>
    <filename>classWt_1_1WDefaultLoadingIndicator.html</filename>
    <base>Wt::WText</base>
    <base>Wt::WLoadingIndicator</base>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WDefaultLoadingIndicator.html</anchorfile>
      <anchor>0c0ad40f2d0638cc6d51dbc5e97fac4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMessage</name>
      <anchorfile>classWt_1_1WDefaultLoadingIndicator.html</anchorfile>
      <anchor>0b4731e54dc060bf0451b9429a973678</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WDialog</name>
    <filename>classWt_1_1WDialog.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="enumeration">
      <name>DialogCode</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>6f4bab24bf9e39be422bb6d9637268e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Rejected</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>6f4bab24bf9e39be422bb6d9637268e68279eafdc9665e6c91d98d2b512a962c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Accepted</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>6f4bab24bf9e39be422bb6d9637268e6d4852d715c07070ca1b117cb7e263840</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDialog</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>b31907fa4f641192b2720ba735226d58</anchor>
      <arglist>(const WString &amp;windowTitle=WString())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WDialog</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>97fa6bfc8c31a3bf98284ad66b2df738</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCaption</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>626d5109624e7442f9a96310b6919a5a</anchor>
      <arglist>(const WString &amp;caption)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>caption</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>f56bc5d90c6da742faa454ddfed4ce00</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWindowTitle</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>e0923afc12895002f30b8ee12ab91aae</anchor>
      <arglist>(const WString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>windowTitle</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>cf71bbc665dff57a7af201b4f32f59f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitleBarEnabled</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>b8ae8763648de12a67ada4b8237154a9</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTitleBarEnabled</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a23c6db155044c4f2c49269a874dd5cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WContainerWidget *</type>
      <name>contents</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>10f2f5df7ee5762845bf7ba334f170ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DialogCode</type>
      <name>exec</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>e56cf798aba9f09a8869df50d3f334a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>done</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>8d0a8725d03e5d7d144ef015983a8d08</anchor>
      <arglist>(DialogCode r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>fab6f75ebb2d2970ebe0bbf1cf19f288</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reject</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>fcff2ea14c4ae79b2fc7bac1a86b0062</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DialogCode</type>
      <name>result</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>469ba179a2d620e2f7f6e0142f891c27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a3c85e704c0d7825bd342713f50b35f9</anchor>
      <arglist>(bool hidden)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>8c5d0daa0a183285e38d5d5c067f4680</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; DialogCode &gt;</type>
      <name>finished</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>2eedf276f80c2c4fb1284a4c83b88008</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WDoubleValidator</name>
    <filename>classWt_1_1WDoubleValidator.html</filename>
    <base>Wt::WValidator</base>
    <member kind="function">
      <type></type>
      <name>WDoubleValidator</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>60ac6a9c4da70a17daa84a41d04b87dd</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDoubleValidator</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>3a7b569012485ce6a217c47ffb26af24</anchor>
      <arglist>(double minimum, double maximum, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>bottom</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a1f6b0952651e5503e6ff6657bd09180</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBottom</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>520fe2f7859670b0c30144dbc4990e98</anchor>
      <arglist>(double bottom)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>top</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>708124404d7088f51f458bee1641288d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTop</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>931cc4c5d0409093f4a6fd8ab023ee73</anchor>
      <arglist>(double top)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRange</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>160f579d7884d02786a1cc36ec3ecca1</anchor>
      <arglist>(double bottom, double top)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>0156c7432383094f91028696a75ffd4a</anchor>
      <arglist>(WString &amp;input, int &amp;pos) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createExtConfig</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>497f1ef7ea1b403665b9f1b7685954d4</anchor>
      <arglist>(std::ostream &amp;config) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidNotANumberText</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>86e8f0e07b6c861af2e656575a329d47</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidNotANumberText</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>474314e509e47d2a577a26841fe4a752</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidTooSmallText</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>119b5f1c2396f8d595c2607e76d27b1a</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidTooSmallText</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>13fb51475bab73ea71405f6fa9158c6d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidTooLargeText</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>6c3fa94752583d7e2de640cf6b91cef7</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidTooLargeText</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a0cf3c02568e85e24105c073d8ee319b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>javaScriptValidate</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>590267f8600a399b07133da5cec299b4</anchor>
      <arglist>(const std::string &amp;jsRef) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WEnvironment</name>
    <filename>classWt_1_1WEnvironment.html</filename>
    <member kind="enumeration">
      <name>ContentType</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>b293698bb21313768c279dbe3a9803b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHTML1</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>b293698bb21313768c279dbe3a9803b62088cf5865710d6b46092a96b8505288</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HTML4</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>b293698bb21313768c279dbe3a9803b65370f3c22a92a80c345c545d902dc6c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;</type>
      <name>ArgumentValues</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>7d2ebe5e9bf19cd4349c2eec2d9666ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::string, ArgumentValues &gt;</type>
      <name>ArgumentMap</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>b4ee5c560295718c8a963b575aaeec57</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>CookieMap</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>163671f35f1080badcb791a826f5fadd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const ArgumentMap &amp;</type>
      <name>arguments</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>4a1bda8b611d1cbcb770daea6879fb79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ArgumentValues &amp;</type>
      <name>getArgument</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>0e7279a08040653a4419c2832bde5b94</anchor>
      <arglist>(const std::string &amp;argument_name) const </arglist>
    </member>
    <member kind="function">
      <type>const CookieMap &amp;</type>
      <name>cookies</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>30810ecfa507bc6f655c38a6f218dc92</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>getCookie</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>fc04b0733be08d71a41bad066568ca56</anchor>
      <arglist>(const std::string &amp;cookie_name) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsCookies</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>bf06c6d85be1b482c037f80e63890f3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>javaScript</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>9ad466ecabd71a039cbfbee137867849</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ajax</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>f39702064f91a549514f28de713b7cd2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dpiScale</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>06c074249363d4ef4b90bc9cbae96261</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>locale</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>42b10cde31c3df634dc753b5dbd1e800</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>hostName</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>d798f03cb67b859cc42ed2e1ced82fcd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>urlScheme</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>5dd3ea667a61c3bbc2c6e1e3a879dc2f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>userAgent</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>3ac010296af1ee9dbcbfecad96dc5a0f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>referer</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a68ac8744d2dc060d6c66ab22fbadbe1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>accept</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>9160e82a73d21aa1a0a76bf5eeeac886</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>agentIsSpiderBot</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>be062ba13bf3df36e06d611e04b66603</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>serverSignature</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>8d2c52cbf0c79d315088e56c8e5fe224</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>serverSoftware</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>d0d4a99a818ca7cb851ef43187c9ade7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>serverAdmin</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a407aa90c7a3ab9ecb46de0ed9451797</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>clientAddress</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>3cd4cc541b27cfe4f937d2b945f5ff6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>pathInfo</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>db17bb1f17c56f78418e06872d531c24</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>internalPath</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>cb2ba1f1f88e9cd6b7a57a2e51518ec6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>libraryVersion</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>bf911f096b978f4e842596c7401052de</anchor>
      <arglist>(int &amp;series, int &amp;major, int &amp;minor) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>sessionId</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>41d6fa0197d24e92cc463cc9d5815f10</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getCgiValue</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>3aa8ecc5ee3b7c7298ac33c43b65ec1a</anchor>
      <arglist>(const std::string &amp;varName) const </arglist>
    </member>
    <member kind="function">
      <type>ContentType</type>
      <name>contentType</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>375dfdc05e69eb22b8b644d2fada4d41</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>libraryVersion</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>8d55627d202b6d8866c7703a6e9dddf1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WMouseEvent</name>
    <filename>classWt_1_1WMouseEvent.html</filename>
    <member kind="enumeration">
      <name>Button</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>67958762760e6aa6973109a7b3d46210</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LeftButton</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>67958762760e6aa6973109a7b3d46210fbce5dfa6d97366c49bd9a7aa1c2b7ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MiddleButton</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>67958762760e6aa6973109a7b3d46210b4d71def93cd1b2482a748e576949758</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RightButton</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>67958762760e6aa6973109a7b3d462103680e4c90e452cb6b29a7d4df8c41c69</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WMouseEvent</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>d99367bf6494aea5f92869d32aaecf1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Button</type>
      <name>button</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>3cb45d106522eaa8b597b2e274053e90</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>modifiers</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>e8e970647abc2a978ecdc56e223690b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Coordinates</type>
      <name>document</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>76d0dffbee01451f043ff603eb133334</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Coordinates</type>
      <name>window</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>eac308aadc18ee38d80e49d9357bdcea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Coordinates</type>
      <name>screen</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>3a6f116184b391a58bbf7bd2fccbacd0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Coordinates</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>f875dd9a33e6a5dd7cf6aa9dd927e8ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Coordinates</type>
      <name>dragDelta</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>bc8cd49bcbf8244ee6f92a16eca7561b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>altKey</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>322292eed48c4d640f172648c660ef49</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>metaKey</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>fca8f1bed7ec531f0b7b4c01173eb1cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ctrlKey</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>8a25240a3b4a7b296d5c333c03a1fb75</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shiftKey</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>53962bfb61abd94b0a96568ed322a68d</anchor>
      <arglist>() const </arglist>
    </member>
    <class kind="struct">Wt::WMouseEvent::Coordinates</class>
  </compound>
  <compound kind="struct">
    <name>Wt::WMouseEvent::Coordinates</name>
    <filename>structWt_1_1WMouseEvent_1_1Coordinates.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>x</name>
      <anchorfile>structWt_1_1WMouseEvent_1_1Coordinates.html</anchorfile>
      <anchor>3146f868b8a1d5de39cec1bafa8d97c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>y</name>
      <anchorfile>structWt_1_1WMouseEvent_1_1Coordinates.html</anchorfile>
      <anchor>7547856ef135332651ba5d782f411ea6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WKeyEvent</name>
    <filename>classWt_1_1WKeyEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>WKeyEvent</name>
      <anchorfile>classWt_1_1WKeyEvent.html</anchorfile>
      <anchor>93efdf1091659752a18f107f2c7612e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Key</type>
      <name>key</name>
      <anchorfile>classWt_1_1WKeyEvent.html</anchorfile>
      <anchor>1a1dd4cf1ac3cc427505c2660cbf069d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>modifiers</name>
      <anchorfile>classWt_1_1WKeyEvent.html</anchorfile>
      <anchor>5a5b32bcf3a9d454e6d1a297b682fb8e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>charCode</name>
      <anchorfile>classWt_1_1WKeyEvent.html</anchorfile>
      <anchor>be057e50123becd86400abeaea8b5e9e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>text</name>
      <anchorfile>classWt_1_1WKeyEvent.html</anchorfile>
      <anchor>ef6d350c375bd06e7df8aae0898aa744</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>keyCode</name>
      <anchorfile>classWt_1_1WKeyEvent.html</anchorfile>
      <anchor>313eda54335c00c80827b39cdae15ef2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>altKey</name>
      <anchorfile>classWt_1_1WKeyEvent.html</anchorfile>
      <anchor>7d382409feb5545edb8bb0561a144006</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>metaKey</name>
      <anchorfile>classWt_1_1WKeyEvent.html</anchorfile>
      <anchor>fb60842e8e3797a8d0079cf774b81496</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ctrlKey</name>
      <anchorfile>classWt_1_1WKeyEvent.html</anchorfile>
      <anchor>334af6e260dda1c17e5876de7405851a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shiftKey</name>
      <anchorfile>classWt_1_1WKeyEvent.html</anchorfile>
      <anchor>ef80abe3417494c7ef95066859bbf4f3</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WDropEvent</name>
    <filename>classWt_1_1WDropEvent.html</filename>
    <member kind="function">
      <type>WObject *</type>
      <name>source</name>
      <anchorfile>classWt_1_1WDropEvent.html</anchorfile>
      <anchor>dfe27a00e34b7322a52bc7dc73d4d5af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>mimeType</name>
      <anchorfile>classWt_1_1WDropEvent.html</anchorfile>
      <anchor>14e3c3a1cb956319cefe63bddc29a0de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const WMouseEvent &amp;</type>
      <name>mouseEvent</name>
      <anchorfile>classWt_1_1WDropEvent.html</anchorfile>
      <anchor>8c4ed93cd012f2dbf9b9041c4bb926ab</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WScrollEvent</name>
    <filename>classWt_1_1WScrollEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>WScrollEvent</name>
      <anchorfile>classWt_1_1WScrollEvent.html</anchorfile>
      <anchor>1b1dc654c40ecdfd742936e663728610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scrollX</name>
      <anchorfile>classWt_1_1WScrollEvent.html</anchorfile>
      <anchor>f4f336af6117589e8a6a43642b9c70d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scrollY</name>
      <anchorfile>classWt_1_1WScrollEvent.html</anchorfile>
      <anchor>093916a7dcca58334c8c290f7d783ccf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>viewportWidth</name>
      <anchorfile>classWt_1_1WScrollEvent.html</anchorfile>
      <anchor>fee0cf410002fb82cc1f8b60e2a83911</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>viewportHeight</name>
      <anchorfile>classWt_1_1WScrollEvent.html</anchorfile>
      <anchor>90a726129be2e70944cea3d605eadead</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WFileResource</name>
    <filename>classWt_1_1WFileResource.html</filename>
    <base>Wt::WResource</base>
    <member kind="function">
      <type></type>
      <name>WFileResource</name>
      <anchorfile>classWt_1_1WFileResource.html</anchorfile>
      <anchor>e22dfa18b675f7b5d048853babf0bf89</anchor>
      <arglist>(const std::string &amp;mimeType, const std::string &amp;fileName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WFileResource</name>
      <anchorfile>classWt_1_1WFileResource.html</anchorfile>
      <anchor>60bcdd2873274df4143c79444d178004</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFileName</name>
      <anchorfile>classWt_1_1WFileResource.html</anchorfile>
      <anchor>02a899ebef188895c4f1707e529c0ef3</anchor>
      <arglist>(const std::string &amp;fileName)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>fileName</name>
      <anchorfile>classWt_1_1WFileResource.html</anchorfile>
      <anchor>eec71fb64b2a1bef2ebb7f61f30639e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>mimeType</name>
      <anchorfile>classWt_1_1WFileResource.html</anchorfile>
      <anchor>b01b1ad9dea02d17a87d44c6dcae4c1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMimeType</name>
      <anchorfile>classWt_1_1WFileResource.html</anchorfile>
      <anchor>72db1d052a130e22a99e60e064e30006</anchor>
      <arglist>(const std::string &amp;mimeType)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const std::string</type>
      <name>resourceMimeType</name>
      <anchorfile>classWt_1_1WFileResource.html</anchorfile>
      <anchor>7dae7d49059ae0f4a3cede6394a03086</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>streamResourceData</name>
      <anchorfile>classWt_1_1WFileResource.html</anchorfile>
      <anchor>aa5467843db6e6ed51592c652f58a9b0</anchor>
      <arglist>(std::ostream &amp;stream, const ArgumentMap &amp;arguments)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WFileUpload</name>
    <filename>classWt_1_1WFileUpload.html</filename>
    <base>Wt::WWebWidget</base>
    <member kind="slot">
      <type>void</type>
      <name>upload</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>c17094f2fd6ae8cac1035161f7d80b9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFileUpload</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>71fa85fc383df6e36c2bcf4d877b63ec</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFileTextSize</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>c7ad1324c86d378da9da9740a631a662</anchor>
      <arglist>(int chars)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fileTextSize</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>39a9998018c87f25d7d884a3a0418cf4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>spoolFileName</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>98bff1bc07a5d59086455a45805e43bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>clientFileName</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>8fc5e7671594ffd178e0930554e85f15</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>contentDescription</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>fc6902cab1ca352a06687f900f2839aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stealSpooledFile</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>541d634e9f9e546f59417682811f01ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>emptyFileName</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>4207ca5ea74962583d146409301c3416</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUploaded</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>ba40acced8b3ab758f53d17f15afcf38</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; void &gt;</type>
      <name>uploaded</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>de6b28bd3c44c2f5032c49117da1f846</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; int &gt;</type>
      <name>fileTooLarge</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>ee98239620a270b8635e5e984d710b4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; void &gt;</type>
      <name>changed</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>3662d0d6baffce1924727efa19449a2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>htmlText</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>07036f11bee717cd6390af861f0cbb66</anchor>
      <arglist>(std::ostream &amp;out)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WFitLayout</name>
    <filename>classWt_1_1WFitLayout.html</filename>
    <base>Wt::WLayout</base>
    <member kind="function">
      <type></type>
      <name>WFitLayout</name>
      <anchorfile>classWt_1_1WFitLayout.html</anchorfile>
      <anchor>6d164d46d0d57581b175cd424fd14a02</anchor>
      <arglist>(WWidget *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WFitLayout.html</anchorfile>
      <anchor>c961be1e914193e5f46992ef326d0939</anchor>
      <arglist>(WLayoutItem *)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeItem</name>
      <anchorfile>classWt_1_1WFitLayout.html</anchorfile>
      <anchor>fd4c47377c0aa0a3a55db13a0ff2bae2</anchor>
      <arglist>(WLayoutItem *)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLayoutItem *</type>
      <name>itemAt</name>
      <anchorfile>classWt_1_1WFitLayout.html</anchorfile>
      <anchor>9a058c59e6fc3d7526d1d3c57c940049</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>indexOf</name>
      <anchorfile>classWt_1_1WFitLayout.html</anchorfile>
      <anchor>68002f0345e96fdfec1ccaa823c52a3e</anchor>
      <arglist>(WLayoutItem *item) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WFitLayout.html</anchorfile>
      <anchor>f8f23224493fcb1958fa676fd079b5e7</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WFont</name>
    <filename>classWt_1_1WFont.html</filename>
    <member kind="enumeration">
      <name>GenericFamily</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>29dc2c43365227caeb3d151dc849f9f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Default</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>29dc2c43365227caeb3d151dc849f9f4dbffc4d9f5fa5f34900aebcd0b15bde4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Serif</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>29dc2c43365227caeb3d151dc849f9f476dafddb4003414cd9c5581a2d0cfde8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SansSerif</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>29dc2c43365227caeb3d151dc849f9f42f4002af014819d1eb4843d40d0dc22d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Cursive</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>29dc2c43365227caeb3d151dc849f9f434fccfcaa60090f00390d9d0b8959c86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Fantasy</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>29dc2c43365227caeb3d151dc849f9f424fd87a4f64979b28c42bbb9b73f2042</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Monospace</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>29dc2c43365227caeb3d151dc849f9f4dbcd306de435d5aecc6f80255d8924f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Style</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>ed1f6f3ed136085227e54c74f3bcbcbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NormalStyle</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>ed1f6f3ed136085227e54c74f3bcbcbd8332fa5755d4809540bcc57c86b55b0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Italic</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>ed1f6f3ed136085227e54c74f3bcbcbda807084ea3007cb08b98a2593002f5fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Oblique</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>ed1f6f3ed136085227e54c74f3bcbcbd92c065dd7e86795818dceb6db5fdb96b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Variant</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>64cb5e27be68b9f210d5302e23f0b8c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NormalVariant</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>64cb5e27be68b9f210d5302e23f0b8c798a079ddb687a3d916c6cfd94360302b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SmallCaps</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>64cb5e27be68b9f210d5302e23f0b8c76d9be1f2c12a2e1b4ce13537505f427c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Weight</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>87c97b2df78c225a081b916178138a2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NormalWeight</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>87c97b2df78c225a081b916178138a2f4d5997214d1f422668a289ecaaa7392e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bold</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>87c97b2df78c225a081b916178138a2fbcc33bf83e80792439727f8989258fec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bolder</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>87c97b2df78c225a081b916178138a2f8cb7f0f4ce9e4a02d1afc05856558bcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Lighter</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>87c97b2df78c225a081b916178138a2f5d62f7b71f48269896532ec567701353</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Value</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>87c97b2df78c225a081b916178138a2fd24130ba55c0c97f126c9640c457bb81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Size</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>4d90d27f5888987091261e7ac227146f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XXSmall</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>4d90d27f5888987091261e7ac227146fa6439821f56d3b2f609f5af6cd506570</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XSmall</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>4d90d27f5888987091261e7ac227146fb152ee83d3060fef7504981ea753d272</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Small</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>4d90d27f5888987091261e7ac227146f15bccc177a5d27332e245d5a0d298eaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Medium</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>4d90d27f5888987091261e7ac227146fd7898454d7c34adf5ca205639a77c892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Large</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>4d90d27f5888987091261e7ac227146f1fbdeb7721717c1098f918f232cc96b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLarge</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>4d90d27f5888987091261e7ac227146f7361b98849128d4eade8f16375ef150c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XXLarge</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>4d90d27f5888987091261e7ac227146fc0dbf95df3f79bb4780841669d776f3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Smaller</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>4d90d27f5888987091261e7ac227146f33310a2d66ef90bcce466920b0884538</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Larger</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>4d90d27f5888987091261e7ac227146fcf27ef48ceb695bee7e8b6087825e159</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FixedSize</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>4d90d27f5888987091261e7ac227146fb8fde835312f7e4aa67998564f292f10</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFont</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>9839e47278aa3da5b613d29d6643e106</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFamily</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>d1261884333178479d420391a91d1a58</anchor>
      <arglist>(GenericFamily genericFamily, const WString specificFamilies=WString())</arglist>
    </member>
    <member kind="function">
      <type>GenericFamily</type>
      <name>genericFamily</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>27f8c5ebedfef28401f6c047da3794e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>specificFamilies</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>3da83e0629520dc11a8c6701ac6aa324</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyle</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>1a13d9f8bfe72ebc6e9a5c08be58d881</anchor>
      <arglist>(Style style)</arglist>
    </member>
    <member kind="function">
      <type>Style</type>
      <name>style</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>ad6e63a8b1983de676d3490c9f370e11</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVariant</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>2d4e225bebbc447727cd271d3c2c227d</anchor>
      <arglist>(Variant variant)</arglist>
    </member>
    <member kind="function">
      <type>Variant</type>
      <name>variant</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>e4890c91c42f93ff8ea517e59960245d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWeight</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>c27d9f5d3a23115e3881a2d0ac9cb771</anchor>
      <arglist>(Weight weight, int value=400)</arglist>
    </member>
    <member kind="function">
      <type>Weight</type>
      <name>weight</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>59074e98ba2d7bfb8a88b14126f7a545</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weightValue</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>9fb38299d26f63e5915f50e42a4e2996</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSize</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>2f7264c5064a3fea68e065c4c0316459</anchor>
      <arglist>(Size size, const WLength &amp;fixedSize=WLength())</arglist>
    </member>
    <member kind="function">
      <type>Size</type>
      <name>size</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>27bf3326d9829276598808bcbefb63e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WLength</type>
      <name>fixedSize</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a93cf00e45120cc6a6ccbb6334e913d0</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WFormWidget</name>
    <filename>classWt_1_1WFormWidget.html</filename>
    <base>Wt::WInteractWidget</base>
    <member kind="slot">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>d26d15f452d47832a4467608977f03f5</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>enable</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>b76701b6259ff1793d19d204474bc571</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>disable</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>57e9b62c65c153aa1a2f5612352d7ccf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setFocus</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>fe33f5c3658ddbd08fec9f6c203c578b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFormWidget</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>63194da5d63a46188b38bbda2936cf61</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WFormWidget</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>f9027662449d08a70e361611f6fcf4c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WLabel *</type>
      <name>label</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>82f0eaf7fb35132644b429e2b3b8930f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>f7db6da14a0530408a7b68668d0d11ff</anchor>
      <arglist>(bool hidden)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabled</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>605f2beb7b90c795d26bc129b3ff1aef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValidator</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a773d16013d6959149ce5081e84b259c</anchor>
      <arglist>(WValidator *validator)</arglist>
    </member>
    <member kind="function">
      <type>WValidator *</type>
      <name>validator</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>4643be79e2c92bc448ce46e7d314335b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WValidator::State</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>7960606393d6158abb4a2d8c9d8fd2ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; void &gt;</type>
      <name>changed</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>093e5922c52c5583935ff341c6579bb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; void &gt;</type>
      <name>selected</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>bf209c1b608e5ceadc58f6dc638fff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; void &gt;</type>
      <name>blurred</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a6570df24d5c94ea7351f57d8b035e77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; void &gt;</type>
      <name>focussed</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>466063274c68030169d356bb1b5a1484</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGridLayout</name>
    <filename>classWt_1_1WGridLayout.html</filename>
    <base>Wt::WLayout</base>
    <member kind="function">
      <type></type>
      <name>WGridLayout</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>d6dc690b71e636f9d99f1ab6bf257002</anchor>
      <arglist>(WWidget *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>82fb0e2743d9081893b83003d5263dbd</anchor>
      <arglist>(WLayoutItem *item)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeItem</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>35a10fd71fa00cad962bd0980d9cdc00</anchor>
      <arglist>(WLayoutItem *item)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLayoutItem *</type>
      <name>itemAt</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>dfbab1a8c0090423f24371bb5281fcb7</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>95300e5b406b82d9e1993bd96c80cab7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>1d45b4e340740aa01d374ae7562e8a20</anchor>
      <arglist>(WLayoutItem *item, int row, int column, int rowSpan=1, int columnSpan=1, int alignment=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLayout</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>6cbe826a17d031867bc9f1d52586f200</anchor>
      <arglist>(WLayout *layout, int row, int column, int alignment=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLayout</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a2c639c227b62918d1397e3baccbc5e1</anchor>
      <arglist>(WLayout *layout, int row, int column, int rowSpan, int columnSpan, int alignment=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>1f312e4ebc4537fc24150941077e15aa</anchor>
      <arglist>(WWidget *widget, int row, int column, int alignment=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>4b4d89f3b01aa409f7edfcb7370ec028</anchor>
      <arglist>(WWidget *widget, int row, int column, int rowSpan, int columnSpan, int alignment=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHorizontalSpacing</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>60713a99ab98907fe5c9f99417fb6493</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>horizontalSpacing</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>4fe774ed02137f1834f79e9214d93fc9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVerticalSpacing</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>d2a2188bece8a47628dae340108962ae</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>verticalSpacing</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>455f8a42d2339a3485a34a9bb4f140cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>540aa44a75a66fe61d5bae8e37ced84b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rowCount</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>7958b26122eb898572bf3117974de00b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnStretch</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>4605de0523f5613096b6cbd983123c8b</anchor>
      <arglist>(int column, int stretch)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>columnStretch</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>33099b99582099b9ea4fadcc5b4b9f91</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRowStretch</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>d8d1199b57063fb7286be6dab13c998c</anchor>
      <arglist>(int row, int stretch)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rowStretch</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>118a1d8599100e6b9ee96618eff91637</anchor>
      <arglist>(int row) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGroupBox</name>
    <filename>classWt_1_1WGroupBox.html</filename>
    <base>Wt::WContainerWidget</base>
    <member kind="function">
      <type></type>
      <name>WGroupBox</name>
      <anchorfile>classWt_1_1WGroupBox.html</anchorfile>
      <anchor>9b12382d30cb1aecbe6be0374a0a8dc8</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WGroupBox</name>
      <anchorfile>classWt_1_1WGroupBox.html</anchorfile>
      <anchor>f6ba26c8f1d3b8fcd5bcfbc9dfcb993f</anchor>
      <arglist>(const WString &amp;title, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>title</name>
      <anchorfile>classWt_1_1WGroupBox.html</anchorfile>
      <anchor>fc668f60e7b6cbeb609c2cb355538d68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classWt_1_1WGroupBox.html</anchorfile>
      <anchor>369081aa62b840875cac9ee5d24bd64e</anchor>
      <arglist>(const WString &amp;title)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WGroupBox.html</anchorfile>
      <anchor>44bbe83b4a9af80c5d50e5671c2d2df6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WHBoxLayout</name>
    <filename>classWt_1_1WHBoxLayout.html</filename>
    <base>Wt::WBoxLayout</base>
    <member kind="function">
      <type></type>
      <name>WHBoxLayout</name>
      <anchorfile>classWt_1_1WHBoxLayout.html</anchorfile>
      <anchor>cca9faa9fd4fd7c0be8816b8bd68ad98</anchor>
      <arglist>(WWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WIconPair</name>
    <filename>classWt_1_1WIconPair.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="slot">
      <type>void</type>
      <name>showIcon1</name>
      <anchorfile>classWt_1_1WIconPair.html</anchorfile>
      <anchor>97187962ca2272b1665aa2ca267c6d7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>showIcon2</name>
      <anchorfile>classWt_1_1WIconPair.html</anchorfile>
      <anchor>774952e5c30f47d0b1d213e01448325d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WIconPair</name>
      <anchorfile>classWt_1_1WIconPair.html</anchorfile>
      <anchor>e18857be32eff2c59f873cd398c09f77</anchor>
      <arglist>(const std::string &amp;icon1URI, const std::string &amp;icon2URI, bool clickIsSwitch=true, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState</name>
      <anchorfile>classWt_1_1WIconPair.html</anchorfile>
      <anchor>84029cf28869da70946b078841518e54</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>state</name>
      <anchorfile>classWt_1_1WIconPair.html</anchorfile>
      <anchor>538584ae901a6d69b7808e326cda09c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WImage *</type>
      <name>icon1</name>
      <anchorfile>classWt_1_1WIconPair.html</anchorfile>
      <anchor>d6eed0ffbd0915da07e0365eb07ec515</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WImage *</type>
      <name>icon2</name>
      <anchorfile>classWt_1_1WIconPair.html</anchorfile>
      <anchor>4b9167325de2f95cce47714d2531dfc1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>icon1Clicked</name>
      <anchorfile>classWt_1_1WIconPair.html</anchorfile>
      <anchor>843283797dcd946164afcc1d75dcab7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>icon2Clicked</name>
      <anchorfile>classWt_1_1WIconPair.html</anchorfile>
      <anchor>5c972cbeff3f0b4538d6e6090aee82a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WImage</name>
    <filename>classWt_1_1WImage.html</filename>
    <base>Wt::WInteractWidget</base>
    <member kind="function">
      <type></type>
      <name>WImage</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>a3566a1fb818f5a57c4cc0d298cc71c7</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WImage</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>42eea962cef07ec071ebae0518d1b48d</anchor>
      <arglist>(const std::string &amp;imageRef, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WImage</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>3482c9d00484accd1c81fb715c767f6f</anchor>
      <arglist>(const std::string &amp;imageRef, const WString &amp;altText, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WImage</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>bf4394e0350e28074875dcbd3ce30ff6</anchor>
      <arglist>(WResource *resource, const WString &amp;altText, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlternateText</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>fa619104c48e0152f5847d72a5397fc3</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>alternateText</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>fb3144944ad2203d35d08c29bab7111a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImageRef</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>cea9ce518f4eec6b19fd4bacc44a52e8</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>imageRef</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>e3a7a79cd15e7aa7e4e7c3a72873bc68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResource</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>509a0636d08916dc14bc1d6eefa79c58</anchor>
      <arglist>(WResource *resource)</arglist>
    </member>
    <member kind="function">
      <type>WResource *</type>
      <name>resource</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>2ae66c010a7c8c0fffc772c8dd36f91c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addArea</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>a5737b44a5161b8494b2691c20315417</anchor>
      <arglist>(WAbstractArea *area)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertArea</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>32baad2b361ff4660a8354a98e998535</anchor>
      <arglist>(int index, WAbstractArea *area)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeArea</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>79b9dedd023e423b1b2575588ed7ff51</anchor>
      <arglist>(WAbstractArea *area)</arglist>
    </member>
    <member kind="function">
      <type>WAbstractArea *</type>
      <name>area</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>d1900179902128ddd3d26922c33a3b97</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WAbstractArea * &gt;</type>
      <name>areas</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>e2dca02b06799eacebc7474569c234b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; void &gt;</type>
      <name>loaded</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>d193f340f3cdd0760ada1be4573f0658</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WInPlaceEdit</name>
    <filename>classWt_1_1WInPlaceEdit.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WInPlaceEdit</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>d1b55ac6fa3b62c38e3e112fd0a088a9</anchor>
      <arglist>(const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>92e099fb0bd5952b57bea38701635d00</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>c45af87bce6ad792a9f9aa3d3b829701</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WLineEdit *</type>
      <name>lineEdit</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>9c2c7f27fae36c6fe373ac9e5b92961b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WPushButton *</type>
      <name>saveButton</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>4c617cd4e05e50ff03b20de1c0aa26d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WPushButton *</type>
      <name>cancelButton</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>fa1a731ca5151ba8f6052fe6f516d345</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; WString &gt;</type>
      <name>valueChanged</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>5ebf2f82a0f2dcb1c909da854ebfed56</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WInteractWidget</name>
    <filename>classWt_1_1WInteractWidget.html</filename>
    <base>Wt::WWebWidget</base>
    <member kind="function">
      <type></type>
      <name>WInteractWidget</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>76de423b005efb0d216fd6e7204abbc1</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDraggable</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>556c14d02388720b1d95b2149be2e867</anchor>
      <arglist>(const std::string &amp;mimeType, WWidget *dragWidget=0, bool isDragWidgetOnly=false, WObject *sourceWidget=0)</arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; WKeyEvent &gt;</type>
      <name>keyWentDown</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>c3334d64053c75b56bdfc15ad5f26784</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; WKeyEvent &gt;</type>
      <name>keyPressed</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>76ed3c31c5a697ff1f78d551fb77b2fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; WKeyEvent &gt;</type>
      <name>keyWentUp</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>76e4154ef2b7bcc66588fd4fdeced3cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; void &gt;</type>
      <name>enterPressed</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>b5b9a329eda555914838b69bf0d8e87b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; void &gt;</type>
      <name>escapePressed</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>84c440cea1e82612c05d010695db36d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; WMouseEvent &gt;</type>
      <name>clicked</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>596786bff8d891af046b13f14437257c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; WMouseEvent &gt;</type>
      <name>doubleClicked</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>125aa2996a414c8a151763371b2f5961</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; WMouseEvent &gt;</type>
      <name>mouseWentDown</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>199916f85dda7e5282ea2b28ac1100ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; WMouseEvent &gt;</type>
      <name>mouseWentUp</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>e94422b78db0b1b8cbd401e47e0dc291</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; WMouseEvent &gt;</type>
      <name>mouseWentOut</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>05dc97f0b822aa49c3b81d697fe1d77b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; WMouseEvent &gt;</type>
      <name>mouseWentOver</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>838931f02efeb21965786dda3fc09dff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; WMouseEvent &gt;</type>
      <name>mouseMoved</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>0471d2377fcca02ec33159d2df5fb944</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WIntValidator</name>
    <filename>classWt_1_1WIntValidator.html</filename>
    <base>Wt::WValidator</base>
    <member kind="function">
      <type></type>
      <name>WIntValidator</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>89d08b52740d6791ce4741c1cc74cd5b</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WIntValidator</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>f81e1d2d1a0fce7e92fdf3b8b67bfbe1</anchor>
      <arglist>(int minimum, int maximum, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bottom</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>58ab417ac57782691b6ad6987ad7b8dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBottom</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>365500d492560d016b3ba7f263ce282c</anchor>
      <arglist>(int bottom)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>top</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>9534fc0b7b7864e71a80b77dcfbff5ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTop</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>8a804c3ea0811b5c32de974592a1c88c</anchor>
      <arglist>(int top)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRange</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>fe180f56f061c98fcc9de6be20effe38</anchor>
      <arglist>(int bottom, int top)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>966a4ee150a40f95196fac7cc9857bd5</anchor>
      <arglist>(WString &amp;input, int &amp;pos) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createExtConfig</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>f956eb115e0b77053c33cf6872ace2e9</anchor>
      <arglist>(std::ostream &amp;config) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidNotANumberText</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>9bc399a9536652c9ab52301669909b6a</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidNotANumberText</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>c799cd9012ceebded234968a8975f9a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidTooSmallText</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>680b57bde8dacfe52e8e65d4abbcf4c6</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidTooSmallText</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>ed9ac49dea2069f723dd1f95a5f02744</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidTooLargeText</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>2e474c6f5ffecff9c8d7cc27810b211f</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidTooLargeText</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>873f37b94a25ab9e1102c48f8bd3c7b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>javaScriptValidate</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>61217a65efb5d2e06262e3710224ea46</anchor>
      <arglist>(const std::string &amp;jsRef) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>inputFilter</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>aa26351e1a00502da10a9d67a7eea817</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WItemSelectionModel</name>
    <filename>classWt_1_1WItemSelectionModel.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type>WModelIndexSet</type>
      <name>selectedIndexes</name>
      <anchorfile>classWt_1_1WItemSelectionModel.html</anchorfile>
      <anchor>4c366757fa7e6b5b6519d34e3c2ac084</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSelected</name>
      <anchorfile>classWt_1_1WItemSelectionModel.html</anchorfile>
      <anchor>96e391104f8846557ed95f5a93f4f452</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectionBehavior</name>
      <anchorfile>classWt_1_1WItemSelectionModel.html</anchorfile>
      <anchor>cbf2a0659f9b5f04becbf5dd02aff9b3</anchor>
      <arglist>(SelectionBehavior behavior)</arglist>
    </member>
    <member kind="function">
      <type>SelectionBehavior</type>
      <name>selectionBehavior</name>
      <anchorfile>classWt_1_1WItemSelectionModel.html</anchorfile>
      <anchor>7bddf47881159cdd36651891954f3a39</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::JSignal</name>
    <filename>classWt_1_1JSignal.html</filename>
    <templarg>A1</templarg>
    <templarg>A2</templarg>
    <templarg>A3</templarg>
    <templarg>A4</templarg>
    <templarg>A5</templarg>
    <templarg>A6</templarg>
    <member kind="function">
      <type></type>
      <name>JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>3100e4e460f900ce97b1de554bae1108</anchor>
      <arglist>(WObject *object, const std::string &amp;name, bool collectSlotJavaScript=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>6f1d8251daf0abf670c7a654b778d81f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ba4f375bcfd61c8938ceeafedd1b79b9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>449dbc079722b0ed9a9fd5df43e359f0</anchor>
      <arglist>(const std::string &amp;arg1=std::string(), const std::string &amp;arg2=std::string(), const std::string &amp;arg3=std::string(), const std::string &amp;arg4=std::string(), const std::string &amp;arg5=std::string(), const std::string &amp;arg6=std::string()) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createEventCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>b4e031a6afc4a541aaf211796e9f0fa8</anchor>
      <arglist>(const std::string &amp;jsObject, const std::string &amp;jsEvent, const std::string &amp;arg1=std::string(), const std::string &amp;arg2=std::string(), const std::string &amp;arg3=std::string(), const std::string &amp;arg4=std::string(), const std::string &amp;arg5=std::string(), const std::string &amp;arg6=std::string()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>401ed9f5d5e0611b6dbd6eb28022f65f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>e3d48968885531f8d64f05d8b024b817</anchor>
      <arglist>(T *target, void(V::*method)())</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>362028c525116906c2dfce28b2566318</anchor>
      <arglist>(T *target, void(V::*method)(A1))</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>abe4c91b7d3fdf44f4f047b69b4cf3d1</anchor>
      <arglist>(T *target, void(V::*method)(A1, A2))</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2eeacaf71554d7cd8288478d76cf11b</anchor>
      <arglist>(T *target, void(V::*method)(A1, A2, A3))</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>16d978f531a0b816837bd2f244efa3d8</anchor>
      <arglist>(T *target, void(V::*method)(A1, A2, A3, A4))</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>8de959fa99c06c11953b0ac02dcac7e8</anchor>
      <arglist>(T *target, void(V::*method)(A1, A2, A3, A4, A5))</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>9da2fb64bf9cdd9e0a7a1fd4341a2745</anchor>
      <arglist>(T *target, void(V::*method)(A1, A2, A3, A4, A5, A6))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>66ef05cc8d6f98bfbd5c7402c3997627</anchor>
      <arglist>(JSlot &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>75643865204ab65b538f4ff80ed8f309</anchor>
      <arglist>(A1 a1=NoClass::none, A2 a2=NoClass::none, A3 a3=NoClass::none, A4 a4=NoClass::none, A5 a5=NoClass::none, A6 a6=NoClass::none)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>8bcaf238774e3b0efd9c31c903550fee</anchor>
      <arglist>(A1 a1=NoClass::none, A2 a2=NoClass::none, A3 a3=NoClass::none, A4 a4=NoClass::none, A5 a5=NoClass::none, A6 a6=NoClass::none)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::JSlot</name>
    <filename>classWt_1_1JSlot.html</filename>
    <member kind="function">
      <type></type>
      <name>JSlot</name>
      <anchorfile>classWt_1_1JSlot.html</anchorfile>
      <anchor>0d7d51d1bfe2c1fe86fd0da1aa6100a2</anchor>
      <arglist>(WWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JSlot</name>
      <anchorfile>classWt_1_1JSlot.html</anchorfile>
      <anchor>de213c06a4ee987a4ec39446e6954e21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJavaScript</name>
      <anchorfile>classWt_1_1JSlot.html</anchorfile>
      <anchor>ac9ce493303cb92b6311d8fd3698ca50</anchor>
      <arglist>(const std::string &amp;js)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exec</name>
      <anchorfile>classWt_1_1JSlot.html</anchorfile>
      <anchor>82c5d76d3e19c10c8a3994fce4493f68</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLabel</name>
    <filename>classWt_1_1WLabel.html</filename>
    <base>Wt::WInteractWidget</base>
    <member kind="function">
      <type></type>
      <name>WLabel</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>ca64fdaa3c35e2127ce3903781584c24</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLabel</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>2d42bd4a25a5a8fc9ad4896e078f64d4</anchor>
      <arglist>(const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLabel</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>a52eaf9dc8abb5f538cec01bb617c1d1</anchor>
      <arglist>(WImage *image, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>WFormWidget *</type>
      <name>buddy</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>9bc62e3dad89cc51108bbaadaa47407f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBuddy</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>f468c613eab7d184c68fd6ae20978de5</anchor>
      <arglist>(WFormWidget *buddy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBuddy</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>d01592a750814678ef198b8aecd87ae4</anchor>
      <arglist>(Ext::FormField *buddy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>ad258cec78e988d24cb457500de2b8a4</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>8d8d0acd3bac7808415de310328dd8ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImage</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>b3cf1d9adf9ac021395c9a433230af93</anchor>
      <arglist>(WImage *image)</arglist>
    </member>
    <member kind="function">
      <type>WImage *</type>
      <name>image</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>d664977a4924cecface67bce34551ad1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWordWrap</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>7227e97855f7cdec9b4af0f45b2b5236</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wordWrap</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>f1cbfcf44cd42532b81de8ed754a64da</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLayout</name>
    <filename>classWt_1_1WLayout.html</filename>
    <base>Wt::WLayoutItem</base>
    <base>Wt::WObject</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WLayout</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>fee1a345112b107158765695fc6837eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>d4a778298c01d290692afc77e441c629</anchor>
      <arglist>(WLayoutItem *item)=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>886d2ec4b6b97524ba3dff93252e6540</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>removeItem</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>8c8d94070a51e669f8077249b67742ae</anchor>
      <arglist>(WLayoutItem *item)=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeWidget</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>cd7a33a526e96d5d1ea0d892e6f83297</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>799b3cce5c1717b18e54c14471e84033</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLayoutItem *</type>
      <name>itemAt</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>3d48e5e4f56ad5d1b0e60180ebc91442</anchor>
      <arglist>(int index) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>indexOf</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>fecba709ae19b93ef9bbe167650dbc5c</anchor>
      <arglist>(WLayoutItem *item) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidgetItem *</type>
      <name>findWidgetItem</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>af26f397f48824ed1e359d6a603eebe8</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLayoutHint</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>c8fa1927e7c9b15e3e673cbf6a473c34</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>da2f5beaa8a0153451ba55581ea9bbf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLayout *</type>
      <name>layout</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>82078a08c5a21aa67bd5a83c377d437d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WLayoutItemImpl *</type>
      <name>impl</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>eb31f2caad3ed9b1ab2b06327cc92bb2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContentsMargins</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>f18bae8c743c9f9a5cabee58826ffb45</anchor>
      <arglist>(int left, int top, int right, int bottom)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getContentsMargins</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>90756cc8765259a26f8d54fd4531c7b3</anchor>
      <arglist>(int *left, int *top, int *right, int *bottom) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WLayout</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>7ea1c353ac9d38a94ad08fc0cb8d6c25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>update</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>a1549c20751b9a50cbc47d3a47adcb21</anchor>
      <arglist>(WLayoutItem *item=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateAddItem</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>8cf7d6517ab800c975a25dfc6682c58f</anchor>
      <arglist>(WLayoutItem *item)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRemoveItem</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>31c7495263f67a4fbc8b384784af628d</anchor>
      <arglist>(WLayoutItem *item)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setLayoutInParent</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>f196e38edc970646d765f003a6cc352e</anchor>
      <arglist>(WWidget *parent)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLayoutItem</name>
    <filename>classWt_1_1WLayoutItem.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WLayoutItem</name>
      <anchorfile>classWt_1_1WLayoutItem.html</anchorfile>
      <anchor>40dd93ac8deba8535e0e5e6645f64ad4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WWidgetItem *</type>
      <name>findWidgetItem</name>
      <anchorfile>classWt_1_1WLayoutItem.html</anchorfile>
      <anchor>95f14880009c9121d2f2d06cdf3204f0</anchor>
      <arglist>(WWidget *widget)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLayout *</type>
      <name>layout</name>
      <anchorfile>classWt_1_1WLayoutItem.html</anchorfile>
      <anchor>3f81b4d198401ae493276a61be6784cf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WLayoutItem.html</anchorfile>
      <anchor>06b127060eaf8a0b87a994b483d493e1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>WLayout *</type>
      <name>parentLayout</name>
      <anchorfile>classWt_1_1WLayoutItem.html</anchorfile>
      <anchor>1a62c0585fd581289a592964d8e6b6c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLayoutItemImpl *</type>
      <name>impl</name>
      <anchorfile>classWt_1_1WLayoutItem.html</anchorfile>
      <anchor>b2f17122cf9589657bc0e6fa5e3ea560</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WLayoutItem</name>
      <anchorfile>classWt_1_1WLayoutItem.html</anchorfile>
      <anchor>d12faf25788f33cc0cf320c1aab848ba</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLayoutItemImpl</name>
    <filename>classWt_1_1WLayoutItemImpl.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WLayoutItemImpl</name>
      <anchorfile>classWt_1_1WLayoutItemImpl.html</anchorfile>
      <anchor>d558805de90c6edc63aa7603f64d4c68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>updateAddItem</name>
      <anchorfile>classWt_1_1WLayoutItemImpl.html</anchorfile>
      <anchor>17f642513739083112ab2a69a05ca0a4</anchor>
      <arglist>(WLayoutItem *item)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>updateRemoveItem</name>
      <anchorfile>classWt_1_1WLayoutItemImpl.html</anchorfile>
      <anchor>34f32973eaa21e827dabdec5a797e2b6</anchor>
      <arglist>(WLayoutItem *item)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classWt_1_1WLayoutItemImpl.html</anchorfile>
      <anchor>8ea165afae63f97652bdb6854f2300f7</anchor>
      <arglist>(WLayoutItem *item)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WWidget *</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WLayoutItemImpl.html</anchorfile>
      <anchor>21409185b748baef618fdac6e23a6f9a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setHint</name>
      <anchorfile>classWt_1_1WLayoutItemImpl.html</anchorfile>
      <anchor>2ea7b787edada76fc0c9b7908caf673a</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WLayoutItemImpl</name>
      <anchorfile>classWt_1_1WLayoutItemImpl.html</anchorfile>
      <anchor>ba6639918dbff2a4674a3a4ed10b7983</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLength</name>
    <filename>classWt_1_1WLength.html</filename>
    <member kind="enumeration">
      <name>Unit</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>908caf5d6be7e244e24598e6d22cd4c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FontEm</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>908caf5d6be7e244e24598e6d22cd4c03c8be5b087b150df97498adf7a69342f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FontEx</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>908caf5d6be7e244e24598e6d22cd4c0dcb9f05790b02548f1185fbceac6bd81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Pixel</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>908caf5d6be7e244e24598e6d22cd4c00b1fa4c1bd7adb92e1a04d62b96d30ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Inch</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>908caf5d6be7e244e24598e6d22cd4c07e715eece268ff7455eb7f80e049c839</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Centimeter</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>908caf5d6be7e244e24598e6d22cd4c092c81cba9e5ac72dd65295572da618c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Millimeter</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>908caf5d6be7e244e24598e6d22cd4c0160938d7f938d245ee31f5e34be0f6a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Point</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>908caf5d6be7e244e24598e6d22cd4c0af7ad2af268eb2197f6ebd323a8a3ac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Pica</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>908caf5d6be7e244e24598e6d22cd4c0ffd121933f44c8231c523747efa64a06</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Percentage</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>908caf5d6be7e244e24598e6d22cd4c0304d9ef07db638690997830a7b348db1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLength</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>d2a8e7901084735819bc1b29fdb9a930</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLength</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>1c06a75adecaa2dc0097e82f61a20e9a</anchor>
      <arglist>(double value, Unit unit=Pixel)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAuto</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>b4c9733029342fdbc1dee34a523ee40d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>value</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>c4063de548d24148fda45a7bced29ef8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Unit</type>
      <name>unit</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>37b71e44633dd09a63b8a1ebb06e9a27</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLengthValidator</name>
    <filename>classWt_1_1WLengthValidator.html</filename>
    <base>Wt::WValidator</base>
    <member kind="function">
      <type></type>
      <name>WLengthValidator</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>d6ced22261c4dd0f249011a872c1ecbe</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLengthValidator</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>ee3614e5244c8bdbd226a781e014d82d</anchor>
      <arglist>(int minLength, int maxLength, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinimumLength</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>6a772dfac01805c714374fd290ff6e6d</anchor>
      <arglist>(int minimum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>minimumLength</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>68dede1a5faa6d83f9347d8dde68f6d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximumLength</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>1f1742e015228319a10dd42a38ef79f4</anchor>
      <arglist>(int maximum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maximumLength</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>829f8c83606ed31a982e99fcd63b15fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>666805e247899c6d575f6561de27bc38</anchor>
      <arglist>(WString &amp;input, int &amp;pos) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createExtConfig</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>398750e14a071a4a7aff0d46d2266aaf</anchor>
      <arglist>(std::ostream &amp;config) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidTooShortText</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>61299b45c89e93a8d7aa7f2570242286</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidTooShortText</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>39f2dd4516c2b53c84343d5adfe2f384</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidTooLongText</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>a24dd0a946f937e0dde081003bf30fec</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidTooLongText</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>5ba8fb18ad613678b7f744b05dda55cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>javaScriptValidate</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>2e8143bc9dedb9d4f7f77f3048bf5ff9</anchor>
      <arglist>(const std::string &amp;jsRef) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLineEdit</name>
    <filename>classWt_1_1WLineEdit.html</filename>
    <base>Wt::WFormWidget</base>
    <member kind="enumeration">
      <name>EchoMode</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>2654d590e41b758cca16739d4bf0159c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Normal</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>2654d590e41b758cca16739d4bf0159c4ebd4885d3cb474d78a43c414d71181d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Password</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>2654d590e41b758cca16739d4bf0159cd8804194006eac81d4072805a0d74666</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLineEdit</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>287f11cd278eccfd293c7cc715f72b65</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLineEdit</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>40fe6e402a904911e7389e4e16498b05</anchor>
      <arglist>(const WString &amp;content, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextSize</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>4c6c5a52deefa5a246e0638f1572d0d8</anchor>
      <arglist>(int chars)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>textSize</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>f2886f31812bd56dea9897606546f5f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>ddb99c6ab5483836adf44a2706a410af</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>c74b58779cb635898cac13e81d8b0c7a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxLength</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>aeca334d8a47be029b6a44912b01ed5d</anchor>
      <arglist>(int length)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maxLength</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>0f5d01ba6e862a856b283d600e65e6ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEchoMode</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>27c9bc232bea0ab76ee266be3325a10e</anchor>
      <arglist>(EchoMode echoMode)</arglist>
    </member>
    <member kind="function">
      <type>EchoMode</type>
      <name>echoMode</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>7454516e7195cecf2f990af35b1470d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WValidator::State</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>7eb722b7f1657a8714280533d8f25b0c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLineF</name>
    <filename>classWt_1_1WLineF.html</filename>
    <member kind="function">
      <type></type>
      <name>WLineF</name>
      <anchorfile>classWt_1_1WLineF.html</anchorfile>
      <anchor>b533503505006e748bf0681e7f673ec4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLineF</name>
      <anchorfile>classWt_1_1WLineF.html</anchorfile>
      <anchor>f5c42eaf0f3bf07d59be34c5c1a8d3cc</anchor>
      <arglist>(const WPointF &amp;p1, const WPointF &amp;p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLineF</name>
      <anchorfile>classWt_1_1WLineF.html</anchorfile>
      <anchor>76ec4074899bddcd5f5f7c98b325aa9e</anchor>
      <arglist>(double x1, double y1, double x2, double y2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classWt_1_1WLineF.html</anchorfile>
      <anchor>1787b637ca74903c7968d3fc078cacc1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>x1</name>
      <anchorfile>classWt_1_1WLineF.html</anchorfile>
      <anchor>e77953fa42db1dfa3ca31ea724b9fa2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>y1</name>
      <anchorfile>classWt_1_1WLineF.html</anchorfile>
      <anchor>3cd53cb1c953a0eb8d46d6093c4fd464</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>x2</name>
      <anchorfile>classWt_1_1WLineF.html</anchorfile>
      <anchor>b35731a2fb8572145cf44ddaead5cbb1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>y2</name>
      <anchorfile>classWt_1_1WLineF.html</anchorfile>
      <anchor>266e3d68414a37bdd4e594796e70b51b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>p1</name>
      <anchorfile>classWt_1_1WLineF.html</anchorfile>
      <anchor>26d62a64bdc03ec0c89d081c3542becf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>p2</name>
      <anchorfile>classWt_1_1WLineF.html</anchorfile>
      <anchor>4775a8b23cc30daf2917ac938711706f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLoadingIndicator</name>
    <filename>classWt_1_1WLoadingIndicator.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WLoadingIndicator</name>
      <anchorfile>classWt_1_1WLoadingIndicator.html</anchorfile>
      <anchor>760be320d6a5ca3d8035606d0803ed36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WLoadingIndicator.html</anchorfile>
      <anchor>0ccda9318560b1c16086899504842ad4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setMessage</name>
      <anchorfile>classWt_1_1WLoadingIndicator.html</anchorfile>
      <anchor>33f6df2d9f56e8431874b2a0efc70ab0</anchor>
      <arglist>(const WString &amp;text)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLocalizedStrings</name>
    <filename>classWt_1_1WLocalizedStrings.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WLocalizedStrings</name>
      <anchorfile>classWt_1_1WLocalizedStrings.html</anchorfile>
      <anchor>04d2e40e52b9827bb5eb4759b9928f66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::wstring</type>
      <name>getValue</name>
      <anchorfile>classWt_1_1WLocalizedStrings.html</anchorfile>
      <anchor>d69f989affcd0feb32c813a43046c02b</anchor>
      <arglist>(const WString &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getUTF8Value</name>
      <anchorfile>classWt_1_1WLocalizedStrings.html</anchorfile>
      <anchor>f8ef26c68fb0a924984f17cc6fb914e3</anchor>
      <arglist>(const WString &amp;s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WLocalizedStrings.html</anchorfile>
      <anchor>71b2ca0b40eed56ee1acba8f865e7220</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>hibernate</name>
      <anchorfile>classWt_1_1WLocalizedStrings.html</anchorfile>
      <anchor>2ea29ba180ed9af25cf561f0df6a995d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>resolveKey</name>
      <anchorfile>classWt_1_1WLocalizedStrings.html</anchorfile>
      <anchor>05666a0ae917e4fd6deafdd2f4b98ba2</anchor>
      <arglist>(const std::string &amp;key, std::string &amp;result)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLogger</name>
    <filename>classWt_1_1WLogger.html</filename>
    <member kind="function">
      <type></type>
      <name>WLogger</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>a2eef50d172fa9766e3500675c814535</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WLogger</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>cb96bbbeede82e03a9489f0fb1c43e38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStream</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>e851860f76c299bca96321b7d867a503</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFile</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>6d8a07bc92824fe32a123094e7516544</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addField</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>8287b40a0699797f63de2fe5deaaae9a</anchor>
      <arglist>(const std::string &amp;name, bool isString)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Field &gt; &amp;</type>
      <name>fields</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>fbbcb96569a0296566d50c0cf1333c2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WLogEntry</type>
      <name>entry</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>38d62bf3508e191c214c26d1959e9988</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Sep</type>
      <name>sep</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>c368dcce6c4605855bce2807aad0d267</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TimeStamp</type>
      <name>timestamp</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>96559cbf73a0d3647aeeac6d45bcc6b0</anchor>
      <arglist></arglist>
    </member>
    <class kind="class">Wt::WLogger::Field</class>
    <class kind="struct">Wt::WLogger::Sep</class>
    <class kind="struct">Wt::WLogger::TimeStamp</class>
  </compound>
  <compound kind="class">
    <name>Wt::WLogger::Field</name>
    <filename>classWt_1_1WLogger_1_1Field.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classWt_1_1WLogger_1_1Field.html</anchorfile>
      <anchor>0abefe7874986ba1fb424c63c13870a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isString</name>
      <anchorfile>classWt_1_1WLogger_1_1Field.html</anchorfile>
      <anchor>6d4db14999409ed24e3cdfcb81830e0d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Wt::WLogger::Sep</name>
    <filename>structWt_1_1WLogger_1_1Sep.html</filename>
  </compound>
  <compound kind="struct">
    <name>Wt::WLogger::TimeStamp</name>
    <filename>structWt_1_1WLogger_1_1TimeStamp.html</filename>
  </compound>
  <compound kind="class">
    <name>Wt::WLogEntry</name>
    <filename>classWt_1_1WLogEntry.html</filename>
    <member kind="function">
      <type></type>
      <name>WLogEntry</name>
      <anchorfile>classWt_1_1WLogEntry.html</anchorfile>
      <anchor>c3c172c5fa69234cb4f720b67656eb6d</anchor>
      <arglist>(const WLogEntry &amp;from)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WLogEntry</name>
      <anchorfile>classWt_1_1WLogEntry.html</anchorfile>
      <anchor>c67d1795817f894bdc6f27d07083f37e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WLogEntry &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WLogEntry.html</anchorfile>
      <anchor>f8046b0ecb69a59ae7beb9c45996f2a3</anchor>
      <arglist>(const WLogger::Sep &amp;)</arglist>
    </member>
    <member kind="function">
      <type>WLogEntry &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WLogEntry.html</anchorfile>
      <anchor>ba127b67d182be2f88d292dd65706faf</anchor>
      <arglist>(const WLogger::TimeStamp &amp;)</arglist>
    </member>
    <member kind="function">
      <type>WLogEntry &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WLogEntry.html</anchorfile>
      <anchor>cee453e6fa56712d4930cf4a172eaff8</anchor>
      <arglist>(const char *)</arglist>
    </member>
    <member kind="function">
      <type>WLogEntry &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WLogEntry.html</anchorfile>
      <anchor>90e49944bd11d007e86adaf7391450cb</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>WLogEntry &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WLogEntry.html</anchorfile>
      <anchor>2e998923dc2ec6d908372c91e3aefedb</anchor>
      <arglist>(T t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WMemoryResource</name>
    <filename>classWt_1_1WMemoryResource.html</filename>
    <base>Wt::WResource</base>
    <member kind="function">
      <type></type>
      <name>WMemoryResource</name>
      <anchorfile>classWt_1_1WMemoryResource.html</anchorfile>
      <anchor>70c4b30cfef23b4a1ae692a4c90ead2b</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WMemoryResource</name>
      <anchorfile>classWt_1_1WMemoryResource.html</anchorfile>
      <anchor>8e72d3dae82e6c1a417bdc8a0439ab34</anchor>
      <arglist>(const std::string &amp;mimeType, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WMemoryResource</name>
      <anchorfile>classWt_1_1WMemoryResource.html</anchorfile>
      <anchor>8bf25b264e52fa4672ce44d72a423451</anchor>
      <arglist>(const std::string &amp;mimeType, const std::vector&lt; char &gt; &amp;data, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WMemoryResource.html</anchorfile>
      <anchor>68007d53e1b3d4ab1d3b327e0bac292b</anchor>
      <arglist>(const std::vector&lt; char &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WMemoryResource.html</anchorfile>
      <anchor>02d637eae0b7e990088a8c75b583fe7e</anchor>
      <arglist>(const char *data, int count)</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>mimeType</name>
      <anchorfile>classWt_1_1WMemoryResource.html</anchorfile>
      <anchor>00b0908ba8be1c51ba964a31d6d43712</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMimeType</name>
      <anchorfile>classWt_1_1WMemoryResource.html</anchorfile>
      <anchor>057ea5ac18daacf2894c28e5bfbbde60</anchor>
      <arglist>(const std::string &amp;mimeType)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const std::string</type>
      <name>resourceMimeType</name>
      <anchorfile>classWt_1_1WMemoryResource.html</anchorfile>
      <anchor>5627cd64cf9dfb7674c2afdf578696f8</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WMenu</name>
    <filename>classWt_1_1WMenu.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WMenu</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>edc7dcfb468fedd82eb6e01ddcdd3f77</anchor>
      <arglist>(WStackedWidget *contentsStack, Orientation orientation, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WMenu</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>7e2fef60ee49edaa9056b3284964576e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>d7840197cc0caf0430792b9f4a0df60d</anchor>
      <arglist>(const WString &amp;name, WWidget *contents, WMenuItem::LoadPolicy policy=WMenuItem::LazyLoading)</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>cbccfeebf2c93244516dec81dcc56fda</anchor>
      <arglist>(WMenuItem *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeItem</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>63819cb0a445ab7ad364f5b0e241b67d</anchor>
      <arglist>(WMenuItem *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>7bafc33564cb06d980d75e2f4d89f28d</anchor>
      <arglist>(WMenuItem *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>ec1801d047dc0f150d1cc12b801aa6c2</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WMenuItem * &gt; &amp;</type>
      <name>items</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>bb90d70d722ce95e748b3ed0b88168b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>currentItem</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>4e94081f83aee45db0ffd43073f2b8ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentIndex</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>467ab0da55b4584f1b46abe931354f3d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Orientation</type>
      <name>orientation</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>8f241ce7b48d30c0c5f60abcd8e38a90</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRenderAsList</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>8bc28b9d703b93569846441213877d4f</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>renderAsList</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>8cc3a34a38722aa07ad8e5e183ed6af3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalPathEnabled</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>1cdba068c68379ccb88f9aa0f11ac6ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>internalPathEnabled</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a8e47ce1b3e21eb64202e6ab1b5e48b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalBasePath</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a5cf3b5b9919d2f130c8acd156447132</anchor>
      <arglist>(const std::string &amp;basePath)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>internalBasePath</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>8cdf2f75f67efa0c10c6fb25fd1cd4da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; WMenuItem * &gt;</type>
      <name>itemSelected</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>45408a6c4a1d50b26dafd243eeca141b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; WMenuItem * &gt;</type>
      <name>itemSelectRendered</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a49addfaceccf551145cc29951988359</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WMenuItem</name>
    <filename>classWt_1_1WMenuItem.html</filename>
    <base>Wt::WObject</base>
    <member kind="enumeration">
      <name>LoadPolicy</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>5e276ed0505694a7b89a1dd0c62aa55a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LazyLoading</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>5e276ed0505694a7b89a1dd0c62aa55a58296165dae031cb608e3d198ed0dee0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PreLoading</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>5e276ed0505694a7b89a1dd0c62aa55a7917744540a0fbf7f6822014550f990b</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>select</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>9acd8465249e221093f87d9a726c33af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WMenuItem</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>772f165f3dc02138c28d74f1f42d1a45</anchor>
      <arglist>(const WString &amp;text, WWidget *contents, LoadPolicy policy=LazyLoading)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>e9f4792069fcf2f3410c002fdab2d2f1</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>2061c3c242e98e53c820bfa500db492c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPathComponent</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>4291756303dbf128b718679cdb907a5a</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>pathComponent</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>5ab0b5430b9fb852a45886deb0ff01b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WMenu *</type>
      <name>menu</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>768d7928949e1d54c0e85dba488e3ea6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>contents</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>961bb119e2231aa47d31d829178899d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>itemWidget</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>185b334943c3e07d63d3e45a17e960f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>createItemWidget</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>5dd1286e97b110b621e00e02e58a15d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateItemWidget</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>df18031f469001bdd5333cff0a66a9a4</anchor>
      <arglist>(WWidget *itemWidget)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderSelected</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>3af62f2a97827c844e021ad2dd3f6085</anchor>
      <arglist>(bool selected)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual SignalBase &amp;</type>
      <name>activateSignal</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>5f1d03e160011fcd39759b681f8bc063</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WMessageBox</name>
    <filename>classWt_1_1WMessageBox.html</filename>
    <base>Wt::WDialog</base>
    <member kind="function">
      <type></type>
      <name>WMessageBox</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>2a6c97b72f842051e129ff3140fba0c2</anchor>
      <arglist>(bool i18n=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WMessageBox</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>04068fe36d959b2130af9fbc75a0debb</anchor>
      <arglist>(const WString &amp;caption, const WString &amp;text, Icon icon, int buttons, bool i18n=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>ef66b54dc12ec478e218d561880254e8</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>1e1dffabe0d91e84f6f504ffb600c4a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WText *</type>
      <name>textWidget</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>da70275e7f0d9fc067cd5a1c553a031f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>194dc23e212770e494d459f2426f9ae8</anchor>
      <arglist>(Icon icon)</arglist>
    </member>
    <member kind="function">
      <type>Icon</type>
      <name>icon</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>0ff9580eedf4a3e6b74f27eae71e23ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WPushButton *</type>
      <name>addButton</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>9d07bb99d17c38128c79f9c7ecd42963</anchor>
      <arglist>(const WString &amp;text, StandardButton result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setButtons</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>a07d67ca55b6e11f8144f4585df4675f</anchor>
      <arglist>(int buttons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>buttons</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>db6344ba7c2803e517ef49a53c165cda</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WPushButton *</type>
      <name>button</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>0e95f906d321b5c5cb574abc25716aec</anchor>
      <arglist>(StandardButton b)</arglist>
    </member>
    <member kind="function">
      <type>StandardButton</type>
      <name>result</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>1b85bf537a0f906b84e738b27ae6529e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static StandardButton</type>
      <name>show</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>c86d11ee9feaea9d39e5de118da8a615</anchor>
      <arglist>(const WString &amp;caption, const WString &amp;text, int buttons, bool i18n=false)</arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; StandardButton &gt;</type>
      <name>buttonClicked</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>3419bf6d3637e2fbea52cd987dafaa5a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WMessageResourceBundle</name>
    <filename>classWt_1_1WMessageResourceBundle.html</filename>
    <base>Wt::WLocalizedStrings</base>
    <member kind="function">
      <type></type>
      <name>WMessageResourceBundle</name>
      <anchorfile>classWt_1_1WMessageResourceBundle.html</anchorfile>
      <anchor>ecfe527e2123bf7793d926f71dc2ed23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>use</name>
      <anchorfile>classWt_1_1WMessageResourceBundle.html</anchorfile>
      <anchor>01368946b2a2aaceab3a64cddb1cb1e2</anchor>
      <arglist>(const std::string &amp;path, bool loadInMemory=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WMessageResourceBundle.html</anchorfile>
      <anchor>8dd275eff8f823ee58a1e673a79b71e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>hibernate</name>
      <anchorfile>classWt_1_1WMessageResourceBundle.html</anchorfile>
      <anchor>5e6c391a95229691fcae8c058c637b7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>resolveKey</name>
      <anchorfile>classWt_1_1WMessageResourceBundle.html</anchorfile>
      <anchor>22878a466da85139384133f01c7fec77</anchor>
      <arglist>(const std::string &amp;key, std::string &amp;result)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WModelIndex</name>
    <filename>classWt_1_1WModelIndex.html</filename>
    <member kind="function">
      <type></type>
      <name>WModelIndex</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>29431c83f8ed71654e213ec4aae21813</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WModelIndex</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>49e87000594d1064b995a32edb258970</anchor>
      <arglist>(const WModelIndex &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>column</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>0e6568dd7113662c3c378e2084729581</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>row</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a4f1385223391c46ee200a57672f6046</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>internalPointer</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>44aabe692bba87ba144c1ab9a7f98eb3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>internalId</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>f0fedac552dfeb6162f10d26d0876c85</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Sha1::Digest</type>
      <name>internalHashId</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>d7bbc4d27a5cd8f8062609d400199883</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WModelIndex</type>
      <name>child</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>2c01a7ea6cbb423eec3f4d12f26324c7</anchor>
      <arglist>(int row, int column) const </arglist>
    </member>
    <member kind="function">
      <type>WModelIndex</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>0e6380caae0e785fdea9e30e0a95eec9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>boost::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>7f05920329ca4b7fdbb10931afdb634e</anchor>
      <arglist>(int role=DisplayRole) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>flags</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>bbcced0484a895c5cd3b13b0674e4bc1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>1d4b05ee51c5c6961d6123565fd77c82</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const WAbstractItemModel *</type>
      <name>model</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>9fe91b75030a8a7373e3262fbbc6cad6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>6bb6b3624c4d75e3a495860e46c04f9e</anchor>
      <arglist>(const WModelIndex &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>ce2743acada845b3d4912e70c9787eac</anchor>
      <arglist>(const WModelIndex &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>29a0a0ab3e961b8087d95b7c62555cd1</anchor>
      <arglist>(const WModelIndex &amp;other) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WObject</name>
    <filename>classWt_1_1WObject.html</filename>
    <member kind="typedef">
      <type>void(WObject::*</type>
      <name>Method</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>6ef714d6ef0060b78c039e729b913aa9</anchor>
      <arglist>)()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WObject</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>1da12f5d82488adcca912c596b9398ea</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WObject</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>45d6c07b134db69687bd1b49025799c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>id</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>5c5cc1d7aada99baf97d0dc203e42154</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setObjectName</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>64ce31cadb378c4eba81224f43bf493d</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>objectName</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>5cad0cc3f73402de1422747653ece18f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLearnedSlots</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>92d8b00edc79b7a60d41d7c088f50436</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLearnedSlot</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>e06fa3064a80f857b3b05123ef412bb2</anchor>
      <arglist>(void(T::*method)())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>implementStateless</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>6a42864f4a7e2628db520f63ee3b926f</anchor>
      <arglist>(void(T::*method)())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>implementStateless</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>4630474a8b7f2c475feea36602eeba19</anchor>
      <arglist>(void(T::*method)(), void(T::*undoMethod)())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>implementJavaScript</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>ac09652e9bbdfd9cc434485f25df933f</anchor>
      <arglist>(void(T::*method)(), const std::string &amp;jsCode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addChild</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>945f972be4331bfe46221263e04ae9ed</anchor>
      <arglist>(WObject *child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeChild</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>1f811eeb5f0aa37b5b1931497cd9f163</anchor>
      <arglist>(WObject *child)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WObject * &gt; &amp;</type>
      <name>children</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>66c8da3f967545ceb585ed574f68b8cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WObject *</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>2af8f7ec8d3807d434e1f70d1245c6b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static WObject *</type>
      <name>sender</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>413deb54de40ee278dd554e4960d58ca</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WOverlayLoadingIndicator</name>
    <filename>classWt_1_1WOverlayLoadingIndicator.html</filename>
    <base>Wt::WContainerWidget</base>
    <base>Wt::WLoadingIndicator</base>
    <member kind="function">
      <type></type>
      <name>WOverlayLoadingIndicator</name>
      <anchorfile>classWt_1_1WOverlayLoadingIndicator.html</anchorfile>
      <anchor>1070617b610083d12d150d5a7c3f37a3</anchor>
      <arglist>(const WString &amp;styleClass=WString(), const WString &amp;backgroundStyleClass=WString(), const WString &amp;textStyleClass=WString())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WOverlayLoadingIndicator.html</anchorfile>
      <anchor>a2e776a3e592a0426aec553446819e83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMessage</name>
      <anchorfile>classWt_1_1WOverlayLoadingIndicator.html</anchorfile>
      <anchor>14abae6e7193229ad71d7804c6e7467b</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPaintDevice</name>
    <filename>classWt_1_1WPaintDevice.html</filename>
    <member kind="enumeration">
      <name>ChangeFlags</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>e80e6bcd7ad59445ba51218cb7479b20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Pen</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>e80e6bcd7ad59445ba51218cb7479b205115beca6c99c7926b34aa1497ee7ccb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Brush</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>e80e6bcd7ad59445ba51218cb7479b20794b5f529f07d07aeda7d3efcf0d2a3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Font</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>e80e6bcd7ad59445ba51218cb7479b206fbbb5b0f6fd27292f8c9f6205551a03</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Hints</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>e80e6bcd7ad59445ba51218cb7479b20edd545e238e65eb64dd635e04a964876</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Transform</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>e80e6bcd7ad59445ba51218cb7479b209e4822cf50f25dac9f08bbc6c87ed794</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Clipping</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>e80e6bcd7ad59445ba51218cb7479b205c823e2787166e516c3def8821a42936</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WPaintDevice</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>239035e9459e17407da0c8e2d28715bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WLength</type>
      <name>width</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a467bf4c6ea412ed7e25f0ae0c636b26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WLength</type>
      <name>height</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>ff25381bd2de7fa419a64705ed5b716d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setChanged</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a3f4bf57b26ba99147dae5bafa29bf17</anchor>
      <arglist>(int flags)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>drawArc</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>605316797b1aa4be60c24d95fc5a1ab4</anchor>
      <arglist>(const WRectF &amp;rect, double startAngle, double spanAngle)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>f92ff3c6d2f5c351c6931306d9cc1162</anchor>
      <arglist>(const WRectF &amp;rect, const std::string &amp;imageUri, int imgWidth, int imgHeight, const WRectF &amp;sourceRect)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>drawLine</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>bd267ca3adb6c394079042810864ac9a</anchor>
      <arglist>(double x1, double y1, double x2, double y2)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>drawPath</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>b3c368b79fef8bc53681821610dd2077</anchor>
      <arglist>(const WPainterPath &amp;path)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>drawText</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>19b8cc16ab97d7da97ebd9199604ec68</anchor>
      <arglist>(const WRectF &amp;rect, int flags, const WString &amp;text)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>04d6f9e0653a9785662c1e987b597cc6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>done</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>75827be2076716985533dbc75dfdc512</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>paintActive</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>556134fa9a9b540c28334899b2f36413</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WPaintDevice</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>9a57298024ba671e6c15159c763a8ec2</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WPainter *</type>
      <name>painter</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>13f499c8a2a390720470dca3d976c187</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPaintedWidget</name>
    <filename>classWt_1_1WPaintedWidget.html</filename>
    <base>Wt::WInteractWidget</base>
    <member kind="enumeration">
      <name>Method</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>fa5ee04c391e6ac67d58740fc80c6923</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InlineSvgVml</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>fa5ee04c391e6ac67d58740fc80c6923eea4494d5f2a458fbdacea02d1e009a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HtmlCanvas</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>fa5ee04c391e6ac67d58740fc80c6923ce6fa43830fac95b0f042cd1438e41df</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPaintedWidget</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>fdb2dbe95de7b97d77a1778724395db6</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WPaintedWidget</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>3e28c52034a50cb9c2c2e7a9e979a90c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPreferredMethod</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>2a3a3be8b9a8c6d56fad4b64b370fdd4</anchor>
      <arglist>(Method method)</arglist>
    </member>
    <member kind="function">
      <type>Method</type>
      <name>preferredMethod</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>701e81be3104d98a02f4cf7da9ec3a7f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>6b4be31d9182fa2e5e1e971b3582cd7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>a57b940110d240951d0e3a6d03390319</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addArea</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>c4c031c7ab47e85f27aac09b7fc37bea</anchor>
      <arglist>(WAbstractArea *area)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertArea</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>f11281366adb6c4d7966b3b19651ea0f</anchor>
      <arglist>(int index, WAbstractArea *area)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeArea</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>0147ad94c849d437be8bfde14df579a5</anchor>
      <arglist>(WAbstractArea *area)</arglist>
    </member>
    <member kind="function">
      <type>WAbstractArea *</type>
      <name>area</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>38786c86ffb7c62ee13b18f0874cb262</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WAbstractArea * &gt;</type>
      <name>areas</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>e3cfb09afc47aa57c1ca9fda0e3cbb5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>paintEvent</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>d8ce22eff41754c8616f45851f57fb1a</anchor>
      <arglist>(WPaintDevice *paintDevice)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPainter</name>
    <filename>classWt_1_1WPainter.html</filename>
    <member kind="enumeration">
      <name>RenderHint</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>605a81a1712a0dd0189044fc598fd5ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Antialiasing</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>605a81a1712a0dd0189044fc598fd5ffadc2e7f25121334e55c3f569173ec5bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPainter</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>420b1e54536d4815534f31208a825b54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPainter</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a9e93aac4be32b5c0943360d9cf8c1cc</anchor>
      <arglist>(WPaintDevice *device)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WPainter</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>611557a8722bc49df70a1a2dd79628c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>begin</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>6b81663b5599f0736ae5099ac7325d44</anchor>
      <arglist>(WPaintDevice *device)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>7a748d6ee49034a0996f9404eac9c2d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>end</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>50beb0c8cb77c12e2dee807e4fe4bcb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WPaintDevice *</type>
      <name>device</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>9d2e545f5506fd743a286618351c9b51</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRenderHint</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>f859825a00ff428e773c2abeb328f078</anchor>
      <arglist>(RenderHint hint, bool on=true)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>renderHints</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>6be5dd738e97d35b91aaaea1d086b4b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawArc</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a79220ed9456f67a393009e5c5eea27e</anchor>
      <arglist>(const WRectF &amp;rectangle, int startAngle, int spanAngle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawArc</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>96c03e411d46cd720f454504f53491bd</anchor>
      <arglist>(double x, double y, double width, double height, int startAngle, int spanAngle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawChord</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a34b0972745692d55bc03ff1c57f1f4c</anchor>
      <arglist>(const WRectF &amp;rectangle, int startAngle, int spanAngle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawChord</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>c8735155d03ab0332a66880e251b0fc2</anchor>
      <arglist>(double x, double y, double width, double height, int startAngle, int spanAngle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawEllipse</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>5a1969356a8edae0cdd3abfc141082a7</anchor>
      <arglist>(const WRectF &amp;rectangle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawEllipse</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>c46f725e54280bd6ace0e941eced790c</anchor>
      <arglist>(double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>e36e5ce0c6a324ec83ebbc397a513202</anchor>
      <arglist>(const WPointF &amp;point, const Image &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>d69c06dbcb10d8f12bce1c369ae34c31</anchor>
      <arglist>(const WPointF &amp;point, const Image &amp;image, const WRectF &amp;sourceRect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>af6ea6a37b0fd8244d1b7afa3c24b55c</anchor>
      <arglist>(const WRectF &amp;rect, const Image &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>58a14d4610582eed6c76e0bda6117e3d</anchor>
      <arglist>(const WRectF &amp;rect, const Image &amp;image, const WRectF &amp;sourceRect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>508b7828bbbf5805838a30a830c34f36</anchor>
      <arglist>(double x, double y, const Image &amp;image, double sx=0, double sy=0, double sw=-1, double sh=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawLine</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>259601487cb2ec23a2f6f3d64c0c5913</anchor>
      <arglist>(const WLineF &amp;line)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawLine</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>1c9ad3f225f7ca93800431adfc5731f0</anchor>
      <arglist>(const WPointF &amp;p1, const WPointF &amp;p2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawLine</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>b596b1cfa230d37e9c429adde84d5985</anchor>
      <arglist>(double x1, double y1, double x2, double y2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawLines</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>3b25c4144914fe09ca3b3cb63979bd69</anchor>
      <arglist>(const WLineF *lines, int lineCount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawLines</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>e1ac3c9c64907e53817ca5a28ead70d2</anchor>
      <arglist>(const WPointF *pointPairs, int lineCount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawLines</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ebfb0fc62a58789f7b21650485ef9985</anchor>
      <arglist>(const std::vector&lt; WLineF &gt; &amp;lines)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawLines</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>762442b01f5603492e9673cb84081596</anchor>
      <arglist>(const std::vector&lt; WPointF &gt; &amp;pointPairs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawPath</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>2ef57868d6fbf99a901cbe1f29723b50</anchor>
      <arglist>(const WPainterPath &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawPie</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>5c46ed008445a80feb258774a3af3b62</anchor>
      <arglist>(const WRectF &amp;rectangle, int startAngle, int spanAngle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawPie</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>3d8bc8608db5dad5e8d499b0fed58b85</anchor>
      <arglist>(double x, double y, double width, double height, int startAngle, int spanAngle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawPoint</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ca2e989c3cd9bc635e6d13786cc73119</anchor>
      <arglist>(const WPointF &amp;position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawPoint</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>9159b8ae72494b4973642143296daa96</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawPoints</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>be40c21da61567a23b04c81c9ea038b2</anchor>
      <arglist>(const WPointF *points, int pointCount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawPolygon</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>82600053c72a0f939eb37ab45f2c1f3e</anchor>
      <arglist>(const WPointF *points, int pointCount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawPolyline</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>bbc6b39bef49d5fc67e09953fbcd4faa</anchor>
      <arglist>(const WPointF *points, int pointCount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawRect</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>d1fcb68312327194b3dccc67adc3bd33</anchor>
      <arglist>(const WRectF &amp;rectangle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawRect</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>368289c57968343089d82c26acc62ca6</anchor>
      <arglist>(double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawRects</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>14fa5d0d5f3a05f8279bb0b4a06a8671</anchor>
      <arglist>(const WRectF *rectangles, int rectCount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawRects</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>36818dd1aea0c8f50dc0385dca39a6b8</anchor>
      <arglist>(const std::vector&lt; WRectF &gt; &amp;rectangles)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawText</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>3ccba4962139bf989a3cd2a777a070c4</anchor>
      <arglist>(const WRectF &amp;rectangle, int flags, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawText</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>8ecdebb877f5a3c27b4eec5fdf4da93d</anchor>
      <arglist>(double x, double y, double width, double height, int flags, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillPath</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>761f8f85d14fe171fcc91823bc4dab5c</anchor>
      <arglist>(const WPainterPath &amp;path, const WBrush &amp;brush)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillRect</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>4b9ce79b5abd8584fd2cf85876ab140f</anchor>
      <arglist>(const WRectF &amp;rectangle, const WBrush &amp;brush)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillRect</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>c99ee3d64df9742e167c01d750c899be</anchor>
      <arglist>(double x, double y, double width, double height, const WBrush &amp;brush)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>strokePath</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>93cb3a37591c6dde4f006e8eada2d1f8</anchor>
      <arglist>(const WPainterPath &amp;path, const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBrush</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>d63f01349e9163992d440e9aa85f916b</anchor>
      <arglist>(const WBrush &amp;brush)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFont</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>d9cac6c8eaba94226f54343cde9676ea</anchor>
      <arglist>(const WFont &amp;font)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPen</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>159ebf24df790e409d4060f7bd4aa725</anchor>
      <arglist>(const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>const WBrush &amp;</type>
      <name>brush</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>de2b538d5028082f3aba87625634184c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const WFont &amp;</type>
      <name>font</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>b218488ea091c9ae543142bdca4da9bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const WPen &amp;</type>
      <name>pen</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>1b60e758e7eb1865369a061cf07bf54c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClipping</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>4163898f999d4ecafec52c3f8890f380</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasClipping</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a99949d6a71d44f1240db64c32b6d803</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClipPath</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>65be44d995c5f06f065f68d15c8889a5</anchor>
      <arglist>(const WPainterPath &amp;clipPath)</arglist>
    </member>
    <member kind="function">
      <type>WPainterPath</type>
      <name>clipPath</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>601eba54f63b581080531100f5b5db78</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetTransform</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>c0cc4dedd2cf8801e12d7550bce2a2c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rotate</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>b6d68d362e43f8e8df7e4400e2324d8e</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>0167a7c8c8d72ee0cca6f735b65a7938</anchor>
      <arglist>(double sx, double sy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>translate</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>af5755eca15cb6e73fc24edf3bbd5758</anchor>
      <arglist>(const WPointF &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>translate</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ef98cc3b4fa2da57efc9721a8bd2a6e5</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWorldTransform</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>c0aa03db16f695b9bec3ef38588a5f3e</anchor>
      <arglist>(const WTransform &amp;matrix, bool combine=false)</arglist>
    </member>
    <member kind="function">
      <type>const WTransform &amp;</type>
      <name>worldTransform</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>6fb5733c524d07b679c4af6526d0c032</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>0262e162bb4be43f800c6c7b784c8d7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restore</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>3fd8699e88d695cfd10043d18a666991</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setViewPort</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>70dcfbed2b7bdeb39ddbc7f213b5a9ce</anchor>
      <arglist>(const WRectF &amp;viewPort)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setViewPort</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>fd9272b6a583b273a64105e88fb65e42</anchor>
      <arglist>(double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>WRectF</type>
      <name>viewPort</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>7838d09f494223b51a5e22b73a71740b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWindow</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>f223eea7db8164e404f6725705569fa6</anchor>
      <arglist>(const WRectF &amp;window)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWindow</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>7d56a3fb66457c02584aa4bed8ce6023</anchor>
      <arglist>(double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>WRectF</type>
      <name>window</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>0bcac25d9328887ed15669b4a4ae52de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WTransform</type>
      <name>combinedTransform</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>8d8e9616413abf58f949cd47c3bf1381</anchor>
      <arglist>() const </arglist>
    </member>
    <class kind="class">Wt::WPainter::Image</class>
  </compound>
  <compound kind="class">
    <name>Wt::WPainter::Image</name>
    <filename>classWt_1_1WPainter_1_1Image.html</filename>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classWt_1_1WPainter_1_1Image.html</anchorfile>
      <anchor>c951720ffbbd0702fa760582217ca4b1</anchor>
      <arglist>(const std::string &amp;uri, int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>uri</name>
      <anchorfile>classWt_1_1WPainter_1_1Image.html</anchorfile>
      <anchor>a20ed1f5a8a75f02588d0536d59311db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>width</name>
      <anchorfile>classWt_1_1WPainter_1_1Image.html</anchorfile>
      <anchor>eca25023755c950910b54638547a36cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>height</name>
      <anchorfile>classWt_1_1WPainter_1_1Image.html</anchorfile>
      <anchor>eb3a311eb466a2e7ea8af148b03a4d5d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPainterPath</name>
    <filename>classWt_1_1WPainterPath.html</filename>
    <member kind="function">
      <type></type>
      <name>WPainterPath</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>ce0add71a1ebc8b45a821aa8d70d3e3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPainterPath</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>364b46c7a45bcb18e235ec0b41268a15</anchor>
      <arglist>(const WPointF &amp;startPoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPainterPath</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>bea96512cd12bc8630f81b2ed91deb80</anchor>
      <arglist>(const WPainterPath &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>WPainterPath &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>b9efa54a1626d775bc208bf3caef10db</anchor>
      <arglist>(const WPainterPath &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>currentPosition</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>7022e9937045d3da2b5e54a875b33003</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>dffb5d532acabefc8f885da5d531907b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>52e236ff7c41d05e1b29b0dcb2b1059c</anchor>
      <arglist>(const WPainterPath &amp;path) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>ccbaa725ccfc0291695b4f47b5b58923</anchor>
      <arglist>(const WPainterPath &amp;path) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>closeSubPath</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>9db15664f1cea3f12a2c7ab1337a343b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>9801a3988b2a57c412ba175142d2e3ff</anchor>
      <arglist>(const WPointF &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>2cdd1952ade53cc4b2f2a0146fc8c00f</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lineTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>c52bacd9bb3b07043e56be2af56f7f66</anchor>
      <arglist>(const WPointF &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lineTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>afdba97cf01c017fa9e8f18169c7a205</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cubicTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>c5a13ec3faf642cd05a57988366e005f</anchor>
      <arglist>(const WPointF &amp;c1, const WPointF &amp;c2, const WPointF &amp;endPoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cubicTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>d751c7f66795ecdbe1fc7098dc11977b</anchor>
      <arglist>(double c1x, double c1y, double c2x, double c2y, double endPointx, double endPointy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arcTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>3b1188816772497c5ae7a627a77e1d09</anchor>
      <arglist>(double cx, double cy, double radius, double startAngle, double sweepLength)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arcTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>50f747fedf14299411e7d087ec4db49b</anchor>
      <arglist>(double x, double y, double width, double height, double startAngle, double sweepLength)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arcMoveTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>6e4d29695685a08198be2c2dff53e49c</anchor>
      <arglist>(double cx, double cy, double radius, double angle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arcMoveTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>366810aa107d35409f9fbd33b8e91dbb</anchor>
      <arglist>(double x, double y, double width, double height, double angle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>quadTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>5cf7125271a74e15a52db05876b8c878</anchor>
      <arglist>(const WPointF &amp;c, const WPointF &amp;endPoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>quadTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>2eaf3d30b6cf1590a3f368b8b94d49ca</anchor>
      <arglist>(double cx, double cy, double endPointx, double endPointy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEllipse</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>e8783aad1c538e0180b2323a3a926999</anchor>
      <arglist>(const WRectF &amp;boundingRectangle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEllipse</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>3dadfaa8235becb01221431d1f1a97d6</anchor>
      <arglist>(double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addRect</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>52f1c2008c15cd133e8fb405d8b0466b</anchor>
      <arglist>(const WRectF &amp;rectangle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addRect</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>b5b658698acf7a87948e7c0adf6c1151</anchor>
      <arglist>(double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPath</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>8f2e9933f699b967fe5776c98080a410</anchor>
      <arglist>(const WPainterPath &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connectPath</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>7a5d7f8d62eda600ab05926c8f8014be</anchor>
      <arglist>(const WPainterPath &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>WRectF</type>
      <name>controlPointRect</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>2662ae29dce3cafd3a44cded9ef3112f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPanel</name>
    <filename>classWt_1_1WPanel.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WPanel</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>4c05851cf3ea39b796974b84eebd68bd</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>3e2feec27482003f4abd921c22b1b0c3</anchor>
      <arglist>(const WString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>title</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>56ed246e0065e1ed78e639c1adc32adc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitleBar</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>9671893042605eb936c7301f6de09d3f</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>titleBar</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>310ea9e57d6ed4c10cbaf865063486d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCollapsible</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>ce945a192f671220a5a2cda671dc37ca</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCollapsible</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>ad805b67215219f72d8f3b849c898860</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCollapsed</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>cbb49b380277b5b78b18902a671abcb4</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCollapsed</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>9d9d4cced04f55464b20744ab88aa145</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>collapse</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>efd66ff6dd8e2a1108e70efec4eab1b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expand</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>2ac9a05172675559b6f988083a4fd666</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCentralWidget</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>74f87b8eacf87d9df2704fc97ce9c37f</anchor>
      <arglist>(WWidget *)</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>centralWidget</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>699291066eef6f3dccad30cb592ad97c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Signal</type>
      <name>collapsed</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>5bc36180e5986a5dc17e4ae9d95ba300</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Signal</type>
      <name>expanded</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>06988ad7bc3e1524d6335b89298fe4d3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPen</name>
    <filename>classWt_1_1WPen.html</filename>
    <member kind="function">
      <type></type>
      <name>WPen</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>b83dc2d8e9289a528b1ea53c3dbd0a16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPen</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>b7d789ec2c036b9e9f2dc79a93bb2102</anchor>
      <arglist>(PenStyle style)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPen</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>ef30d1dd75f1e36ee96838d669c6d465</anchor>
      <arglist>(const WColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPen</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>5ef68d49214e848b42aaa7f2a3e1160c</anchor>
      <arglist>(GlobalColor color)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>322f0678855f2be570120505d84b1f28</anchor>
      <arglist>(const WPen &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>7ea4d349a8fa4cf2a3c6c0fcc4121167</anchor>
      <arglist>(const WPen &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyle</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>a8e1366df77b346d0250878d64ae81a5</anchor>
      <arglist>(PenStyle style)</arglist>
    </member>
    <member kind="function">
      <type>PenStyle</type>
      <name>style</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>e14d2397498286da5c9f544061071fd5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCapStyle</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>b4f231f9c2ca03455d59457fe4e564c5</anchor>
      <arglist>(PenCapStyle style)</arglist>
    </member>
    <member kind="function">
      <type>PenCapStyle</type>
      <name>capStyle</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>d61121a36aed6777b4d2145375d6e93d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJoinStyle</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>11848f3d7c2c73bc630c2c7da83f3671</anchor>
      <arglist>(PenJoinStyle style)</arglist>
    </member>
    <member kind="function">
      <type>PenJoinStyle</type>
      <name>joinStyle</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>436008672a646c0346cecc7729185dcf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>8d175a6438c8251c2c5440f9cd085954</anchor>
      <arglist>(const WLength &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>const WLength &amp;</type>
      <name>width</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>e29a27dbdb0473a41a2a0586bf9906af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>4296a360d3853c46e68e20a574c1f8b6</anchor>
      <arglist>(const WColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>const WColor &amp;</type>
      <name>color</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>a6e63fd317dd56b0cd9cc76f59d3d069</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="enumeration">
      <name>PenStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gb70170afb6347d18ff9dac17e05e133e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoPen</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggb70170afb6347d18ff9dac17e05e133ea8125e799a1289cd6dd0b2595a496a82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SolidLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggb70170afb6347d18ff9dac17e05e133ec1888b9cee513c2bf98c6fb9f4e307ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggb70170afb6347d18ff9dac17e05e133e7667698a6fb5adbf8f128519cbb93af8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DotLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggb70170afb6347d18ff9dac17e05e133e26ade9ba6072abfcef185cca70227d15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggb70170afb6347d18ff9dac17e05e133e45cac3164febb16cf7028403e01077a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotDotLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggb70170afb6347d18ff9dac17e05e133e758c17a422e91d2e497f15054123e302</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PenCapStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>g819ef9a03fb79c9834508b79eac604f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FlatCap</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gg819ef9a03fb79c9834508b79eac604f2394700c2ab47fe2b23564ced1c1e129a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SquareCap</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gg819ef9a03fb79c9834508b79eac604f239a378820d5058a3677f9852c5783783</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RoundCap</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gg819ef9a03fb79c9834508b79eac604f23d1c8a630cb15cec7b33434d9564182a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PenJoinStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gaf495faaba3ae03366a1646a4b5526be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MiterJoin</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggaf495faaba3ae03366a1646a4b5526bed2f7df311a138e580c95d728b0128004</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BevelJoin</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggaf495faaba3ae03366a1646a4b5526be9550acce5f4da6e134f34392d7b072ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RoundJoin</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggaf495faaba3ae03366a1646a4b5526be3be2fdf749560b7229b3472d8ff6ad12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPoint</name>
    <filename>classWt_1_1WPoint.html</filename>
    <member kind="function">
      <type></type>
      <name>WPoint</name>
      <anchorfile>classWt_1_1WPoint.html</anchorfile>
      <anchor>ef6bc93627e0db21cc0729716b6f06d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPoint</name>
      <anchorfile>classWt_1_1WPoint.html</anchorfile>
      <anchor>c38958b7d00843fdc9983f149d0511f9</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classWt_1_1WPoint.html</anchorfile>
      <anchor>9deefa01fdefd507b042a32e0abec94e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setX</name>
      <anchorfile>classWt_1_1WPoint.html</anchorfile>
      <anchor>4f78a5aa9dd51cc346e8cfeb077c9716</anchor>
      <arglist>(int x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setY</name>
      <anchorfile>classWt_1_1WPoint.html</anchorfile>
      <anchor>663e99c2f8f021aec35ad8392c375731</anchor>
      <arglist>(int y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>x</name>
      <anchorfile>classWt_1_1WPoint.html</anchorfile>
      <anchor>801c846b8debcb6eb93e2dad30990a76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>y</name>
      <anchorfile>classWt_1_1WPoint.html</anchorfile>
      <anchor>20a3f0ac58b3e5b00e2bea9fcb314c20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WPoint.html</anchorfile>
      <anchor>45cb53a528919e8897a1bd91decd6e76</anchor>
      <arglist>(const WPoint &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WPoint.html</anchorfile>
      <anchor>721a1e0a065ab6d945dd850c3e9ad039</anchor>
      <arglist>(const WPoint &amp;other) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPointF</name>
    <filename>classWt_1_1WPointF.html</filename>
    <member kind="function">
      <type></type>
      <name>WPointF</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>cb4536b133ba1a6ec010a7d489ba9d52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPointF</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>5287bb6bfa0fa598be6433aca25cbd5e</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>3d518e1f3cea189c11c38f15d5692744</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setX</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>07f37f26155b5b1d7c44cb4f7c572064</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setY</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>a7910f613cfe0b89caed7b6991ae1e9c</anchor>
      <arglist>(double y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>x</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>27c5b399724d9e6575d14fa189039c7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>y</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>707fac2acb24215c90783fb5d1781e80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>cf34a0e5f35c76c61109fc5d4268fde8</anchor>
      <arglist>(const WPointF &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>2469e492ddad621c6e8856f8ae9e4069</anchor>
      <arglist>(const WPointF &amp;other) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPolygonArea</name>
    <filename>classWt_1_1WPolygonArea.html</filename>
    <base>Wt::WAbstractArea</base>
    <member kind="function">
      <type></type>
      <name>WPolygonArea</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>fa52a76e46a98a1fcec1d5bdfa816d6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPolygonArea</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>27b4a6851ec95b3716084d745e04b383</anchor>
      <arglist>(const std::vector&lt; WPoint &gt; &amp;points)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPolygonArea</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>1d32a9af6194e2b3ecf357816e2d90c7</anchor>
      <arglist>(const std::vector&lt; WPointF &gt; &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPoint</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>f6876fcbc964c2322008bc40eb1542ce</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPoint</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>42ec8b148f31ddd30ea2df8da1456d94</anchor>
      <arglist>(const WPoint &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPoint</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>73d7505c0ceb966de94b1f7cd2a1491f</anchor>
      <arglist>(const WPointF &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPoints</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>f69651570f280e4f647a32108712940c</anchor>
      <arglist>(const std::vector&lt; WPoint &gt; &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPoints</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>9e036986557cab012105947f07cf5d13</anchor>
      <arglist>(const std::vector&lt; WPointF &gt; &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WPoint &gt; &amp;</type>
      <name>points</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>3ba6dfe5e328421904816f94915303f2</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPopupMenu</name>
    <filename>classWt_1_1WPopupMenu.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WPopupMenu</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>cbb4d1eb7c4c9c22732db1f8d326755d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WPopupMenuItem *</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>6109cb59b9a36024e9691efe15392770</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WPopupMenuItem *</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>a17fe5a8c7c687f5073ff67e0e207b27</anchor>
      <arglist>(const std::string &amp;iconPath, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WPopupMenuItem *</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>92bfbdaba4957d7aa7ab074ddf6c7901</anchor>
      <arglist>(const WString &amp;text, T *target, void(V::*method)())</arglist>
    </member>
    <member kind="function">
      <type>WPopupMenuItem *</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>496f42a6d5a83e6dd3ae81fce13721e7</anchor>
      <arglist>(const std::string &amp;iconPath, const WString &amp;text, T *target, void(V::*method)())</arglist>
    </member>
    <member kind="function">
      <type>WPopupMenuItem *</type>
      <name>addMenu</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>50eaba20dd39974f03e891bd2a74c4fd</anchor>
      <arglist>(const WString &amp;text, WPopupMenu *menu)</arglist>
    </member>
    <member kind="function">
      <type>WPopupMenuItem *</type>
      <name>addMenu</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>192321f03e32aec24dafa9eedb67db08</anchor>
      <arglist>(const std::string &amp;iconPath, const WString &amp;text, WPopupMenu *menu)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>7dde07454b4b7557f87b480dc9911569</anchor>
      <arglist>(WPopupMenuItem *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSeparator</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>8f4135e800cafc0366aab88fd31848e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popup</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>9da2dff4c6de6845a5a15b1a7c22572c</anchor>
      <arglist>(const WPoint &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popup</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>8b63c8824aa820d8d3669e563b6f57f4</anchor>
      <arglist>(const WMouseEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>WPopupMenuItem *</type>
      <name>exec</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>a46285d2d5698ffc27551e8bb3b35d46</anchor>
      <arglist>(const WPoint &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>WPopupMenuItem *</type>
      <name>exec</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>e7d3aad5856e9ef376519201a07273aa</anchor>
      <arglist>(const WMouseEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>WPopupMenuItem *</type>
      <name>result</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>9cc90b57b1e6bf95c64b0bd542b372e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>c4cb24c44b31cec44008396f202d432c</anchor>
      <arglist>(bool hidden)</arglist>
    </member>
    <member kind="variable">
      <type>Signal</type>
      <name>aboutToHide</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>b3feb640c91932439d109153d31f0f73</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPopupMenuItem</name>
    <filename>classWt_1_1WPopupMenuItem.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WPopupMenuItem</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>9b2bfe15b548815e43613beebe38aa7b</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPopupMenuItem</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>454f4abbbda784c874a51ea8d22acb5e</anchor>
      <arglist>(const std::string &amp;iconPath, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WPopupMenuItem</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>566df86714a068d75045e87a51999faf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>183a8134d58c76f62bd84d405f904654</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>3c450003749c0d1f933c12dd202c111e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>7a5dade11f634972fddd4e7c7e84bffa</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>icon</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>42b266f00f46f4b7eb9a3f636f2d6c22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCheckable</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>8f1b98cf1c4362bcda671bbf833cbb7b</anchor>
      <arglist>(bool how)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCheckable</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>891cd208357fc5d4402acc12f951b338</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPopupMenu</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>4d73ac894229ea7ad28e900a7f59b7d3</anchor>
      <arglist>(WPopupMenu *menu)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChecked</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>1cb91298582f9404d22c268c3bba034f</anchor>
      <arglist>(bool how)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isChecked</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>06ece0c0b2d50ef0ac624dca2fcd2047</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>981f24ef341a504ff6c529fd5f52dd01</anchor>
      <arglist>(void *data)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>data</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>dd3e4ef46b78735e27053d4b816f6442</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>c5bc72416b24de408e5a8c61362e6230</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Signal</type>
      <name>triggered</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>38d4f42cdc225a7c70bd55f74c8a15ae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPushButton</name>
    <filename>classWt_1_1WPushButton.html</filename>
    <base>Wt::WFormWidget</base>
    <member kind="function">
      <type></type>
      <name>WPushButton</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>bd74d092403f1cbe17f8ea3529c0528f</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPushButton</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>6525ba8c05bb27ad80c4a0a0ff32cf71</anchor>
      <arglist>(const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>e76e2ad608c2acb0686dee57649a596d</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>c9eeba268762744f72158d9ec8de26fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>57084964c8ecf099bcf3e4767a5cca68</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WRadioButton</name>
    <filename>classWt_1_1WRadioButton.html</filename>
    <base>Wt::WAbstractToggleButton</base>
    <member kind="function">
      <type></type>
      <name>WRadioButton</name>
      <anchorfile>classWt_1_1WRadioButton.html</anchorfile>
      <anchor>f2a014f58ee5e9105e409c7e7b0219ff</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WRadioButton</name>
      <anchorfile>classWt_1_1WRadioButton.html</anchorfile>
      <anchor>1b05a25ac8803ad9cb96b441f0c09eee</anchor>
      <arglist>(const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WRadioButton</name>
      <anchorfile>classWt_1_1WRadioButton.html</anchorfile>
      <anchor>234ed5e2d0e698b80d4e7c8b65f027c2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WRectArea</name>
    <filename>classWt_1_1WRectArea.html</filename>
    <base>Wt::WAbstractArea</base>
    <member kind="function">
      <type></type>
      <name>WRectArea</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>56e72183f3e07a8161bd2795baaa9fc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WRectArea</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>d0eaa4bb51b94b7f695fddde8df3adee</anchor>
      <arglist>(int x, int y, int width, int height)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WRectArea</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>44f5f1b92b79e2355998a54cea5257c1</anchor>
      <arglist>(const WRectF &amp;rect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setX</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>14c6788e518a2db3a3128110763695b8</anchor>
      <arglist>(int x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>x</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>47b5e476e13e51c1c98c9d72017e9d56</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setY</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>0e19203a36ccf624d85be131f3b1ac30</anchor>
      <arglist>(int y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>y</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>020c4bd1576ca7a5c138f5ecccaa0592</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>07614d6f30cbe7ae69b8aa562ebe0922</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>width</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>930186d9bf4721d3b65b4a64032c7c74</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeight</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>6ed26185f1c92c5fc9e3f80f2a7733b2</anchor>
      <arglist>(int height)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>height</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>7dba50020eb443edbf16c0389c99bdf0</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WRectF</name>
    <filename>classWt_1_1WRectF.html</filename>
    <member kind="function">
      <type></type>
      <name>WRectF</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>7676cc3fde735f0eabc02df2ecb636c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WRectF</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>3d26d539fec651826796afb2a5b87a83</anchor>
      <arglist>(double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WRectF</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>23619ae019639c2057975535cd55c05c</anchor>
      <arglist>(const WPointF &amp;topLeft, const WPointF &amp;bottomRight)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>249ad5fd8e9f8944c4766d46b6f14e0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setX</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>6e3421e306699075d52111f60da2d057</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setY</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>95ac1538d8f47afee7fa031dccf8a9bf</anchor>
      <arglist>(double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>f297f3a2020d409fa148f3e12e28097c</anchor>
      <arglist>(double width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeight</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>c035c1a098d61f09b746ec63d338ff9f</anchor>
      <arglist>(double height)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>x</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>45bc90a0a76945e0dcd8c38a12194dd6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>y</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>e1e0121826ab777d95f43fde599db13f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>width</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a753427e56e604c9731ed230d3040003</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>height</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>294cb52820c4c50d64c0af0da9af7c08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>left</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>d7ee063d60ea848ae3b37cf662b5827a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>top</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>81a752c33b1fdb0988d81d3d411ea894</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>right</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>d7d9f3b2208430ef38aa96a7d6592108</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>bottom</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>577ea0708a4a4bb6f10febc9c1b8e567</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>topLeft</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>584b65722cf37b9ebcdb906b55c0d6dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>topRight</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>c596407f8db4cb1d57f55404a97e7845</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>center</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>152c145b940ce78d0e2071ea06b8e9ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>bottomLeft</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a567de202e36f066e90a020e44a3763a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>bottomRight</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>d84efe11dde39872210dd03133ae6585</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersects</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>2efed036fc6fe7be636788893be65d5f</anchor>
      <arglist>(const WRectF &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>WRectF</type>
      <name>united</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>86a64a17d5a11e2ea9b44fc9d2360ef6</anchor>
      <arglist>(const WRectF &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>WRectF</type>
      <name>normalized</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>8f0e63244aed0c98c2a2a63899408f05</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WRegExpValidator</name>
    <filename>classWt_1_1WRegExpValidator.html</filename>
    <base>Wt::WValidator</base>
    <member kind="function">
      <type></type>
      <name>WRegExpValidator</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>c73905fa4427ee0ab0ee83e6eeac0373</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WRegExpValidator</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>28a778bf75328bdbf629f1f48ce93b72</anchor>
      <arglist>(const boost::regex &amp;rx)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WRegExpValidator</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>9efe1939e1ade2fdbb88d3cab987d30d</anchor>
      <arglist>(const WString &amp;expr, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WRegExpValidator</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>a3a0d2b4c2bec81325eebfab1530d3dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRegExp</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>2446ec0ab97406aea78f9b1363fa013a</anchor>
      <arglist>(const WString &amp;expr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>cf832ac4937655536ee8f639347c0932</anchor>
      <arglist>(WString &amp;input, int &amp;pos) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createExtConfig</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>6ca44df82213538b13026d27f721669c</anchor>
      <arglist>(std::ostream &amp;config) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidNoMatchText</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>41b52e1428a6561c5be695702e20318a</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidNoMatchText</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>144ed2ffa928a0f6f28e456880126397</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>javaScriptValidate</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>ae5e8bce20a76f654cd007b8b85cba0d</anchor>
      <arglist>(const std::string &amp;jsRef) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WResource</name>
    <filename>classWt_1_1WResource.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type></type>
      <name>WResource</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>b4a2f71811a597a3603b039968dcb6d7</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WResource</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>776c19c9bbc95330941744cd129bc01a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>suggestFileName</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>8f2c3c2aa013cebecd73398dadc3d6d0</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>generateUrl</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>76fa5583d1f20cc718266b6d21591417</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>reentrant</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>81f68d8f2b6581d52c75f7d7fd7515f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReentrant</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>ddca728f604a3c94d7dff60f1691532b</anchor>
      <arglist>(bool reentrant)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>2bb851d4d1e6d2db3c957e8c5833ab7c</anchor>
      <arglist>(std::ostream &amp;out)</arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; void &gt;</type>
      <name>dataChanged</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>b3604bef7ea9814d06650d66ee43a4ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>ArgumentValues</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>edf3656cfcd61b60c0d7fa9b0ca2c705</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; std::string, ArgumentValues &gt;</type>
      <name>ArgumentMap</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>8774a5d40604d236d90beb64527b2d74</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual const std::string</type>
      <name>resourceMimeType</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>3b6d12fdbbe9f8564570f58141d9900d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>streamResourceData</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>9c11fc73c245234f8849c01507bbf650</anchor>
      <arglist>(std::ostream &amp;stream, const ArgumentMap &amp;arguments)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>flush</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>01ee8f36a27007276d997da0179ece96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setArguments</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>8ea929afbdfe3c139190e61abe5e8a56</anchor>
      <arglist>(const ArgumentMap &amp;arguments)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addHeader</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>676e10534adca1030ef1bc2a4d6c32d8</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WScrollArea</name>
    <filename>classWt_1_1WScrollArea.html</filename>
    <base>Wt::WWebWidget</base>
    <member kind="enumeration">
      <name>ScrollBarPolicy</name>
      <anchorfile>classWt_1_1WScrollArea.html</anchorfile>
      <anchor>266104fe2b2f25b8f908de58e21ebbf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ScrollBarAsNeeded</name>
      <anchorfile>classWt_1_1WScrollArea.html</anchorfile>
      <anchor>266104fe2b2f25b8f908de58e21ebbf7c387af3baf5e109899bdddbf72586aaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ScrollBarAlwaysOff</name>
      <anchorfile>classWt_1_1WScrollArea.html</anchorfile>
      <anchor>266104fe2b2f25b8f908de58e21ebbf78c3f17ce7b5a537f91f6926e98dc3aa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ScrollBarAlwaysOn</name>
      <anchorfile>classWt_1_1WScrollArea.html</anchorfile>
      <anchor>266104fe2b2f25b8f908de58e21ebbf718cdc324ca6e869655208c8d02274a5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WScrollArea</name>
      <anchorfile>classWt_1_1WScrollArea.html</anchorfile>
      <anchor>2114c3abfc3b2aa78677f1d65dde9402</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidget</name>
      <anchorfile>classWt_1_1WScrollArea.html</anchorfile>
      <anchor>c313ec45cd9aa9382fc5b540ad9008ae</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>takeWidget</name>
      <anchorfile>classWt_1_1WScrollArea.html</anchorfile>
      <anchor>bef337f8179db15f4448bd60980ff371</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WScrollArea.html</anchorfile>
      <anchor>76426cecd85e75ed4add6b26853a0bb3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WScrollBar *</type>
      <name>horizontalScrollBar</name>
      <anchorfile>classWt_1_1WScrollArea.html</anchorfile>
      <anchor>5d25cb403fd03c5a4bc0116ab6278135</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WScrollBar *</type>
      <name>verticalScrollBar</name>
      <anchorfile>classWt_1_1WScrollArea.html</anchorfile>
      <anchor>6f3aca1de426f4a256997e3a780bc251</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScrollBarPolicy</name>
      <anchorfile>classWt_1_1WScrollArea.html</anchorfile>
      <anchor>7870ea2ccdbd40d62cd3633d58ba5b0e</anchor>
      <arglist>(ScrollBarPolicy scrollBarPolicy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHorizontalScrollBarPolicy</name>
      <anchorfile>classWt_1_1WScrollArea.html</anchorfile>
      <anchor>61394643cb1195d2e40d0189fe8f3dc4</anchor>
      <arglist>(ScrollBarPolicy scrollBarPolicy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVerticalScrollBarPolicy</name>
      <anchorfile>classWt_1_1WScrollArea.html</anchorfile>
      <anchor>f94d4c195ed2f0fa8114277c42cd59e2</anchor>
      <arglist>(ScrollBarPolicy scrollBarPolicy)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WScrollBar</name>
    <filename>classWt_1_1WScrollBar.html</filename>
    <base>Wt::WObject</base>
    <member kind="slot">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classWt_1_1WScrollBar.html</anchorfile>
      <anchor>ad9b9a1d141c02edc2853176135a052d</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>Orientation</type>
      <name>orientation</name>
      <anchorfile>classWt_1_1WScrollBar.html</anchorfile>
      <anchor>bad5971aa318817e38fb85eaf33e8f1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>tie</name>
      <anchorfile>classWt_1_1WScrollBar.html</anchorfile>
      <anchor>6eb5c19029a90ae5b748411dc0dd4c89</anchor>
      <arglist>(WScrollBar *one, WScrollBar *two)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unTie</name>
      <anchorfile>classWt_1_1WScrollBar.html</anchorfile>
      <anchor>9d78abc2a0c36b6dfb707ca8d427e017</anchor>
      <arglist>(WScrollBar *one, WScrollBar *two)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSelectionBox</name>
    <filename>classWt_1_1WSelectionBox.html</filename>
    <base>Wt::WComboBox</base>
    <member kind="function">
      <type>int</type>
      <name>verticalSize</name>
      <anchorfile>classWt_1_1WSelectionBox.html</anchorfile>
      <anchor>0aa28564501cd4c2653fdc45c4fd1a20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVerticalSize</name>
      <anchorfile>classWt_1_1WSelectionBox.html</anchorfile>
      <anchor>90bcf3611a6f54e0358b7f208b0cb478</anchor>
      <arglist>(int items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectionMode</name>
      <anchorfile>classWt_1_1WSelectionBox.html</anchorfile>
      <anchor>a3119417024e25b7b24e66cab17edb31</anchor>
      <arglist>(SelectionMode mode)</arglist>
    </member>
    <member kind="function">
      <type>SelectionMode</type>
      <name>selectionMode</name>
      <anchorfile>classWt_1_1WSelectionBox.html</anchorfile>
      <anchor>22a94e26ce301d967efa0893093f73c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::set&lt; int &gt; &amp;</type>
      <name>selectedIndexes</name>
      <anchorfile>classWt_1_1WSelectionBox.html</anchorfile>
      <anchor>e27b849b2eeef1bf35ddbaca3659e539</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectedIndexes</name>
      <anchorfile>classWt_1_1WSelectionBox.html</anchorfile>
      <anchor>4fcb25c6d7c00f5659959180df9a337c</anchor>
      <arglist>(const std::set&lt; int &gt; &amp;selection)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearSelection</name>
      <anchorfile>classWt_1_1WSelectionBox.html</anchorfile>
      <anchor>2925ed26e7e56d8ce7bca40dc338f5e0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WServer</name>
    <filename>classWt_1_1WServer.html</filename>
    <member kind="enumeration">
      <name>EntryPointType</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>d9445a66a42b3872e42d1483fa8dd624</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Application</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>d9445a66a42b3872e42d1483fa8dd6249f4ca64f3e0c108fc531226f33ce1a0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WidgetSet</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>d9445a66a42b3872e42d1483fa8dd624ccb0d29729d30f2e298223dd13056cc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WServer</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>4e347c4f853f527999c8c46c62d16f6b</anchor>
      <arglist>(const std::string &amp;wtApplicationPath=std::string(), const std::string &amp;wtConfigurationFile=std::string())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WServer</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>e7c9762cd7be550b0fcd71593af5fb37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setServerConfiguration</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>01bf87ba3346b98b2ebeb5fabab99623</anchor>
      <arglist>(int argc, char *argv[], const std::string &amp;serverConfigurationFile)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEntryPoint</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>6af1663a509c7879741b7d1a3c3f638a</anchor>
      <arglist>(EntryPointType type, ApplicationCreator callback, const std::string &amp;path=std::string())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>start</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>f1699e7cee79223e6d35c1c5eae0aa5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>da0ea6f20704b1255f5c28764c776f2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRunning</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>493c35784e8f0ba28281483415eed7e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>waitForShutdown</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>927958c78e654461711d9252ba30cb2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>WRun</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>bca6890dab44d87bd3af64705ac072d3</anchor>
      <arglist>(int argc, char **argv, ApplicationCreator createApplication=0)</arglist>
    </member>
    <class kind="class">Wt::WServer::Exception</class>
  </compound>
  <compound kind="class">
    <name>Wt::WServer::Exception</name>
    <filename>classWt_1_1WServer_1_1Exception.html</filename>
    <member kind="function">
      <type>const char *</type>
      <name>what</name>
      <anchorfile>classWt_1_1WServer_1_1Exception.html</anchorfile>
      <anchor>ab549bbb4c5cb7b9827b65aa0dd218df</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Signal</name>
    <filename>classWt_1_1Signal.html</filename>
    <templarg>A1</templarg>
    <templarg>A2</templarg>
    <templarg>A3</templarg>
    <templarg>A4</templarg>
    <templarg>A5</templarg>
    <templarg>A6</templarg>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a481062b581f9d2f071bf07b421d87ca</anchor>
      <arglist>(WObject *sender=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>e665a336ae3e576bcb372f16c306d4d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>e6b9bffa47c0ffdd1667e8f13e8dab74</anchor>
      <arglist>(T *target, void(V::*method)())</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>7f296d5965c03785c7a635431f7f6a79</anchor>
      <arglist>(T *target, void(V::*method)(A1))</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a1a8436d769d11f5cb0c1febafd1e27d</anchor>
      <arglist>(T *target, void(V::*method)(A1, A2))</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>239b63678084087ba15fd17f6ab1a312</anchor>
      <arglist>(T *target, void(V::*method)(A1, A2, A3))</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>976facef99c1a6a53871bd7118c7e1bc</anchor>
      <arglist>(T *target, void(V::*method)(A1, A2, A3, A4))</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>906499f6b97c28d1da8b5c615aee41dc</anchor>
      <arglist>(T *target, void(V::*method)(A1, A2, A3, A4, A5))</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>d5eaf26f300335ccbf37ed71026ff1b7</anchor>
      <arglist>(T *target, void(V::*method)(A1, A2, A3, A4, A5, A6))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>b9ec97260c79e7b546b7235ad2ffd627</anchor>
      <arglist>(A1 a1=NoClass::none, A2 a2=NoClass::none, A3 a3=NoClass::none, A4 a4=NoClass::none, A5 a5=NoClass::none, A6 a6=NoClass::none)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>c16e93ada5d9b28339d399d2e12d6f51</anchor>
      <arglist>(A1 a1=NoClass::none, A2 a2=NoClass::none, A3 a3=NoClass::none, A4 a4=NoClass::none, A5 a5=NoClass::none, A6 a6=NoClass::none)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>4a65919846e7d1cedabd0e9acc65563a</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::EventSignal</name>
    <filename>classWt_1_1EventSignal.html</filename>
    <templarg>E</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1EventSignal.html</anchorfile>
      <anchor>ba826d0b0c74751fed4ab8eb9b05732b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1EventSignal.html</anchorfile>
      <anchor>79396e66db668bd56de65943f83dacd2</anchor>
      <arglist>(T *target, void(V::*method)())</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1EventSignal.html</anchorfile>
      <anchor>60c4413956cb5484be2670982721202c</anchor>
      <arglist>(T *target, void(V::*method)(E))</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1EventSignal.html</anchorfile>
      <anchor>9d1fd7a2f0b8421e170d5423b0df5c59</anchor>
      <arglist>(T *target, void(V::*method)(const E &amp;))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1EventSignal.html</anchorfile>
      <anchor>e026eaa8a8d978d83f46526ff58c6abc</anchor>
      <arglist>(JSlot &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1EventSignal.html</anchorfile>
      <anchor>bf06f84843a5f0731738efd5dd881e77</anchor>
      <arglist>(E e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1EventSignal.html</anchorfile>
      <anchor>b418b2377a1f01b6c13cb74c392b09d8</anchor>
      <arglist>(E e)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSignalMapper</name>
    <filename>classWt_1_1WSignalMapper.html</filename>
    <templarg>T</templarg>
    <templarg>A1</templarg>
    <base>Wt::WObject</base>
    <member kind="slot">
      <type>void</type>
      <name>map</name>
      <anchorfile>classWt_1_1WSignalMapper.html</anchorfile>
      <anchor>f4bc239e4f47ae25e6544be3dd1676de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>map1</name>
      <anchorfile>classWt_1_1WSignalMapper.html</anchorfile>
      <anchor>236a9f2bfa71fd1f990f04e105782976</anchor>
      <arglist>(A1 a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WSignalMapper</name>
      <anchorfile>classWt_1_1WSignalMapper.html</anchorfile>
      <anchor>5c23094be042e549bb54a09c14fd5bd2</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMapping</name>
      <anchorfile>classWt_1_1WSignalMapper.html</anchorfile>
      <anchor>89ccb4bde41e6e326072077214756ccc</anchor>
      <arglist>(WObject *sender, const T &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mapConnect</name>
      <anchorfile>classWt_1_1WSignalMapper.html</anchorfile>
      <anchor>284d7463d4d43634c87141a0df59c083</anchor>
      <arglist>(SignalBase &amp;signal, const T &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mapConnect1</name>
      <anchorfile>classWt_1_1WSignalMapper.html</anchorfile>
      <anchor>39065be7a332fcc9b07cc1e167b74313</anchor>
      <arglist>(S &amp;signal, const T &amp;data)</arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; T, A1 &gt;</type>
      <name>mapped</name>
      <anchorfile>classWt_1_1WSignalMapper.html</anchorfile>
      <anchor>8e52b2a5b089a6a68fe734167384801d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSlider</name>
    <filename>classWt_1_1WSlider.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="enumeration">
      <name>TickPosition</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>393f2ee54ef0816e7fb774db7b449cf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoTicks</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>393f2ee54ef0816e7fb774db7b449cf4e17c44b8caa69d3f08459f6b15969a7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TicksBothSides</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>393f2ee54ef0816e7fb774db7b449cf4ae3b3607af6d685011cbb98b385f61cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TicksAbove</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>393f2ee54ef0816e7fb774db7b449cf4d2ff66b50fd871c8087f5d5ab3a96a0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TicksBelow</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>393f2ee54ef0816e7fb774db7b449cf47f3790c208f56c1ba4104839c750e159</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TicksLeft</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>393f2ee54ef0816e7fb774db7b449cf4a3643c713a52ea96d4a4d4102732cbb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TicksRight</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>393f2ee54ef0816e7fb774db7b449cf4c9e3b1846ed47193c0f42cda600b8073</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WSlider</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>339c6e8b9a32f232039a51270a36c8e3</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WSlider</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>062f657c1dcfc53224aacb97374513b1</anchor>
      <arglist>(Orientation orientation, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WSlider</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>86b98ee70f4d0d4f5e3fe23b3939a8e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOrientation</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>bbb9b8059f3a19cd36ffbfda00467016</anchor>
      <arglist>(Wt::Orientation orientation)</arglist>
    </member>
    <member kind="function">
      <type>Orientation</type>
      <name>orientation</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>fdb2cf9f61821fdf8ca376ab11f78453</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTickInterval</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>3497303ace2820b3bd457119cec35411</anchor>
      <arglist>(int tickInterval)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tickInterval</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>9ddb7b0dd68ca38051ff302f4c02ed5f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTickPosition</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>9eb10ad55f06784e3a2bcbc41d696dcb</anchor>
      <arglist>(TickPosition tickPosition)</arglist>
    </member>
    <member kind="function">
      <type>TickPosition</type>
      <name>tickPosition</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>2a013484ee010f276776b0a00be7ae1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>fc41362dafd1f53f4d0d52385c04d40c</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>value</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>0b701be67d81634d95f4ecb9f1ff372b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximum</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>e1fcddb363795d572da2ae68362771e5</anchor>
      <arglist>(int maximum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maximum</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>e77592e0f0514cb23dfc7e060fcf37e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinimum</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>ea0dad399f79f2014dbd3f06d7cdd6d0</anchor>
      <arglist>(int minimum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>minimum</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>5b000d3d26cc6e08c84de252477137ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRange</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>2031dbb839f0da2ade7e8e88d32079e4</anchor>
      <arglist>(int minimum, int maximum)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>b2c74e01222219a65b799cd78800a114</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; int &gt;</type>
      <name>valueChanged</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>86303950911baa192a2d1fb4a9670464</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSocketNotifier</name>
    <filename>classWt_1_1WSocketNotifier.html</filename>
    <base>Wt::WObject</base>
    <member kind="enumeration">
      <name>Type</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>5be2fe0fe94d449a0d6b1ac77f7b548c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Read</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>5be2fe0fe94d449a0d6b1ac77f7b548c057d53943ca8e7e9381526747c689d1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Write</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>5be2fe0fe94d449a0d6b1ac77f7b548c85abb8bd7445d145faa84c8545b1d5f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Exception</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>5be2fe0fe94d449a0d6b1ac77f7b548c17c50ed02a1f9aa67ece3d5e71b66141</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WSocketNotifier</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>e60a2f36b909f50404bfb15864562347</anchor>
      <arglist>(int socket, Type type, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WSocketNotifier</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>ff88999b1c55254f8b129193a53ee485</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>socket</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>3a1bde7ddf5a3bdde74906343027e355</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>type</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>42d21d0c22cdf3b3ed7ee10dbdc82aed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>9cb21fa4b5827a205b21f9b656baca6d</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabled</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>893c8fcee0191bb2ae56df27697f8f7c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; int &gt;</type>
      <name>activated</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>28efb6ce1838716ba216bc3e9cb48ef8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSortFilterProxyModel</name>
    <filename>classWt_1_1WSortFilterProxyModel.html</filename>
    <base>Wt::WAbstractProxyModel</base>
    <member kind="function">
      <type></type>
      <name>WSortFilterProxyModel</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>ec8bd731a505369b12695beeecc1fd19</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WSortFilterProxyModel</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>cf3b4890f299bb548b0351f6e68610b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>mapFromSource</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>b32e734793e3a6e657b3b5655831885e</anchor>
      <arglist>(const WModelIndex &amp;sourceIndex) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>mapToSource</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>290351f93612a5180c055328e2ff3663</anchor>
      <arglist>(const WModelIndex &amp;proxyIndex) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSourceModel</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>805bcc6964e8c0194638c05f30d2a8cb</anchor>
      <arglist>(WAbstractItemModel *sourceModel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilterKeyColumn</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>af272fe23196b67a409e7d0de03fd8d5</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>filterKeyColumn</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>9c1714947d1910e049ec26067e0cf4d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilterRegExp</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>1c9dce68769668570bb5bccc3e0a9969</anchor>
      <arglist>(const WString &amp;pattern)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>filterRegExp</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>2e5b064ec7ebf4e738b7e423a7449ed3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilterRole</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>0ca42014aa2f383154409032c9a3c8d3</anchor>
      <arglist>(int role)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>filterRole</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>cbbbb4a3a95a61ea1289036d4069f0bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSortRole</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>63686e0718a623c6507f61195e020917</anchor>
      <arglist>(int role)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sortRole</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>35cfadde9afc4495dfab93234e5e169b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDynamicSortFilter</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>4dfdc62d591249454cbb38e5099f19b4</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dynamicSortFilter</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>1d977245afeec04711241c70bff84c5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>d295e3835ffd9f5e602b3dbb29f93f22</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>rowCount</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a4d6d01a9ec7bbdb1d77f31fbd332791</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>6ad76d2a537d2f8e3f6f084a10e493a3</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>index</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>018f06cc89846655bd0db3c7a9eebfcb</anchor>
      <arglist>(int row, int column, const WModelIndex &amp;parent=WModelIndex()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sort</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>119a5cdf51974371db37ae6972e5955b</anchor>
      <arglist>(int column, SortOrder order=AscendingOrder)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>filterAcceptRow</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>cabfd24268c9b37e6dc296557423e5a5</anchor>
      <arglist>(int sourceRow, const WModelIndex &amp;sourceParent) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>lessThan</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>5fc984dd492c02e47de2d87df6816d17</anchor>
      <arglist>(const WModelIndex &amp;lhs, const WModelIndex &amp;rhs) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WStackedWidget</name>
    <filename>classWt_1_1WStackedWidget.html</filename>
    <base>Wt::WContainerWidget</base>
    <member kind="slot">
      <type>void</type>
      <name>setCurrentIndex</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>4a2f79cf685ade6ad529e0673e22e6b0</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setCurrentWidget</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>460ba17f219b8cc75748735417b04828</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WStackedWidget</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>32b77a6dded133822098ac759d108bbe</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>ffaa67bed3b16d9cca3c83a1d9386918</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>a20b9fec2222f2ee97eca2b0c07fb3f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentIndex</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>47fd91b7a51f57f341fde82b611cc1a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>currentWidget</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>82b399a7a80f64617b1e8995999476d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>6847fbec442359b1c1637ec5fe31d6f1</anchor>
      <arglist>(WWidget *widget) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertWidget</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>7a199e9cf57bee54333880534070767c</anchor>
      <arglist>(int index, WWidget *widget)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeWidget</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>c6df7a2910d43efead64405866043156</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>e027e1c38b6f987b3b072d3e3931ccd7</anchor>
      <arglist>(int index) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WStandardItem</name>
    <filename>classWt_1_1WStandardItem.html</filename>
    <member kind="function">
      <type></type>
      <name>WStandardItem</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>be5aebe20c0c5309be95928996e3acf1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WStandardItem</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>599f5dd0b5f6ca0a4bf8025e81be4ad1</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WStandardItem</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>1cce25693284be45efd3a8a13e9f10ee</anchor>
      <arglist>(const std::string &amp;iconUri, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WStandardItem</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>302d98cd8d22708e14cbe171b4864d42</anchor>
      <arglist>(int rows, int columns=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WStandardItem</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>b8f7298a52e2884445b5bb7b68e451e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>7922bbfa1b9236f2c3f20ed8082bc2e3</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>text</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>5cd26b1515b25d32b2872210918d7e68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>6ef82d367150a352795bdb2f780db14a</anchor>
      <arglist>(const std::string &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>icon</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>8589c64bc69cd96b77487341a681e251</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyleClass</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>760bedb0ba3b5f33b0ea8bfa22e5961e</anchor>
      <arglist>(const WString &amp;styleClass)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>styleClass</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>cb892e03bc947f0d8a88362ffed90f54</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToolTip</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>76442b01365d83b068da168e08b63290</anchor>
      <arglist>(const WString &amp;toolTip)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toolTip</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>dc6f732a90772386087c83d723abb01c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalPath</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>f84903204e2b648662a88bfb1c1f1b27</anchor>
      <arglist>(const std::string &amp;internalpath)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>internalPath</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>0a91034168e95924077ec66e1a2d45de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUrl</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>f17035241a875c0c453d01f48db0a3eb</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>url</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>92e9bd9515807142c644a728576ff9c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChecked</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>bbbeb294638fa8a226268084eb9de07d</anchor>
      <arglist>(bool checked)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isChecked</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>3ec85da5d9a6c62fbe420cb002cb18d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFlags</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>268a981e1fe4a2a37acd5a1980d31c90</anchor>
      <arglist>(int flags)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>flags</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>9b70e7807c04b19596f6277c2762c461</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCheckable</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>5de5f61ac9b8b57c09da2f55c3a248e1</anchor>
      <arglist>(bool checkable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCheckable</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>197e297e6ba98d3b3d4853c7b5a5db32</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>fbe54e68e576c4902c9085f8966c93ef</anchor>
      <arglist>(const boost::any &amp;data, int role=UserRole)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual boost::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>5b94df87dd78d97534e016f24234f787</anchor>
      <arglist>(int role=UserRole) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasChildren</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>d28fd8e888080cb173b2d876a77786c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRowCount</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>f93e0c455c2272dd950dce0644504b15</anchor>
      <arglist>(int rows)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rowCount</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>0b025885afc1500285359821f52bb531</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnCount</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>221176a45599230e03d04e4c08f04499</anchor>
      <arglist>(int columns)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>e157a0e2b44598cb25803a25d0d8bfe4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendColumn</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>ae8a2684f85098c41aa34895920a6c84</anchor>
      <arglist>(const std::vector&lt; WStandardItem * &gt; &amp;items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertColumn</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>60bcb4a8bd91aecf585c8318ef705f14</anchor>
      <arglist>(int column, const std::vector&lt; WStandardItem * &gt; &amp;items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendRow</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>bd54c7797f40c036b38300ba9cdf69b5</anchor>
      <arglist>(const std::vector&lt; WStandardItem * &gt; &amp;items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertRow</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>095602cce3f0c659454be852d9a94a0b</anchor>
      <arglist>(int row, const std::vector&lt; WStandardItem * &gt; &amp;items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertColumns</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>2bf1d1d17e5a62ffcb665a0809fe0299</anchor>
      <arglist>(int column, int count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertRows</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a3633c2a26d7a267f7f433e134b219dd</anchor>
      <arglist>(int row, int count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendRow</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>b0f932bb7dcad18eae1cdf80c0be6d4e</anchor>
      <arglist>(WStandardItem *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertRow</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>6990f40f13a6104eebc22776e58c06fd</anchor>
      <arglist>(int row, WStandardItem *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendRows</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>d8fedcff08c109dd84a84d7af33cda41</anchor>
      <arglist>(const std::vector&lt; WStandardItem * &gt; &amp;items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertRows</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>d7f4b1f298f31e8ebe6954ca91e613f0</anchor>
      <arglist>(int row, const std::vector&lt; WStandardItem * &gt; &amp;items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChild</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>f1f8742b169e098f3ad9fb47a39dabcc</anchor>
      <arglist>(int row, int column, WStandardItem *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChild</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>91493ed3198e1f9adec44a43c9612a7b</anchor>
      <arglist>(int row, WStandardItem *item)</arglist>
    </member>
    <member kind="function">
      <type>WStandardItem *</type>
      <name>child</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>874247b52596f31126882ee8ea53d3ca</anchor>
      <arglist>(int row, int column=0) const </arglist>
    </member>
    <member kind="function">
      <type>WStandardItem *</type>
      <name>takeChild</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>0f0fdd581ce3cb5e36e454c5723f21eb</anchor>
      <arglist>(int row, int column)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; WStandardItem * &gt;</type>
      <name>takeColumn</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>7707f797f7c9a726a4cafea31718f3dd</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; WStandardItem * &gt;</type>
      <name>takeRow</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>837d95bdff4d66b5b8420a93e78a292d</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeColumn</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>d2bdf52c5e251eca480a438db233f7b6</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeColumns</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>cd189fbf5324542ad05cfdf0d6376f97</anchor>
      <arglist>(int column, int count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeRow</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>d3e49ceafa130f6b537983b8c186b609</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeRows</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>114deac9facd4b6c2f47b64a6e90abfe</anchor>
      <arglist>(int row, int count)</arglist>
    </member>
    <member kind="function">
      <type>WModelIndex</type>
      <name>index</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>8afc6170ff2544d385823795b4dded37</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WStandardItemModel *</type>
      <name>model</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>d629764e5e03409974d161153a134d4a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WStandardItem *</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>3077685cc81d575a56ca30199b505c71</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>row</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>bbf8d957d714eb536135d62dc70a2d22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>column</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>578238226092665edc6b20be1a1a9cfb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WStandardItem *</type>
      <name>clone</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>56aabcd49c74a1a3570a55883639acd2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>operator&lt;</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>c7753533f27c5e142d6e92ded1f0f683</anchor>
      <arglist>(const WStandardItem &amp;other) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sortChildren</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>0d3540cac93582ab50d111032f4b9b44</anchor>
      <arglist>(int column, SortOrder order)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WStandardItemModel</name>
    <filename>classWt_1_1WStandardItemModel.html</filename>
    <base>Wt::WAbstractItemModel</base>
    <member kind="function">
      <type></type>
      <name>WStandardItemModel</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>c196f72fe7716da075fd07733b1c1b6f</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WStandardItemModel</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>ef7ec1979605acf6a508989a3f93a05c</anchor>
      <arglist>(int rows, int columns, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WStandardItemModel</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>f361083dead5e486bafacf68165df7ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a07712b2aa72937a9736150fa85f55be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WStandardItem *</type>
      <name>invisibleRootItem</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>5fdc79e8100020d98a77ad3543019477</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WModelIndex</type>
      <name>indexFromItem</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>f12ec42f5800fce941b755e78ad12c9d</anchor>
      <arglist>(const WStandardItem *item) const </arglist>
    </member>
    <member kind="function">
      <type>WStandardItem *</type>
      <name>itemFromIndex</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>145e32a4cbc3972eb96a4021710a8c3c</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendColumn</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>2fe535fb71106a3627f71b82b6f5baaa</anchor>
      <arglist>(const std::vector&lt; WStandardItem * &gt; &amp;items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertColumn</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>e556b6aa88a3643e74cec7772901d28e</anchor>
      <arglist>(int column, const std::vector&lt; WStandardItem * &gt; &amp;items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendRow</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>96216a68e34ebba32606a51c53054bf9</anchor>
      <arglist>(const std::vector&lt; WStandardItem * &gt; &amp;items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertRow</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>78fd43e608a944d6133d605a6093a9cf</anchor>
      <arglist>(int row, const std::vector&lt; WStandardItem * &gt; &amp;items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendRow</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>29b3e2f5a3f034b2c2e3ad912bfde2f3</anchor>
      <arglist>(WStandardItem *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertRow</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>0d06fe8a64f5f2afe3250e449293a8d3</anchor>
      <arglist>(int row, WStandardItem *item)</arglist>
    </member>
    <member kind="function">
      <type>WStandardItem *</type>
      <name>item</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>32d755ace793c2110b0fa5d650a0d577</anchor>
      <arglist>(int row, int column=0) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setItem</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>70852fa43e28b529193e9f9ffbf466b7</anchor>
      <arglist>(int row, int column, WStandardItem *item)</arglist>
    </member>
    <member kind="function">
      <type>WStandardItem *</type>
      <name>itemPrototype</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>382fe331f22553bdd3e8ea80c8e6c4b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setItemPrototype</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>3acfcbe5f75c2b2f41d503056c12f734</anchor>
      <arglist>(WStandardItem *item)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; WStandardItem * &gt;</type>
      <name>takeColumn</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a611e8b36fb94233795e1b5dfa1010a7</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; WStandardItem * &gt;</type>
      <name>takeRow</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>06ede866383dd1ffd08c329ab8213788</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>WStandardItem *</type>
      <name>takeItem</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>78fec4e8611ae29d8ad729590169be2e</anchor>
      <arglist>(int row, int column=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSortRole</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>3aa1f52a3ae23611267e049130cb472c</anchor>
      <arglist>(int role)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sortRole</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>9bd7204c237e9fd602ad4b6d046f3ac5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sort</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>884ad9c56cee759be868b3db5c520ee2</anchor>
      <arglist>(int column, SortOrder order=AscendingOrder)</arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; WStandardItem * &gt;</type>
      <name>itemChanged</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>8066d16417c2dca95659cea8b9d8a8de</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WString</name>
    <filename>classWt_1_1WString.html</filename>
    <member kind="function">
      <type></type>
      <name>WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>b1118313feb49fd2a1f7eab40f7f7a56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>1259e1f8285f3e04ef62fb59e6c83f4e</anchor>
      <arglist>(const wchar_t *value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>22fb311a713484d978b52b6787910da7</anchor>
      <arglist>(const WString &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>217c6be8205e02d3e2580b6c59357bb6</anchor>
      <arglist>(const std::wstring &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a1e577f4cf6352a3a657fde3f7d3034e</anchor>
      <arglist>(const char *value, CharEncoding encoding=LocalEncoding)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>65df74efecfae4e46c68fe3ff28ff81d</anchor>
      <arglist>(const std::string &amp;value, CharEncoding encoding=LocalEncoding)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>d3e7e1481f31514ecf58a6a344ec6ca6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>fbd9254fb159d682ed4a2227a7ec69b7</anchor>
      <arglist>(const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>5a1bf5761127553e8189a278525af71c</anchor>
      <arglist>(const WString &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>ccc7df36ce3febb1b2e1c297b30fafd2</anchor>
      <arglist>(const WString &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>111e77b8cf401664d191eaf3f85867b1</anchor>
      <arglist>(const WString &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>operator+=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>bb46a3098a1a185a3498fbcf4c714c7b</anchor>
      <arglist>(const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>operator+=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>0c455e324e5e756c456cd662f829373c</anchor>
      <arglist>(const std::wstring &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>operator+=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>64bbf435dfe82342ce43faf9c48ee28f</anchor>
      <arglist>(const wchar_t *rhs)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>operator+=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>36d097b2ed9a2e921ad2d6a79bc3dd25</anchor>
      <arglist>(const std::string &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>operator+=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>cac4b0bc682e0789edc2976883ed7a5a</anchor>
      <arglist>(const char *rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>87a90e69ab25d62ba029e10ea244abaf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toUTF8</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>159d088da6e8f2be1035b2341889254c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::wstring</type>
      <name>value</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>b76d45947986f8aa20763cf99267ec23</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>narrow</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>893672a7cc76cae5ea8eac730a12af20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator std::wstring</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>af8a69faf2551af5afb4757fd02f631b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>literal</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>61a714a97bb6d70d60be6f9a1997e636</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>key</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>18807776c41bdaebd7264bbabdd2282a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>arg</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>1c3d0d7790282777ce13edececfe0095</anchor>
      <arglist>(const std::wstring &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>arg</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>7da2111a8ca361ccd7d77df0232b3986</anchor>
      <arglist>(const std::string &amp;value, CharEncoding=LocalEncoding)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>arg</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>4761af728bf3cc5bca4ae3770243883e</anchor>
      <arglist>(const WString &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>arg</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>167d99295d497bc37c11893c175e7e02</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>arg</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>adfe619a23256dab80fd238c6e4ad7d7</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::string &gt; &amp;</type>
      <name>args</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>59dcc59bd1bc95984f2add4e32e914c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>545b18b7e07b4596281970ca1599430b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>jsStringLiteral</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>bcdf277c20807ab963effd7e54732fa8</anchor>
      <arglist>(char delimiter= &apos;\&apos;&apos;) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>fromUTF8</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>ed752db62e17f44ed22ba822a5903d56</anchor>
      <arglist>(const std::string &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>fromUTF8</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>c9803abb498e13a9d62f1a357cdbb44e</anchor>
      <arglist>(const char *value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>tr</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>0afc7dc0f9897456d71b569a86ca26c1</anchor>
      <arglist>(const char *key)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>tr</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>42a4aad50b5a1633b1cfef4c0ffa044a</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="enumeration">
      <name>CharEncoding</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>55b820090cc9d15753301df90e35fd52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LocalEncoding</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>55b820090cc9d15753301df90e35fd52e31c944a7e88c44611f9317e7c1223e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UTF8</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>55b820090cc9d15753301df90e35fd5292c04a55980fec5344377e55b271cfd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>WString</type>
      <name>WMessage</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>552bc8e01a4bc1c6ba53607c414a82b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>8e74a971d0d341af51ffcc77fc4c5f29</anchor>
      <arglist>(const WString &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>20e373795a949c805d82cd7793ce0847</anchor>
      <arglist>(const WString &amp;lhs, const std::wstring &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>29b92c396a6bdc6703a38c2da0822065</anchor>
      <arglist>(const WString &amp;lhs, const wchar_t *rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>bf52ea1a14eff4dc0f19fc089c499b58</anchor>
      <arglist>(const WString &amp;lhs, const std::string &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>8358446c46d0433f3f080698e271b91f</anchor>
      <arglist>(const WString &amp;lhs, const char *rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>c5c8dce7d5d1e3a9abe13a9d9093fbb2</anchor>
      <arglist>(const std::wstring &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>ec7aea6adc509be52d4852cdad577aa7</anchor>
      <arglist>(const wchar_t *lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>de2e90e8c1b589d5c7cde214e05953bb</anchor>
      <arglist>(const std::string &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>21c7b1899a0c1fefb22cad296605c66b</anchor>
      <arglist>(const char *lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>902005eafdaa7adc292dfb384feed65f</anchor>
      <arglist>(const char *lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>8b3b3574ae5e0eb9d8a74663a7ef52ad</anchor>
      <arglist>(const wchar_t *lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>afe1405efe5edabdb5fa11a2f0891899</anchor>
      <arglist>(const std::string &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>18fa1117aac536af9a3eeaf4a06d33e6</anchor>
      <arglist>(const std::wstring &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>5be68db1207e42e9cb78584aada52b7e</anchor>
      <arglist>(const char *lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>dd2140b578bed246c41705506987ce8d</anchor>
      <arglist>(const wchar_t *lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>39afb0dc0c18f1c4ae9a1c36fd061722</anchor>
      <arglist>(const std::string &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>4bbceb2c54d45a3b0b6bc55d15a17dba</anchor>
      <arglist>(const std::wstring &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::wostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>82f539b8c205675c9c9f4d5d42cc9c57</anchor>
      <arglist>(std::wostream &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>5175831fb21a4e6245bfde54c5aaa3d2</anchor>
      <arglist>(std::ostream &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::wstring</type>
      <name>widen</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>d33012d29c644a2c8fc9a3ac84e6fd49</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::string</type>
      <name>narrow</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>30d53369838e8b0a09a09cc958916b69</anchor>
      <arglist>(const std::wstring &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::string</type>
      <name>toUTF8</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>32dae81c17e873b041a85a8509c905a5</anchor>
      <arglist>(const std::wstring &amp;s)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WStringListModel</name>
    <filename>classWt_1_1WStringListModel.html</filename>
    <base>Wt::WAbstractListModel</base>
    <member kind="function">
      <type></type>
      <name>WStringListModel</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>8473bc475b42b0d2bbb171ab22f498fd</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WStringListModel</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>730e0b9b2fd0922d274b4ab7278420e5</anchor>
      <arglist>(const std::vector&lt; WString &gt; &amp;strings, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WStringListModel</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>fa9abc72565103ebedc8efa26dad427a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStringList</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>605688afa2a1810e1a01b3ef3d335bda</anchor>
      <arglist>(const std::vector&lt; WString &gt; &amp;strings)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WString &gt; &amp;</type>
      <name>stringList</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>d51da40b9c4267fffbb439bdc0ef718b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>flags</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>52d9dc942918217f97cb775ddd5f8621</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>9a650aa1d48d5e634573c930a5f62b45</anchor>
      <arglist>(const WModelIndex &amp;index, const boost::any &amp;value, int role=EditRole)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual boost::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>a953d435f25052df7b2c09a6f180c606</anchor>
      <arglist>(const WModelIndex &amp;index, int role=DisplayRole) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>rowCount</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>81138b8b606df663cc7163265a9b0644</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>insertRows</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>0c22294fa02436654cde45e34a84a228</anchor>
      <arglist>(int row, int count, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeRows</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>5d73ec0b7b622a4117afaebea3d4ce6b</anchor>
      <arglist>(int row, int count, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sort</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>3cc26548b0301db88afc8a52a59e8f55</anchor>
      <arglist>(int column, SortOrder order=AscendingOrder)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSubMenuItem</name>
    <filename>classWt_1_1WSubMenuItem.html</filename>
    <base>Wt::WMenuItem</base>
    <member kind="function">
      <type></type>
      <name>WSubMenuItem</name>
      <anchorfile>classWt_1_1WSubMenuItem.html</anchorfile>
      <anchor>0c56dcd20f9d6afaaf289d2270e3b296</anchor>
      <arglist>(const WString &amp;text, WWidget *contents, LoadPolicy policy=LazyLoading)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSubMenu</name>
      <anchorfile>classWt_1_1WSubMenuItem.html</anchorfile>
      <anchor>33eccd31a4aa8436cf66effa2cecf94b</anchor>
      <arglist>(WMenu *subMenu)</arglist>
    </member>
    <member kind="function">
      <type>WMenu *</type>
      <name>subMenu</name>
      <anchorfile>classWt_1_1WSubMenuItem.html</anchorfile>
      <anchor>a30469d72bfdec0c85181f012e269e9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>createItemWidget</name>
      <anchorfile>classWt_1_1WSubMenuItem.html</anchorfile>
      <anchor>3883ce17fd7d04553510700189fbc7af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateItemWidget</name>
      <anchorfile>classWt_1_1WSubMenuItem.html</anchorfile>
      <anchor>44820d1555db0e1f6593dd80d1c0b34e</anchor>
      <arglist>(WWidget *itemWidget)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderSelected</name>
      <anchorfile>classWt_1_1WSubMenuItem.html</anchorfile>
      <anchor>d3096bef2abbc291cb2560cd16d92458</anchor>
      <arglist>(bool selected)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual SignalBase &amp;</type>
      <name>activateSignal</name>
      <anchorfile>classWt_1_1WSubMenuItem.html</anchorfile>
      <anchor>38d7a0fa3581f34aa72c9fd4d1a6eaeb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSuggestionPopup</name>
    <filename>classWt_1_1WSuggestionPopup.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WSuggestionPopup</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>2ddf4c97fa85c77de4c76cbca24951bb</anchor>
      <arglist>(const std::string &amp;matcherJS, const std::string &amp;replacerJS, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forEdit</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>94b623fc6500be6ae5d9cdf00247edc0</anchor>
      <arglist>(WFormWidget *edit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearSuggestions</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>0beae292354fa79c2bbe68e9b11c8f01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSuggestion</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>ff509867327911ed93445c56231680fb</anchor>
      <arglist>(const WString &amp;suggestionText, const WString &amp;suggestionValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>generateMatcherJS</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>415162037c68f38e4141264022b02489</anchor>
      <arglist>(const Options &amp;options)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>generateReplacerJS</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>58e9fd0c214cdc80170c42933af206aa</anchor>
      <arglist>(const Options &amp;options)</arglist>
    </member>
    <class kind="struct">Wt::WSuggestionPopup::Options</class>
  </compound>
  <compound kind="struct">
    <name>Wt::WSuggestionPopup::Options</name>
    <filename>structWt_1_1WSuggestionPopup_1_1Options.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>highlightBeginTag</name>
      <anchorfile>structWt_1_1WSuggestionPopup_1_1Options.html</anchorfile>
      <anchor>641575cedc6544eee08473482de42b3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>highlightEndTag</name>
      <anchorfile>structWt_1_1WSuggestionPopup_1_1Options.html</anchorfile>
      <anchor>f26bd646168b1fd0bc442015464188fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>listSeparator</name>
      <anchorfile>structWt_1_1WSuggestionPopup_1_1Options.html</anchorfile>
      <anchor>4711cf874a36b2a64010ad669b3b68ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>whitespace</name>
      <anchorfile>structWt_1_1WSuggestionPopup_1_1Options.html</anchorfile>
      <anchor>ef3e98b66b4cc136e2c726079d6681de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>wordSeparators</name>
      <anchorfile>structWt_1_1WSuggestionPopup_1_1Options.html</anchorfile>
      <anchor>3e29211108f2b156a0b983a5a15ecece</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>appendReplacedText</name>
      <anchorfile>structWt_1_1WSuggestionPopup_1_1Options.html</anchorfile>
      <anchor>800a6cda2637ce1fe3bbc8fe981dd1ef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSvgImage</name>
    <filename>classWt_1_1WSvgImage.html</filename>
    <base>Wt::WVectorImage</base>
    <base>Wt::WResource</base>
    <member kind="function">
      <type></type>
      <name>WSvgImage</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>06fdb6d6f125cd23f53e40ef63970a87</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height, WObject *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setChanged</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>3274bbc9ce018df7b6bc79b7f35b7d25</anchor>
      <arglist>(int flags)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawArc</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>fd7b970580c7433fe58ec157d273d824</anchor>
      <arglist>(const WRectF &amp;rect, double startAngle, double spanAngle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>856da1392335f90675d3d110c90a8e02</anchor>
      <arglist>(const WRectF &amp;rect, const std::string &amp;imgUri, int imgWidth, int imgHeight, const WRectF &amp;sourceRect)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawLine</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>daeba36845c9772efc195a88a53584a6</anchor>
      <arglist>(double x1, double y1, double x2, double y2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawPath</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>7f76614002d01f2fce87b9fd5097009e</anchor>
      <arglist>(const WPainterPath &amp;path)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawText</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>c502ce7ccda54557bc27aa0d9752f4b8</anchor>
      <arglist>(const WRectF &amp;rect, int flags, const WString &amp;text)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>d0333d7b9933ced6929d1482f8320fb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>done</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>9dac09bd538e107a2808effbdd42a0c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const std::string</type>
      <name>resourceMimeType</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>0d0fbcdeb281821a17a2746fe2071c07</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTable</name>
    <filename>classWt_1_1WTable.html</filename>
    <base>Wt::WInteractWidget</base>
    <member kind="function">
      <type></type>
      <name>WTable</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>a5c23e5c08d11315063e7714c85a8364</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WTable</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>342361febd4e025a71d4ccf3990b9c7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WTableCell *</type>
      <name>elementAt</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>c4b59af9a44e185edb14e7f1f439d6c4</anchor>
      <arglist>(int row, int column)</arglist>
    </member>
    <member kind="function">
      <type>WTableRow *</type>
      <name>rowAt</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>ff46a40881a7d0967d7435d8d479bedb</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>WTableColumn *</type>
      <name>columnAt</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>37dc3995a309d32a0e4bf857596df00e</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeCell</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>5c45c882a0b3af6d0c0ed13b6217c078</anchor>
      <arglist>(WTableCell *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeCell</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>46b216d395d19f3f9a71d1f168ca4f16</anchor>
      <arglist>(int row, int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertRow</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>5706f0886fd6d1a9447917610b92f93e</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRow</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>1e0910054f11ebdc8ae3a5cd7b03975c</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertColumn</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>be4adeea63bf89183a25248ae630b99c</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteColumn</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>5cb1b9e4cc08ff62f203eab0894e0756</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>431d6a3da63ab9696e084ad7c2438afb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numRows</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>c08f972ae669d7cbdfac853b97c1067f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rowCount</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>79d5dfe40ee5e67c5007ee370e8cd2f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numColumns</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>d90fcc098959b5158059193d549d2dbb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>4d062330d1c9b3f202985b92dcb59d4f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTableCell</name>
    <filename>classWt_1_1WTableCell.html</filename>
    <base>Wt::WContainerWidget</base>
    <member kind="function">
      <type>void</type>
      <name>setRowSpan</name>
      <anchorfile>classWt_1_1WTableCell.html</anchorfile>
      <anchor>e14b338d8395de33d93f7a28ef2b3edd</anchor>
      <arglist>(int rowSpan)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rowSpan</name>
      <anchorfile>classWt_1_1WTableCell.html</anchorfile>
      <anchor>d2a5d47f9ae33fc3a0bcba6bd84ddd7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnSpan</name>
      <anchorfile>classWt_1_1WTableCell.html</anchorfile>
      <anchor>0f4912b4c023b78e6de41561e2e0a62a</anchor>
      <arglist>(int colSpan)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>columnSpan</name>
      <anchorfile>classWt_1_1WTableCell.html</anchorfile>
      <anchor>885083e7e30a3d76f33c39847dc3a6bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContentAlignment</name>
      <anchorfile>classWt_1_1WTableCell.html</anchorfile>
      <anchor>7e9a9471d030ebdde3e82988c44c9d0e</anchor>
      <arglist>(int contentAlignment)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>contentAlignment</name>
      <anchorfile>classWt_1_1WTableCell.html</anchorfile>
      <anchor>2d92c1f6b6e226deb53fdf7c4ccbc6ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>row</name>
      <anchorfile>classWt_1_1WTableCell.html</anchorfile>
      <anchor>50e770e21680477b17057056cf94d10b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>column</name>
      <anchorfile>classWt_1_1WTableCell.html</anchorfile>
      <anchor>2c1860eb33dbb70381eef117790862fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WTable *</type>
      <name>table</name>
      <anchorfile>classWt_1_1WTableCell.html</anchorfile>
      <anchor>ee883c3bb465b97551f00947adb05a77</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTableColumn</name>
    <filename>classWt_1_1WTableColumn.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type>WTable *</type>
      <name>table</name>
      <anchorfile>classWt_1_1WTableColumn.html</anchorfile>
      <anchor>ec83d3ab2ad075209fed09e5ee80df64</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>columnNum</name>
      <anchorfile>classWt_1_1WTableColumn.html</anchorfile>
      <anchor>75bdc9289edad19c01e7698414db6147</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classWt_1_1WTableColumn.html</anchorfile>
      <anchor>5c5c0bb9110387e389e5151cbeaab81e</anchor>
      <arglist>(const WLength &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>WLength</type>
      <name>width</name>
      <anchorfile>classWt_1_1WTableColumn.html</anchorfile>
      <anchor>4a527b0b4294c5a9b367eb5b6b653812</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyleClass</name>
      <anchorfile>classWt_1_1WTableColumn.html</anchorfile>
      <anchor>ae7b55f11d53043c2512536144eab42d</anchor>
      <arglist>(const WString &amp;style)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>styleClass</name>
      <anchorfile>classWt_1_1WTableColumn.html</anchorfile>
      <anchor>da5fb02b5164ebf3cd7f0e5abe98cc53</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTableRow</name>
    <filename>classWt_1_1WTableRow.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type>WTable *</type>
      <name>table</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>f06f80cc7f5fc9bdc36cdefa691433d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rowNum</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>67848b510b4803a2ba3be800de89b7bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeight</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>ac0b7d156d2f4d3897802b7e9771c1de</anchor>
      <arglist>(const WLength &amp;height)</arglist>
    </member>
    <member kind="function">
      <type>WLength</type>
      <name>height</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>71719040fa936136f48a43301301f46e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyleClass</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>5ccc6742f7b5e1aa1284fb6f5f62540e</anchor>
      <arglist>(const WString &amp;style)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>styleClass</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>74e64af29ed20db6a6b5cd84e3eb05a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>c9d66838aceb059dfb0b43c250caa6ec</anchor>
      <arglist>(bool how)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHidden</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>9f39b7412ea915eec131fef374d8a5e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hide</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>99b3fcea3f7dec12b34d2e0222699010</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>show</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>189bb29f29777795bd0910468e697c4e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTabWidget</name>
    <filename>classWt_1_1WTabWidget.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="enumeration">
      <name>LoadPolicy</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>ef0d42df57c2dfdc73f7ba3791d76af3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LazyLoading</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>ef0d42df57c2dfdc73f7ba3791d76af397ed17a08a1a30a76f5f3bae0322bc0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PreLoading</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>ef0d42df57c2dfdc73f7ba3791d76af36fdba6f7dbf6fb2721351f08eec9cd12</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WTabWidget</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>754d002238ce54b0006230dfb466f3b1</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>addTab</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>8f5bea792ccb3487fb2f3a9258463b3f</anchor>
      <arglist>(WWidget *child, const WString &amp;label, LoadPolicy=LazyLoading)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeTab</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>f6aa9e6978aa17609130ff88ae5d31a2</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>2982283dca1b7698cf687e16e4d2b72f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>1d591772cbc00b17c606f6d112fd5ace</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>cced5598138727b6e0f8a8cb72aa11ed</anchor>
      <arglist>(WWidget *widget) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentIndex</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>55ae29857e27019af4daea64131148d6</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentIndex</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>7cb494fc869a67ad6d9a4031682411a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentWidget</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>e5f9a6ab4847f9c3ccc62606a19e1871</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>currentWidget</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>ef94b79d7b26972b3c3587483f8527bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabEnabled</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>fd7bd7a9ae110bfcec42ebe0be1c0c3f</anchor>
      <arglist>(int index, bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTabEnabled</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>08c8caaf857857497128a80d20f444c7</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabHidden</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a672a2e2bb5ee5f3fa260b8c0abe3032</anchor>
      <arglist>(int index, bool hidden)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTabHidden</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>e20623f2150e1d7e01926d6acae63801</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabText</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>2f941cb6a5bb6092cad3f438acd2de14</anchor>
      <arglist>(int index, const WString &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>tabText</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>65f1f96d293b575aefe99c2feeee6c1f</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabToolTip</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>bc7e97d8921ae9f3ebfb7fd5911fcea9</anchor>
      <arglist>(int index, const WString &amp;tip)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>tabToolTip</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>080f7cf0bfa0abbca950828b905b92b5</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalPathEnabled</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>0282c1b2b4a0e19fb1d3ea3ef0d05a65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>internalPathEnabled</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>983a1adff54fa47a9a2fd9fea36f11a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalBasePath</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>42c7d6ad6bfc8e821e3e667467865902</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>internalBasePath</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>5259f4ba319e909685c95fe92f8ddd84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; int &gt;</type>
      <name>currentChanged</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>410cbe7adeffedec1c1eed44aee8e9b6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WText</name>
    <filename>classWt_1_1WText.html</filename>
    <base>Wt::WInteractWidget</base>
    <member kind="function">
      <type></type>
      <name>WText</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>49bf5785263785717834a9d1a7a52399</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WText</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>bd144b9486708726fbb535c3f5b144c2</anchor>
      <arglist>(const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WText</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>49fd6775622dd40cd3676f0945723d98</anchor>
      <arglist>(const WString &amp;text, TextFormat textFormat, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WText</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>131d8561977b5dd78aafcbcb6dfd76ae</anchor>
      <arglist>(bool inlined, const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>1081f42ae498fa8d23656cec207a4a76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>2f788aa524d51b3962642c9f565e66e6</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setTextFormat</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>f22c64c4c5fed3d2aef0915a7e5c5866</anchor>
      <arglist>(TextFormat format)</arglist>
    </member>
    <member kind="function">
      <type>TextFormat</type>
      <name>textFormat</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>c0976c36c5181a534f161ca3724d4296</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setFormatting</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>6c9c419a84aeb8fbf163380189c98de9</anchor>
      <arglist>(Formatting format)</arglist>
    </member>
    <member kind="function">
      <type>Formatting</type>
      <name>formatting</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>16f7bc2c5b0fbb0e0096396cab583844</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWordWrap</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>59273ea72eba59b7dacdb68be134b5fb</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wordWrap</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>b2259537310561d9352f63d566b63fd6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>465517b955bf7bbe086401b57d888552</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTextArea</name>
    <filename>classWt_1_1WTextArea.html</filename>
    <base>Wt::WFormWidget</base>
    <member kind="function">
      <type></type>
      <name>WTextArea</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>d083421ca4fe15da882440d506cab05b</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WTextArea</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>8c2aa87526952d2645cec139f4ad26bb</anchor>
      <arglist>(const WString &amp;content, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumns</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>f429ed3a2b6011c97b4f9ea7f910e079</anchor>
      <arglist>(int cols)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRows</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>de46b47350f427f45c9b53ac7e41c5b2</anchor>
      <arglist>(int rows)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>columns</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>fa438b99f8ebf858e3202c262b29a3ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rows</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>be1a4daf466365557cfd3fbbe8bc9dd7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>d8b89ce30df2b02894c53b6ed71fe4a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>1f05060c037d13c2c6c26f51f1fb9640</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WValidator::State</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>480530c1847f32f8b94101881484287b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTextEdit</name>
    <filename>classWt_1_1WTextEdit.html</filename>
    <base>Wt::WTextArea</base>
    <member kind="function">
      <type></type>
      <name>WTextEdit</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>451adca0c258c17b37bc544e3684952b</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WTextEdit</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>644d69fc03aca222c38044578e5a181b</anchor>
      <arglist>(const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WTextEdit</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>3e43187a1a3ad8386cb7c2271cb250ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>8023b2dbe675a22f30a563704d9ae475</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyleSheet</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>7b6df4e80ea878c1c6d57d1c85f60b04</anchor>
      <arglist>(const std::string &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>styleSheet</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>b3656ebc2b7d8856701377697c42067a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtraPlugins</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>106e80b7ae54d21a7307f3d4c125d098</anchor>
      <arglist>(const std::string &amp;plugins)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>extraPlugins</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>66163ef0fc23df64e976c7c7d99b2d71</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToolBar</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>b569b96e871c547b1f992b727c00c902</anchor>
      <arglist>(int i, const std::string &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>toolBar</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>eb2451ef6b617267a0b88cd9d4b6dcd6</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>c9f80e652fc361512aa2587c54f4ecb5</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>2ad7e1397d250231a575f2915fa0fec0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTimer</name>
    <filename>classWt_1_1WTimer.html</filename>
    <base>Wt::WObject</base>
    <member kind="slot">
      <type>void</type>
      <name>start</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>e167fbd3eb981a2fce52e9a4b3b6e0af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>73c5d1b882af4835384ccdc07a650e34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WTimer</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>1fb659aac40b49b3ec7631d558884847</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WTimer</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>6b983b4aa0a3594cad4a236f5a4acd0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>interval</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>3aedc0ad65a5d57bea4b805a92d7736d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInterval</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>3a4070540a6b0e10bf1ee7bd607334fc</anchor>
      <arglist>(int msec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>eabde106e48ea67e10c4043609b85493</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSingleShot</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>61dd8a5ac6fc6d9bd995e08ff7fae83c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSingleShot</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>92ae68d15de600174afdd2e443397604</anchor>
      <arglist>(bool singleShot)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>singleShot</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>47340f28a1c9d284f8b085ee4ed5924a</anchor>
      <arglist>(int msec, T *receiver, void(V::*method)())</arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; void &gt;</type>
      <name>timeout</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>d406123d0d3755a518b6246e59d7cd94</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTransform</name>
    <filename>classWt_1_1WTransform.html</filename>
    <member kind="function">
      <type></type>
      <name>WTransform</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a83f5dc582b77c4ac706cfb6b097a6e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WTransform</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>7af529e947eefac16dbce9d4ecdf374b</anchor>
      <arglist>(double m11, double m12, double m21, double m22, double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>WTransform &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>5b316f9ab4b128fac20ddc193e9a531f</anchor>
      <arglist>(const WTransform &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>8d67ff2dd96e1b7a046a81dba72b8358</anchor>
      <arglist>(const WTransform &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>b8279e66b2fced0710869593f1b7f89d</anchor>
      <arglist>(const WTransform &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIdentity</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>2886f3ac1a3e60f90aae2505db3a6631</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>m11</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>1887ee83c3b274284c323ef836529ab5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>m12</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a5818883ee9a0d4f2ccede54fe4aae75</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>m13</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>54c72247dc6c537b2af6c051acdf6364</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>m21</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>50b1309a9ba5a28fda585ff2645955e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>m22</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>ce965ba306019e1eb77e2e19004fe26b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>m23</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>c4e9f7cbdf20f929e566cb1f94f3073a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>m31</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>8b0d30f356852c84482864009c959f83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>m32</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>4c3829751f5f1e48b9cc9cd43c22edb8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>m33</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>dc52fe2393cb3183c5e76ada10fa1013</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dx</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>fd36c0961fe1cc7ff476824f3dfc9cea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dy</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>6828e36286b2fe38ec56446b007b1d41</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>map</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>201cba0a65a466383c48eb6d73b2f281</anchor>
      <arglist>(const WPointF &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>map</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>ffc1cb0071a86302318255fd867d08a1</anchor>
      <arglist>(double x, double y, double *tx, double *ty) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>36e8423634a12878a6a7262bd749fe6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WTransform &amp;</type>
      <name>rotate</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>4f494c6f886c1b8b15c635e2dc81cc0e</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>WTransform &amp;</type>
      <name>rotateRadians</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>72f394181e722cd890c06bb37e36e7db</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>WTransform &amp;</type>
      <name>scale</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>c9cf750c7ce44b4ecfcae59d4dd964ac</anchor>
      <arglist>(double sx, double sy)</arglist>
    </member>
    <member kind="function">
      <type>WTransform &amp;</type>
      <name>shear</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>94e146a18a35ec1a9f70cf09c2df8349</anchor>
      <arglist>(double sh, double sv)</arglist>
    </member>
    <member kind="function">
      <type>WTransform &amp;</type>
      <name>translate</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>d4cd675b5072c25b0545167ba41586d8</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decomposeTranslateRotateScaleSkew</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>ec77b05b28465401d70a68486a95112a</anchor>
      <arglist>(double &amp;dx, double &amp;dy, double &amp;alpha, double &amp;sx, double &amp;sy, double &amp;sh) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decomposeTranslateRotateScaleRotate</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>557282e79d4ced1fa8e519295d5f84f7</anchor>
      <arglist>(double &amp;dx, double &amp;dy, double &amp;alpha1, double &amp;sx, double &amp;sy, double &amp;alpha2) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTree</name>
    <filename>classWt_1_1WTree.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="typedef">
      <type>std::set&lt; WTreeNode * &gt;</type>
      <name>WTreeNodeSet</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>2308f07ae7dfb959360ad1bdcf394e44</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WTree</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>0814258c8147d68000402468016f9817</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTreeRoot</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>040f5fa4df57cbfb586d686ffe1326d0</anchor>
      <arglist>(WTreeNode *root)</arglist>
    </member>
    <member kind="function">
      <type>WTreeNode *</type>
      <name>treeRoot</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>54de80f955e54acbab38a344546ce0bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectionMode</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>7270f705ad5f9be1e2bee06a73348a9a</anchor>
      <arglist>(SelectionMode mode)</arglist>
    </member>
    <member kind="function">
      <type>SelectionMode</type>
      <name>selectionMode</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>fcc60067220a91ce69dde46ea413afc5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const WTreeNodeSet &amp;</type>
      <name>selectedNodes</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>7d415764d1fce3d4c9d33713892c0ef9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>9e09dff326743004dc9f2bf27408551a</anchor>
      <arglist>(const WTreeNodeSet &amp;nodes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>52c770a65ac3f4c2493f714271a5133a</anchor>
      <arglist>(WTreeNode *node, bool selected=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSelected</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>3969fd0bab17347bb32727dba2ff9682</anchor>
      <arglist>(WTreeNode *node) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearSelection</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>14a781edeb90b3040a5e09238290514e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Signal</type>
      <name>itemSelectionChanged</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>3c19b05a0c4ad7a27c6ebbef1ad2e7f9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTreeNode</name>
    <filename>classWt_1_1WTreeNode.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="enumeration">
      <name>LoadPolicy</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>51c02b42c069e61a269fde598b9a1bff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LazyLoading</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>51c02b42c069e61a269fde598b9a1bff4a962a514c531fb52c5958f61950ff3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PreLoading</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>51c02b42c069e61a269fde598b9a1bfff771c90906d73ed5eb1e6728366241e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NextLevelLoading</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>51c02b42c069e61a269fde598b9a1bff387323cbdc8efd12ef6bf8553876c011</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ChildCountPolicy</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>0deb92963922074b6262f71e9fccd24a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Disabled</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>0deb92963922074b6262f71e9fccd24a3b31c2b770a9acffa43daedf402df6cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Enabled</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>0deb92963922074b6262f71e9fccd24aebbfd35e39c920c5f2dbe74380e3abce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Lazy</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>0deb92963922074b6262f71e9fccd24a256625b6187b3107b1eb201c1758a793</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>expand</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>10e99f9db96ec2fc500927a5d50caafe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>collapse</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>43ed4fd057fac436d93bda4a6d1de7dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WTreeNode</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>169f429e0f0e1fe6d0874f9db72d041a</anchor>
      <arglist>(const WString &amp;labelText, WIconPair *labelIcon=0, WTreeNode *parentNode=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WTreeNode</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>1ec9b14cd8388631acbb3e82649d0d67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WText *</type>
      <name>label</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>32c24104359b595cbaf914e35accb3b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WIconPair *</type>
      <name>labelIcon</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>2095a273249da81688699ff9750ea2a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabelIcon</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>906d6afe249fbebd9735dc9c9ca11166</anchor>
      <arglist>(WIconPair *labelIcon)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addChildNode</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>deb2bd7c946ef9c7bb5b72b3f88453a6</anchor>
      <arglist>(WTreeNode *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeChildNode</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>6513443612d2456a69610e744bc629f4</anchor>
      <arglist>(WTreeNode *node)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WTreeNode * &gt; &amp;</type>
      <name>childNodes</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a0f780835958f27b08fed66c1e4461e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>displayedChildCount</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>1a2bec02861430af0a8b80dd9e84324e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChildCountPolicy</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>5a625b5a94386386dabd36277d5f7c1b</anchor>
      <arglist>(ChildCountPolicy policy)</arglist>
    </member>
    <member kind="function">
      <type>ChildCountPolicy</type>
      <name>childCountPolicy</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>970b7d1e5df403888e7c44750bf4b149</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImagePack</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>ff37a6152a8195dd9b2a80e593d94298</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoadPolicy</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>af3d613cc461f4d9d39a71cd45bd155e</anchor>
      <arglist>(LoadPolicy loadPolicy)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExpanded</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>948dd8443c0228268c1d75b825e66327</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectable</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>60428cfc48b2a39550efc308b38406b2</anchor>
      <arglist>(bool selectable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isSelectable</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>413239e83c39e46fbb7d9525ac615241</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WTreeNode *</type>
      <name>parentNode</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>bebb8dd92b2470901a3c9fb36e315c62</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNodeVisible</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>63d37fa9bb5a3ba8ea178b5f3737626d</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; void &gt;</type>
      <name>expanded</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>5261b5a15d49dfa3230be5edbdc80970</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; void &gt;</type>
      <name>collapsed</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>2c15ccb30faf6c03ad1ee022a820c985</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; bool &gt;</type>
      <name>selected</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>b61418802fc88be576002f78cd992fb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doExpand</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>7cf5f24e57d19df0b8e01638c75c4bf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doCollapse</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>98cc68ceed98e3e98145fe5a8129c066</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WTreeNode</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>3e414fb2edce78eab5431db82aefed15</anchor>
      <arglist>(WTreeNode *parentNode=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WTableCell *</type>
      <name>labelArea</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>e87e7590a98a4ccdbec6aeb49fd14025</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>populate</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>9ab70c6020dbd9ea3204c625029a7a1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>populated</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>ee388605958559d124616ce9dbfc7df5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>expandable</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>4f19826594b5b080b0a436c474c31f61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderSelected</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>e4bb84bf91002f80941d2e890cab12cd</anchor>
      <arglist>(bool selected)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>imagePack</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>b79f1baedef8134c2d25b22a988f5c80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>descendantRemoved</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>ea7b6b2ba3d170fa57dfb7451f878a5d</anchor>
      <arglist>(WTreeNode *node)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>descendantAdded</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>bfa02369517d2cc7cd3ee1d3839740e3</anchor>
      <arglist>(WTreeNode *node)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>undoDoExpand</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>c0d0cbdfb0c8c0d493e70a6b40b40fc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>undoDoCollapse</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>67cd4a5c8169919e1e1feadc1cab7ae3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTreeTable</name>
    <filename>classWt_1_1WTreeTable.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WTreeTable</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>b6224d3b98077147c7c6ce96d167e407</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addColumn</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>2ec7655241ad65f99c114d6ed37b49a1</anchor>
      <arglist>(const WString &amp;header, const WLength &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numColumns</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>be71c7994be335b67479cf3f23370e95</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTreeRoot</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>1a9de525c82f7f6aadb9842f2bcf46a0</anchor>
      <arglist>(WTreeTableNode *root, const WString &amp;header)</arglist>
    </member>
    <member kind="function">
      <type>WTreeTableNode *</type>
      <name>treeRoot</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>d2df80ef5a3243b7b695946f5fbd8614</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTree</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>7a886c66febb9c32c0b044b6f5cffb0a</anchor>
      <arglist>(WTree *tree, const WString &amp;header)</arglist>
    </member>
    <member kind="function">
      <type>WTree *</type>
      <name>tree</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>4c9a1d8257e8f24d164708f3c2738de3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WLength</type>
      <name>columnWidth</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>fdb33da75ddd2eb71272a11b445ed346</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function">
      <type>WText *</type>
      <name>header</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>f20309bf1c221d907a72823595766af8</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>headerWidget</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>fa8204f217f77725f7e243ece08e5ddb</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTreeTableNode</name>
    <filename>classWt_1_1WTreeTableNode.html</filename>
    <base>Wt::WTreeNode</base>
    <member kind="function">
      <type></type>
      <name>WTreeTableNode</name>
      <anchorfile>classWt_1_1WTreeTableNode.html</anchorfile>
      <anchor>d5c6c8ff8d8d83d386271594444a2691</anchor>
      <arglist>(const WString &amp;labelText, WIconPair *labelIcon=0, WTreeTableNode *parentNode=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnWidget</name>
      <anchorfile>classWt_1_1WTreeTableNode.html</anchorfile>
      <anchor>136a48e8cda5e0abbfd0e0d8cf008b36</anchor>
      <arglist>(int column, WWidget *item)</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>columnWidget</name>
      <anchorfile>classWt_1_1WTreeTableNode.html</anchorfile>
      <anchor>5e9f7b5afb4d92175a3d6307727eee81</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addChildNode</name>
      <anchorfile>classWt_1_1WTreeTableNode.html</anchorfile>
      <anchor>e8a0182bc71c150bc1e39bb702239502</anchor>
      <arglist>(WTreeNode *node)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setTable</name>
      <anchorfile>classWt_1_1WTreeTableNode.html</anchorfile>
      <anchor>afe8ea0231f569644ee9e7a54deb13a9</anchor>
      <arglist>(WTreeTable *table)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTreeView</name>
    <filename>classWt_1_1WTreeView.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WTreeView</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a6555aa2d53557340824faa314b318f2</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WTreeView</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>3b361f93a9937accae2303ebda6b561f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModel</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>2177acee4ae19bb963716fff8385320e</anchor>
      <arglist>(WAbstractItemModel *model)</arglist>
    </member>
    <member kind="function">
      <type>WAbstractItemModel *</type>
      <name>model</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>cb34e7c84158996529f90934fc0883f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRootIndex</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>d3dae955c9012df8e368dadd1e8a8c75</anchor>
      <arglist>(const WModelIndex &amp;rootIndex)</arglist>
    </member>
    <member kind="function">
      <type>const WModelIndex &amp;</type>
      <name>rootIndex</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>b23b53eab9aebe8aef5d4936fb997aae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeaderHeight</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>b239d5e8e69d0b0d8641d3667cf4876d</anchor>
      <arglist>(const WLength &amp;height, bool multiLine=false)</arglist>
    </member>
    <member kind="function">
      <type>const WLength &amp;</type>
      <name>headerHeight</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>834975dbb135a77a0b9c90f8b612c071</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRowHeight</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>1570066c098c5e076201b0da77796a3b</anchor>
      <arglist>(const WLength &amp;rowHeight)</arglist>
    </member>
    <member kind="function">
      <type>const WLength &amp;</type>
      <name>rowHeight</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>7b19e18d327f72153017453e9c20d180</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnFormat</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>8b8bfc22f30f0edfe8fe2de37a5fefc4</anchor>
      <arglist>(int column, const WString &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>columnFormat</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>ab731f1046a7c0b602678171af9dc33e</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnWidth</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>96f9eeda2113b8f36d6812348a9bc1d2</anchor>
      <arglist>(int column, const WLength &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>WLength</type>
      <name>columnWidth</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>4a230575c51d3da417f7a816417bfd4f</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnAlignment</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>8447f82f49b3bfd45aa42592bf9e8edf</anchor>
      <arglist>(int column, HorizontalAlignment alignment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeaderAlignment</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>962936b64fe976fc89f1a1b95187db5f</anchor>
      <arglist>(int column, HorizontalAlignment alignment)</arglist>
    </member>
    <member kind="function">
      <type>HorizontalAlignment</type>
      <name>columnAlignment</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>6b5b99f9287a7708ea5e9d352b61f3fa</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function">
      <type>HorizontalAlignment</type>
      <name>headerAlignment</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>66200dbf285897bf9faf0ca7dfe15d35</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnBorder</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>5f8973f5ecbedf9279778a2999a7dee9</anchor>
      <arglist>(const WColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImagePack</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a1272c6c0c36ab33ebfe03836f071e3c</anchor>
      <arglist>(const std::string &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>imagePack</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>8c1862d29db95f5db1ec8bf01697936e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExpanded</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>49566dd5cc8d1d0d95bad4783dd4e11a</anchor>
      <arglist>(const WModelIndex &amp;, bool expanded)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExpanded</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>48eac450ec46ac1eea41822bfd227e9b</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>collapse</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>be1b839fc999634806df030301422411</anchor>
      <arglist>(const WModelIndex &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expand</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>03cd862e9c5dbbfbc126ac627b48592a</anchor>
      <arglist>(const WModelIndex &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expandToDepth</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>dd40d3e05352ae094f6fe2b9c879c2c7</anchor>
      <arglist>(int depth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlternatingRowColors</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>74c99c75ebe8e7f3c8da8e5c3f96f61e</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>alternatingRowColors</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>8dc02b15e720e296b9939bdf6a511988</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRootIsDecorated</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>ef8576ebdf2089edc259362a15e2f750</anchor>
      <arglist>(bool show)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rootIsDecorated</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>c6e70d3de6623882f70219934d5f8253</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sortByColumn</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>d5c2823adc9181303e1cc16ebbc1bc59</anchor>
      <arglist>(int column, SortOrder order)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSortingEnabled</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>71759dfb0f059431fde23afef8448fa6</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSortingEnabled</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>589f96185678e3f9d7dc19c6aba68f73</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnResizeEnabled</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>05efe1b6fbfd42fcbd22b6f4a500da55</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isColumnResizeEnabled</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>f53c0c70c3929cc69fa585b50e2dff6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectionBehavior</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>e7c6f78bf274a58057a4572c48543b88</anchor>
      <arglist>(SelectionBehavior behavior)</arglist>
    </member>
    <member kind="function">
      <type>SelectionBehavior</type>
      <name>selectionBehavior</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>af81d71b1893d506660b8c727dbce323</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectionMode</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>0a1c24b2c5528503d0856b6143664e9b</anchor>
      <arglist>(SelectionMode mode)</arglist>
    </member>
    <member kind="function">
      <type>SelectionMode</type>
      <name>selectionMode</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>6c9ffd95f2d45369a63c3f4c3b62dc53</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WItemSelectionModel *</type>
      <name>selectionModel</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>138ce61d6baf9b4652876389662027a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectedIndexes</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>7b5dc6ea5cd5338aeb3d743d3b626dce</anchor>
      <arglist>(const WModelIndexSet &amp;indexes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>3fc5f0145dd1edebfdd61ae41f12902d</anchor>
      <arglist>(const WModelIndex &amp;index, SelectionFlag option=Select)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSelected</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>32486ec0adf432ecb309757330b3538d</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function">
      <type>WModelIndexSet</type>
      <name>selectedIndexes</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>2587b8644959676cd03cbf218ab50761</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDragEnabled</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>e7f0d724f1fa445f481fb655aa94168b</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDropsEnabled</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>d896c39c9d0d3bf27e9cdcc7500293f8</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumn1Fixed</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>c6d50ab57d086e67a2463f8a6a43e605</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>482314306c8404d7ed941fd986e32623</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>995074256df23a43d37902c8a4fb15d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; WModelIndex &gt;</type>
      <name>collapsed</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>55d156fcd0bcfbd3a7ae08e7febdfa4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; WModelIndex &gt;</type>
      <name>expanded</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>cdf6192e43be8831a64551d77305e019</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; WModelIndex, WMouseEvent &gt;</type>
      <name>clicked</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a73efccf2c0121ac92b1435f3b5512f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; WModelIndex, WMouseEvent &gt;</type>
      <name>doubleClicked</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>eb73babbcc86ca83408a87cb042353dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; WModelIndex, WMouseEvent &gt;</type>
      <name>mouseWentDown</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>5e92417a614e20d9137387d2700192a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; void &gt;</type>
      <name>selectionChanged</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>7a6846ce3dc39aa480d46b80db1e559a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dropEvent</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>e5c0c8f93a10d556e6ae8daafc33b022</anchor>
      <arglist>(const WDropEvent &amp;event, const WModelIndex &amp;target)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WValidationStatus</name>
    <filename>classWt_1_1WValidationStatus.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WValidationStatus</name>
      <anchorfile>classWt_1_1WValidationStatus.html</anchorfile>
      <anchor>a40ae47e0987dc7e1f0261372ca43ca5</anchor>
      <arglist>(WFormWidget *field, WWidget *validStateWidget=0, WWidget *invalidStateWidget=0, WWidget *invalidEmptyStateWidget=0, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>valid</name>
      <anchorfile>classWt_1_1WValidationStatus.html</anchorfile>
      <anchor>66ee198ccdd2eb5d0de620fc6326c2e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; bool &gt;</type>
      <name>validated</name>
      <anchorfile>classWt_1_1WValidationStatus.html</anchorfile>
      <anchor>1a25cdf6bb3c174c5635af0b4e69aa04</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WValidator</name>
    <filename>classWt_1_1WValidator.html</filename>
    <base>Wt::WObject</base>
    <member kind="enumeration">
      <name>State</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>638a1feefca259ea2f806a8add2d18a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Invalid</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>638a1feefca259ea2f806a8add2d18a3a5bf750faac5f1ca6fb58c8de97bac51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InvalidEmpty</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>638a1feefca259ea2f806a8add2d18a35e6ab5b841b3066a2d228b9ce7f4f447</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Valid</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>638a1feefca259ea2f806a8add2d18a31bc2acb7589ab9e3050867ebfc32dda3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WValidator</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>81e355ed7c38c9e5de934d3994b3905c</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WValidator</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>4c4a0b7bcb4c543812b1500c748ab99b</anchor>
      <arglist>(bool mandatory, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WValidator</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>d7f5599879175c310dac4b76331d7ff6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMandatory</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>6f7993c51a0088b927d7c9aa516efabb</anchor>
      <arglist>(bool how)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMandatory</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>8de913a10b24231264de5cc082c0d2fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidBlankText</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>bafa7c49159d5475a8ec6eff1fef8c17</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidBlankText</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>3518bfa063c9155c99e5ca3990465d35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fixup</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>8766794c9600455d35cafb1bd9af1eb9</anchor>
      <arglist>(WString &amp;input) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>17c45f59360190009453efe18c518303</anchor>
      <arglist>(WString &amp;input, int &amp;pos) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createExtConfig</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>cabfaf05f2346019f3f18f6c299bb384</anchor>
      <arglist>(std::ostream &amp;config) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::string</type>
      <name>javaScriptValidate</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>5141a6c178329e6d26faad71e7bf26aa</anchor>
      <arglist>(const std::string &amp;jsRef) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::string</type>
      <name>inputFilter</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>1ca29b7eaabf4c1655200ec382a84554</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WVBoxLayout</name>
    <filename>classWt_1_1WVBoxLayout.html</filename>
    <base>Wt::WBoxLayout</base>
    <member kind="function">
      <type></type>
      <name>WVBoxLayout</name>
      <anchorfile>classWt_1_1WVBoxLayout.html</anchorfile>
      <anchor>5ef82f7bc3fdaa19498a38245117dd93</anchor>
      <arglist>(WWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WVectorImage</name>
    <filename>classWt_1_1WVectorImage.html</filename>
    <base>Wt::WPaintDevice</base>
  </compound>
  <compound kind="class">
    <name>Wt::WViewWidget</name>
    <filename>classWt_1_1WViewWidget.html</filename>
    <base>Wt::WWebWidget</base>
    <member kind="function">
      <type></type>
      <name>WViewWidget</name>
      <anchorfile>classWt_1_1WViewWidget.html</anchorfile>
      <anchor>3537a36594d1a8135d63027d6679f279</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classWt_1_1WViewWidget.html</anchorfile>
      <anchor>7dcbc05eb15c4d4168141871d5908e37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual WWidget *</type>
      <name>renderView</name>
      <anchorfile>classWt_1_1WViewWidget.html</anchorfile>
      <anchor>f7df983ff1ca6e1368579f254b85fcd6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWt_1_1WViewWidget.html</anchorfile>
      <anchor>a7865b89645f229c4dbfc6eb9ddf46d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WViewWidget.html</anchorfile>
      <anchor>3481f6ab6f0db72c4489f31216b40c8b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WStaticModelView</name>
    <filename>classWt_1_1WStaticModelView.html</filename>
    <templarg>Renderer</templarg>
    <base>Wt::WViewWidget</base>
    <member kind="function">
      <type></type>
      <name>WStaticModelView</name>
      <anchorfile>classWt_1_1WStaticModelView.html</anchorfile>
      <anchor>f3f267902e8d9693b819fa87966edb12</anchor>
      <arglist>(Renderer f, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WWidget *</type>
      <name>renderView</name>
      <anchorfile>classWt_1_1WStaticModelView.html</anchorfile>
      <anchor>07efb77007dc9311e47ee15244770426</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WStaticModelView&lt; Renderer &gt; *</type>
      <name>makeStaticModel</name>
      <anchorfile>classWt_1_1WStaticModelView.html</anchorfile>
      <anchor>a2d5588b502ceb66b37ffee8a564cbaa</anchor>
      <arglist>(Renderer f, WContainerWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WVirtualImage</name>
    <filename>classWt_1_1WVirtualImage.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WVirtualImage</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>a7d567e1fb9f81bb00b0e4c5364c2281</anchor>
      <arglist>(int viewPortWidth, int viewPortHeight, int64_t imageWidth, int64_t imageHeight, int gridImageSize=256, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WVirtualImage</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>e579c6380dddbc8a6390344e21c5e8bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>redrawAll</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>c77880df77641e2778667d89135bd8c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableDragging</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>967961b3744ce70b0dcfffd2dd4e5582</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scroll</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>534e108756601d90729613531eb8b53c</anchor>
      <arglist>(int64_t dx, int64_t dy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollTo</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>5d3c1ed4db8ae1022e6810ebf2b96002</anchor>
      <arglist>(int64_t x, int64_t y)</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>imageWidth</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>a1468c9e6f1903c6120f207a017ee07b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>imageHeight</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>498aa2ad488ad7a8aefc452dc1ac7073</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resizeImage</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>269a9169c21d4b5337ca1ffca3818a7d</anchor>
      <arglist>(int64_t w, int64_t h)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>viewPortWidth</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>b2820de18d8a323c53b1cc7a7cf09486</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>viewPortHeight</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>31e6291cbafcd176aa55e43d5b9fa9c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>gridImageSize</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>4a222f67c8e0b285f4a0f5fb646ef09a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>currentTopLeftX</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>cebb4e525040bc0007a8de4a468edd53</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>currentTopLeftY</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>af21415766c90bb5fca7467f2e1c2290</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>currentBottomRightX</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>70f6115b0cadd44f5401f588207a559a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>currentBottomRightY</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>1bad3a30a98028ad1bff4f124dd75045</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; int64_t, int64_t &gt;</type>
      <name>viewPortChanged</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>0ade62a344bf08969d49be8246b85926</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int64_t</type>
      <name>Infinite</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>31301991419831c28727146799c6177f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WImage *</type>
      <name>createImage</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>d77db89c2208a50f7a29f3429db60abe</anchor>
      <arglist>(int64_t x, int64_t y, int width, int height)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WResource *</type>
      <name>render</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>96f487768bcb1292304843a4a05a7daa</anchor>
      <arglist>(int64_t x, int64_t y, int width, int height)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WVmlImage</name>
    <filename>classWt_1_1WVmlImage.html</filename>
    <base>Wt::WVectorImage</base>
    <member kind="function">
      <type></type>
      <name>WVmlImage</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>547c5fdbf7f930bd009c5c9914f6d621</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setChanged</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>698380231a6b7c0d3591d183c5bebe48</anchor>
      <arglist>(int flags)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawArc</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>b05d4750a70245abd57e8445ba60be87</anchor>
      <arglist>(const WRectF &amp;rect, double startAngle, double spanAngle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>a39e9778fd0fa5590cf260a2c05f2bc1</anchor>
      <arglist>(const WRectF &amp;rect, const std::string &amp;imgUri, int imgWidth, int imgHeight, const WRectF &amp;sourceRect)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawLine</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>5b9e6dd443df585739e592d9c44c33a7</anchor>
      <arglist>(double x1, double y1, double x2, double y2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawPath</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>bac40c8efa9451f316dbb8833ccd4fe6</anchor>
      <arglist>(const WPainterPath &amp;path)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawText</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>4a26f86da1bf8e38666c1ea967d5194a</anchor>
      <arglist>(const WRectF &amp;rect, int flags, const WString &amp;text)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>eac96ec7f8cc39297a742f6ec27cdcbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>done</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>ca56f985764bb1329194fca36fe7d9d7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WWebWidget</name>
    <filename>classWt_1_1WWebWidget.html</filename>
    <base>Wt::WWidget</base>
    <member kind="function">
      <type></type>
      <name>WWebWidget</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>83a1f4f3ec578e63ac12be555657d665</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPositionScheme</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>d4258f03ed3dcadc71b4f2217f4fc76a</anchor>
      <arglist>(PositionScheme scheme)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PositionScheme</type>
      <name>positionScheme</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>0c94c2243dab0f994a0d9b6837e91191</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setOffsets</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>86b4e1e073572f282c630511d431afab</anchor>
      <arglist>(const WLength &amp;offset, int sides=All)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>offset</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>b1f5e123a5c110da277cbe91645cb7ee</anchor>
      <arglist>(Side s) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>e1b84e31581405358b6d57ec14505234</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>width</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>4187ef41415521e545106c970c2679f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>height</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>7321103dca90574bbc3ac6ea9a91ccff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMinimumSize</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>19abf65cadc0b761b9405157e4b3dfc1</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>minimumWidth</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>f7bcbca473c81fdba308d0f230bb30ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>minimumHeight</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>fc7317102a63be41ffa390ee5ed5f964</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaximumSize</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>efc1760ce369631bb332b244a4ec8503</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>maximumWidth</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>be3382f250f11a12f76782991ac5b6d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>maximumHeight</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>db6f0acea854671ef901c070ca632678</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLineHeight</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>3e21ba603bd2b577512938a90d222c13</anchor>
      <arglist>(const WLength &amp;height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>lineHeight</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>eb2aa5ba892f8a17bee435312d04777d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFloatSide</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>98310fe1bfd94010bd5c613f28778fca</anchor>
      <arglist>(Side s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Side</type>
      <name>floatSide</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>8f0b1275c813c78784b41a82d3dd4634</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setClearSides</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>2374e92f08570d71461a1143e208cbc3</anchor>
      <arglist>(int sides)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>clearSides</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>5035f213c2a20523feb5108339dd38c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMargin</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>c6065a0fb3b6d4cf0b98c5b1441e2c19</anchor>
      <arglist>(const WLength &amp;margin, int sides=All)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>margin</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>2c0381fd3e59c8d84da23fe6af564725</anchor>
      <arglist>(Side side) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>bf00d84015803f7553c9e6650dc10bd4</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isHidden</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>594cbc1789cb8e2123bc5d968aa320ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPopup</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>783f46384456e792ead27a613f63a900</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isPopup</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>f81cf5fbd4bd92ba81ffcad303355d2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setInline</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>73c0244d363cd2f8bd4814fe1ebee2b1</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isInline</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>00435f54c71b074785ee25fa955fbf27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WCssDecorationStyle &amp;</type>
      <name>decorationStyle</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>ee0157eb927635094425c6f91cc7bd16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setStyleClass</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>6fd43dced1a62f7e79bc3522eeb16216</anchor>
      <arglist>(const WString &amp;styleClass)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>styleClass</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>e867729c36e0976e5e5ee295f1c40d48</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVerticalAlignment</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>1cf7f11462723bd4681024e50ffdc97b</anchor>
      <arglist>(VerticalAlignment alignment, const WLength &amp;length=WLength())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual VerticalAlignment</type>
      <name>verticalAlignment</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>811731f77316ce76a2a0bdd1cf1c5e42</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>verticalAlignmentLength</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>eda559ae51111ba51a70be86c6c4fdfe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setToolTip</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>4d676bbb5d54bd5bf5ba1edff996800d</anchor>
      <arglist>(const WString &amp;toolTip)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>toolTip</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>7b851debbfba51f0b9a011ca42b08c8c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>8d0b7883f2f77a0c24b8fb911a8086a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttributeValue</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>f105d1bda14a0b85d486fa9ffb77f445</anchor>
      <arglist>(const std::string &amp;name, const WString &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>9204a57ea6fb213be5845c01007bb944</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>loaded</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>31fa118eaced94d9ea8de9f9f407db40</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setId</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>7e7bbac438e2535359085880144b0456</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoadLaterWhenInvisible</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>76640728285560f894c1235968c139f2</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WWidget * &gt; &amp;</type>
      <name>children</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>6f32718bcdfa546f012c795f80f319e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>escapeText</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>94abba3bda8fc934ae86db54c577b428</anchor>
      <arglist>(const WString &amp;text, bool newlinesToo=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>removeScript</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>6192d820e2df2e27b2878976dac4161d</anchor>
      <arglist>(WString &amp;text)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>jsStringLiteral</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>f9dc9dcb0eb0ba2d740645c9908694d0</anchor>
      <arglist>(const std::string &amp;v, char delimiter= &apos;\&apos;&apos;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WWidget</name>
    <filename>classWt_1_1WWidget.html</filename>
    <base>Wt::WResource</base>
    <member kind="slot">
      <type>void</type>
      <name>hide</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>0825c3ccbd4999afc1a88fafa6aa6fc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>show</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>52dcef5a385ddfa0a8c3e6c20000f181</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WWidget</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>cbe32dd454131720fa9712bc866efb4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>3461e31818c4d2f516641bdaf508312a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPositionScheme</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>e15ffe92fdc5c394013d61b5bebb2f11</anchor>
      <arglist>(PositionScheme scheme)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual PositionScheme</type>
      <name>positionScheme</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ea3a7c21d936d34f28b42143aba4edd5</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setOffsets</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>e6c0b566caa8734bbd3ce20c93e612f0</anchor>
      <arglist>(const WLength &amp;offset, int sides=All)=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOffset</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>81f4ed8402b95e9651471d1dcb37679a</anchor>
      <arglist>(int sides, const WLength &amp;offset)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>offset</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>08e07b6d0ca355a3fe2c7dead3dde228</anchor>
      <arglist>(Side side) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>29fda240882b138b1483595e8d643dd3</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>width</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>3f423e20a9b0792c1bc3d52899065e82</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>height</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>9454454144fe3729378c87c3b90372b4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setMinimumSize</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>e067d5bac0e3470dd3707eddc41b9a27</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>minimumWidth</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>f5847c8028f501b51d74184107ccdde6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>minimumHeight</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>411b6bbac918eeb19946d65c4352beb1</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setMaximumSize</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>f023064cf8007bda6baeb5277d79bbd9</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>maximumWidth</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>733c78b3d54dc355adf6ee05c69bf219</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>maximumHeight</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>f2f6d29c4e5a88bdd12a180e125490cd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setLineHeight</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>0763f0e672e5cf673141405dc8e796bb</anchor>
      <arglist>(const WLength &amp;height)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>lineHeight</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>162f32ce7482e7c3121d18585555909a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setFloatSide</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>2915d313e6934173c087bf8212024289</anchor>
      <arglist>(Side s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Side</type>
      <name>floatSide</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>78041b1bcd9b811fa4771d19005a585a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setClearSides</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>f0158b8d3d3dad50e5c2f17568d44963</anchor>
      <arglist>(int sides)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>clearSides</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>40190b7502b4e9ba0637014d8aade184</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setMargin</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>9ab86ef358ce4138d0147678d188a75d</anchor>
      <arglist>(const WLength &amp;margin, int sides=All)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>margin</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>8b7c40b966518e22543d290229fbd29f</anchor>
      <arglist>(Side side) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>6b88d6c9da0d356fa65c13cbb8d08f6b</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isHidden</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>76a29fd7fa9fa9a6e15e3a450f24a381</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPopup</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>34084661223e3f9986dedd2e2640b70f</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isPopup</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>29f3361a8c518dabc1251892da55dd6d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setInline</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>7b7d0ebe541a5cee86e679e390990d07</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isInline</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>fa7a21fbd173d6ee83c2aa9cc11e2ac1</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WCssDecorationStyle &amp;</type>
      <name>decorationStyle</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>c1833c7c01599b3733712ab0bf3c3a0a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setStyleClass</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>4be23ecf48d5968efb5d926e38e01708</anchor>
      <arglist>(const WString &amp;styleClass)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WString</type>
      <name>styleClass</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>d5a84cacbaa1e4da97f7ba68de060330</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setVerticalAlignment</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>5289ef2ea94d6af8ef8ab659f519114b</anchor>
      <arglist>(VerticalAlignment alignment, const WLength &amp;length=WLength())=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VerticalAlignment</type>
      <name>verticalAlignment</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>66b6fc137244efa8b1a84ca685d99a1c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>verticalAlignmentLength</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>9faaa6c2b46c0adf6606ad1496c4e52b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setToolTip</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>7a7d40a35444c397b17d831996720557</anchor>
      <arglist>(const WString &amp;text)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WString</type>
      <name>toolTip</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>e67a8d8c573e44f02ab165fe80b2eec6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>c51e662181833b61d4f240af9a8fad7c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>jsRef</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a2b7078b3b43d53a85e5244b45d504f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAttributeValue</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>d629ef6b7b9bc84999ff31dc0f2f3a12</anchor>
      <arglist>(const std::string &amp;name, const WString &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>1ee433705523b2b79c4c3539e0852c92</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>loaded</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>1aa5c2496715bb582a584ebcdd97a6d0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>acceptDrops</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ebee4b24e8128c08ae4aa3682adf6d8f</anchor>
      <arglist>(const std::string &amp;mimeType, const WString &amp;hoverStyleClass=WString())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>stopAcceptDrops</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>89e4d70592dd34c277923cb793f73b66</anchor>
      <arglist>(const std::string &amp;mimeType)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setId</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>93ff9d1ca04e733cd54cd40a06775f7e</anchor>
      <arglist>(const std::string &amp;id)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>htmlText</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>aae07190fb97d856149226ea315a75d0</anchor>
      <arglist>(std::ostream &amp;out)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>tr</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a651f107ec7cf080faef6c435705fc44</anchor>
      <arglist>(const char *key)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WWidget</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>95c22589beb69717356b859bbfd20479</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dropEvent</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>c436c4b99710b9199a9df3a8b4151a69</anchor>
      <arglist>(WDropEvent dropEvent)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const std::string</type>
      <name>resourceMimeType</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>df27bb2de8e639ffe691d154fcd8ef35</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WWidgetItem</name>
    <filename>classWt_1_1WWidgetItem.html</filename>
    <base>Wt::WLayoutItem</base>
    <member kind="function">
      <type></type>
      <name>WWidgetItem</name>
      <anchorfile>classWt_1_1WWidgetItem.html</anchorfile>
      <anchor>fac1f02e9f79bcc2d3584dbe0a80df77</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WWidgetItem.html</anchorfile>
      <anchor>5f1319ce853b78703399d6d80748ef52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLayout *</type>
      <name>layout</name>
      <anchorfile>classWt_1_1WWidgetItem.html</anchorfile>
      <anchor>eec342fa9330656ade0094be78d5fa34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidgetItem *</type>
      <name>findWidgetItem</name>
      <anchorfile>classWt_1_1WWidgetItem.html</anchorfile>
      <anchor>997b036f16e7667db3f8c59e310ad98c</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>WLayoutItemImpl *</type>
      <name>impl</name>
      <anchorfile>classWt_1_1WWidgetItem.html</anchorfile>
      <anchor>d17fab03e099007600e9d39dd017b9b4</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Wt::Chart</name>
    <filename>namespaceWt_1_1Chart.html</filename>
    <class kind="class">Wt::Chart::WAbstractChart</class>
    <class kind="class">Wt::Chart::WAxis</class>
    <class kind="class">Wt::Chart::WCartesianChart</class>
    <class kind="class">Wt::Chart::SeriesIterator</class>
    <class kind="class">Wt::Chart::WChart2DRenderer</class>
    <class kind="class">Wt::Chart::WChartPalette</class>
    <class kind="class">Wt::Chart::WDataSeries</class>
    <class kind="class">Wt::Chart::WPieChart</class>
    <class kind="class">Wt::Chart::WStandardPalette</class>
    <member kind="enumeration">
      <name>Axis</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gddb678f67fbd9f374fcee0922f158c9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XAxis</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggddb678f67fbd9f374fcee0922f158c9f2a592919e6cbd94bf09e1259559499b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YAxis</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggddb678f67fbd9f374fcee0922f158c9f2e1017fdef77b4663715c3d7663a4db4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Y1Axis</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggddb678f67fbd9f374fcee0922f158c9f4905c14eb8a164e00e48b41cfaf6f070</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Y2Axis</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggddb678f67fbd9f374fcee0922f158c9fdbfcf55c246aa3a385974a185f4220e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OrdinateAxis</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggddb678f67fbd9f374fcee0922f158c9fe8797459bbc3e1eaba438ab4d10c0352</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>AxisLocation</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>g3eee2e1c5d7088c776abf22471f14133</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MinimumValue</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg3eee2e1c5d7088c776abf22471f14133da8601e8f3630aec7d16b6d4177d4986</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MaximumValue</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg3eee2e1c5d7088c776abf22471f14133f9110e09430355ab81d579be51ac73cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZeroValue</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg3eee2e1c5d7088c776abf22471f14133f2e58ce3483a5ec496f65fb808ce72b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>AxisScale</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gdfcaed8cd6ff52f5747f7df48f2eeab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CategoryScale</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggdfcaed8cd6ff52f5747f7df48f2eeab6a9b1356757a7b0935c3302c32798ef14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LinearScale</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggdfcaed8cd6ff52f5747f7df48f2eeab6d1c254fd10596e2565b32fd6f5967094</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LogScale</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggdfcaed8cd6ff52f5747f7df48f2eeab6fba90921c9efb6c5131cdb1590bfa406</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DateScale</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggdfcaed8cd6ff52f5747f7df48f2eeab6aa627030efa552170a889d7a80a65a12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ChartType</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>g8d63464f873580c77508e1c0c26cbfea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CategoryChart</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg8d63464f873580c77508e1c0c26cbfeaebfd9bd11d1126f2db7ff891c04c29f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ScatterPlot</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg8d63464f873580c77508e1c0c26cbfea6ddab43d32242eb28831938a1e469a1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SeriesType</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>g44d64e4a9d08c7ef69648f4a9c3e4053</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PointSeries</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg44d64e4a9d08c7ef69648f4a9c3e40536a8b53e7bfdec77f9df5e82aaf0061e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LineSeries</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg44d64e4a9d08c7ef69648f4a9c3e40532582c20d00d806d8a175e2f5c0207591</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CurveSeries</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg44d64e4a9d08c7ef69648f4a9c3e4053805880e23c0292fb7a66b2cda2a2f5bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BarSeries</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg44d64e4a9d08c7ef69648f4a9c3e40536751dbd7ed4600a4befa967107a6dde8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>MarkerType</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>g9f38f3460fb2575d5f4f1a1ac51a7db6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoMarker</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg9f38f3460fb2575d5f4f1a1ac51a7db6aab531f4ceaaa1893f854f4b1262636d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SquareMarker</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg9f38f3460fb2575d5f4f1a1ac51a7db64250deb876978d5f5c3be4cc6aad8267</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CircleMarker</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg9f38f3460fb2575d5f4f1a1ac51a7db6c14cc4eaec28c9ab096fbf7efead2660</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CrossMarker</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg9f38f3460fb2575d5f4f1a1ac51a7db6003214a00943a828becc1beb54956e80</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XCrossMarker</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg9f38f3460fb2575d5f4f1a1ac51a7db64a718fdd73e4bcdc700495eb549dc386</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TriangleMarker</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg9f38f3460fb2575d5f4f1a1ac51a7db6e7ee432c7bf8189deaa453af4d14182b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>FillRangeType</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>g7236e5b04bdb6f393162842982b4d1a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoFill</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg7236e5b04bdb6f393162842982b4d1a0d0c1c31f7f41394c2fd5444edc340972</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MinimumValueFill</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg7236e5b04bdb6f393162842982b4d1a01eb3ca7c63430bd56544b9e3b962c6cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MaximumValueFill</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg7236e5b04bdb6f393162842982b4d1a0a321337f9f9a4d56fb1d2cafe0f359b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZeroValueFill</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg7236e5b04bdb6f393162842982b4d1a050b16db97a187f9acccdbeecf8732ff0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LabelOptions</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>g50df49138691f26d87067f4da32e2432</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoLabels</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg50df49138691f26d87067f4da32e2432866d745e727785c20e31d5ea76bb58a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Inside</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg50df49138691f26d87067f4da32e2432eb92488c13b0ccc46cddbb3445007443</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Outside</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg50df49138691f26d87067f4da32e243288861128e109b6a63e76a311dc57e408</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TextLabel</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg50df49138691f26d87067f4da32e243260df9add81425373c20fafe8c4e40b0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TextPercentage</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gg50df49138691f26d87067f4da32e2432307741727c5ef5e33efcd347a0853e50</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WAbstractChart</name>
    <filename>classWt_1_1Chart_1_1WAbstractChart.html</filename>
    <base>Wt::WPaintedWidget</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WAbstractChart</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>7301de2a5328282d736070f2304a7e90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModel</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>a23d116689e939301470398df8ad5c8b</anchor>
      <arglist>(WAbstractItemModel *model)</arglist>
    </member>
    <member kind="function">
      <type>WAbstractItemModel *</type>
      <name>model</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>93ddf394943b312b3b2dc786ac5c8c72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackground</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>b306a6cfecf32fd9af3785fed75bd3ab</anchor>
      <arglist>(const WBrush &amp;background)</arglist>
    </member>
    <member kind="function">
      <type>const WBrush &amp;</type>
      <name>background</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>0230d674b7112331eec05bbbff4fc87a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPalette</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>044936e6358c8efc55699effc4b946d8</anchor>
      <arglist>(WChartPalette *palette)</arglist>
    </member>
    <member kind="function">
      <type>WChartPalette *</type>
      <name>palette</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>29320100617c0a195904c89874fcc7f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPlotAreaPadding</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>1a945e7bf448407946d5a68323c5ce71</anchor>
      <arglist>(int padding, int sides=All)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>plotAreaPadding</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>8e38496e6d583a9002d78ac782d94fd6</anchor>
      <arglist>(Side side) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>9ec4aba5d7c57110b7dddad8720e3aa0</anchor>
      <arglist>(const WString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>title</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>bc4d1fac60f356360bcc5c6d51d42a69</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitleFont</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>908247e8c84092cd74ae50af33745f95</anchor>
      <arglist>(const WFont &amp;titleFont)</arglist>
    </member>
    <member kind="function">
      <type>const WFont &amp;</type>
      <name>titleFont</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>cbbd80a59c755003efdf07cb6478fece</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>paint</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>f642c65474e95ec0969906d8d31e2862</anchor>
      <arglist>(WPainter &amp;painter, const WRectF &amp;rectangle=WRectF()) const =0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>modelChanged</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>9e3df17843eedb5f32dc1407f115fca4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual void</type>
      <name>modelColumnsInserted</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>12430c6057fb5d65458c4f8c9c42a034</anchor>
      <arglist>(const WModelIndex &amp;parent, int start, int end)=0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual void</type>
      <name>modelColumnsRemoved</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>d235f839f2e46152ff41fda54a29cea7</anchor>
      <arglist>(const WModelIndex &amp;parent, int start, int end)=0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual void</type>
      <name>modelRowsInserted</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>69ef1dd5294dbd1de8f6ada34d96af45</anchor>
      <arglist>(const WModelIndex &amp;parent, int start, int end)=0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual void</type>
      <name>modelRowsRemoved</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>1857420ee055502380caa45446e5c0c4</anchor>
      <arglist>(const WModelIndex &amp;parent, int start, int end)=0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual void</type>
      <name>modelDataChanged</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>ec6e96688e308aec05cdf3bf085837e2</anchor>
      <arglist>(const WModelIndex &amp;topLeft, const WModelIndex &amp;bottomRight)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WAxis</name>
    <filename>classWt_1_1Chart_1_1WAxis.html</filename>
    <member kind="function">
      <type>Axis</type>
      <name>id</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>ca500256c7ec397512f872bd44e93b8d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVisible</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>59fd4c6a79f6e3ea75f21aa44c4acfa8</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isVisible</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>9ea4f463f2bd03202a7e3d7c239fd094</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLocation</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>fd84a5cf1b0ca1d84b7f1c6a935bb27e</anchor>
      <arglist>(AxisLocation location)</arglist>
    </member>
    <member kind="function">
      <type>AxisLocation</type>
      <name>location</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>081816a350877745996adcf77b6ad5d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScale</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>b067037b83d1d663535250968a1776d8</anchor>
      <arglist>(AxisScale scale)</arglist>
    </member>
    <member kind="function">
      <type>AxisScale</type>
      <name>scale</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>e6261e1f13aa00ebae9ea674a9001fd6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinimum</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>0a782d2f4e60c4ec5fe2fd3df46f61e4</anchor>
      <arglist>(double min)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>minimum</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>4b0e996cd16efd42b9f5dc1a041a9819</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximum</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>39b78b16a0212a768c8cb5148f8f4b1e</anchor>
      <arglist>(double max)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maximum</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>2c00b5c1acbd3fe822703983c1e0ae55</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRange</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>0e1e4a1e9993ec8c3de0e1003f3f1139</anchor>
      <arglist>(double min, double max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBreak</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>8f223d72dfecadfc4a12c619a564f695</anchor>
      <arglist>(double min, double max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabelInterval</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>68b1f798fd0d9a713fac29f9d761e2a8</anchor>
      <arglist>(double labelInterval)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>labelInterval</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a9ff8f73b1abb438078ab22873671659</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabelFormat</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>7c37c241825af404b36916dcae9ae87b</anchor>
      <arglist>(const WString &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>labelFormat</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>7b12bfbec790d98f750cdc8d2c2f9fe2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabelAngle</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>fd850eefc2beb7dffa5a637987cb1c6c</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>labelAngle</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>4876475bdfa8c5b43e02d2a1a09b20ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGridLinesEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>79d70190d984c7f956e44b79de0af527</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGridLinesEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>aea983cd54dbd98bc8a8a705ccfd7768</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPen</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>b1b9dcb9e23e01ec18994712fa5e11d1</anchor>
      <arglist>(const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>const WPen &amp;</type>
      <name>pen</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>315b1e60f44d6d736c0903eb372d5019</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGridLinesPen</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a97db5c1f1bff788382ef48b8a6d1cc2</anchor>
      <arglist>(const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>const WPen &amp;</type>
      <name>gridLinesPen</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>79345a863d57e5d4ba9682e128fbce96</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMargin</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>61a297a8d3c99e74b07e9def9ebe88a5</anchor>
      <arglist>(int pixels)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>margin</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>cfe54778dbcacf77818f75e2fb87ecf1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>e85436297049bd4c60a75a9cc5313e4a</anchor>
      <arglist>(const WString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>title</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a2e1f143e0ee835d54ec8a0218eaac83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitleFont</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>d977d82494e5922ccf6882f1378c4db6</anchor>
      <arglist>(const WFont &amp;titleFont)</arglist>
    </member>
    <member kind="function">
      <type>const WFont &amp;</type>
      <name>titleFont</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>15db289e565f3764b88253a92832c604</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WCartesianChart *</type>
      <name>chart</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>726d6c73a28960ed0231ea4ed57e5be9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>AUTO_MINIMUM</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>d0c60f190b30ddfec321e750248c6579</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>AUTO_MAXIMUM</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>f506429983c72703d8fadbc03a1e67d4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WCartesianChart</name>
    <filename>classWt_1_1Chart_1_1WCartesianChart.html</filename>
    <base>Wt::Chart::WAbstractChart</base>
    <member kind="function">
      <type></type>
      <name>WCartesianChart</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a2c011ac373f1644b76932a81dc3b624</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WCartesianChart</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>b0ebde0bbb0ff228185ae767bfd7e788</anchor>
      <arglist>(ChartType type, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setType</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>02775290965d59ffba03da574925e387</anchor>
      <arglist>(ChartType type)</arglist>
    </member>
    <member kind="function">
      <type>ChartType</type>
      <name>type</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>8885469f81160cac5c1ed51fc1166265</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOrientation</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>c8638a7ae6b0d1141794d9c07336e500</anchor>
      <arglist>(Orientation orientation)</arglist>
    </member>
    <member kind="function">
      <type>Orientation</type>
      <name>orientation</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>4d08c4528b9819bd058dd7c34daca645</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXSeriesColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>6c954fa4ed6d73f00ee973bfe3af5ed0</anchor>
      <arglist>(int modelColumn)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>XSeriesColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>378a1ece6bf9acfb291cc6978c473acb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSeries</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>fa4ac6588e6e2e0dd93320c3a0541d46</anchor>
      <arglist>(const WDataSeries &amp;series)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSeries</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>23ee6f5136dc540a7968f17c15524c10</anchor>
      <arglist>(int modelColumn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSeries</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>5733d8d999095b6d4279f289a37eef98</anchor>
      <arglist>(const std::vector&lt; WDataSeries &gt; &amp;series)</arglist>
    </member>
    <member kind="function">
      <type>WDataSeries &amp;</type>
      <name>series</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>96cf7387ebbe867dcbdd6aad9f48e72c</anchor>
      <arglist>(int modelColumn)</arglist>
    </member>
    <member kind="function">
      <type>const WDataSeries &amp;</type>
      <name>series</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>08d7f0e90c0190496dd499609b606bc5</anchor>
      <arglist>(int modelColumn) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WDataSeries &gt; &amp;</type>
      <name>series</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>6123ce798788b747eec94c5399113a8d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WAxis &amp;</type>
      <name>axis</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>f966d6ee6b2e43e6b26e794459005375</anchor>
      <arglist>(Axis axis)</arglist>
    </member>
    <member kind="function">
      <type>const WAxis &amp;</type>
      <name>axis</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>0ce614843d5fc81a0e262aea89a48ee1</anchor>
      <arglist>(Axis axis) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBarMargin</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>5419bad74246b5cb94cd224e915bfe0f</anchor>
      <arglist>(double margin)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>barMargin</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>e6b73b06624ce73153b64683f18f0892</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLegendEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>26c3d97f4884da079e01e7b50447a915</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLegendEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>3b5d000b17bad325e210cbf78a28c460</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>paint</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>6fb2219936b721b8829dc7093dcb5c16</anchor>
      <arglist>(WPainter &amp;painter, const WRectF &amp;rectangle=WRectF()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawMarker</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>96ca116a1d653e582867eb8a6f7343d3</anchor>
      <arglist>(const WDataSeries &amp;series, WPainterPath &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>renderLegendItem</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>3344582f6cca423f86d45375368b6d7f</anchor>
      <arglist>(WPainter &amp;painter, const WPointF &amp;pos, const WDataSeries &amp;series) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>paintEvent</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>3c9c7e5fd246fd0d3e0efa0cd29dd997</anchor>
      <arglist>(WPaintDevice *paintDevice)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WChart2DRenderer *</type>
      <name>createRenderer</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>7d76b83f395ee967bf7ca1339ca1c176</anchor>
      <arglist>(WPainter &amp;painter, const WRectF &amp;rectangle) const </arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>modelColumnsInserted</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>d619b499d3bfec79614de38c682af118</anchor>
      <arglist>(const WModelIndex &amp;parent, int start, int end)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>modelColumnsRemoved</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>7f654939c038cface6128dc2b1826f33</anchor>
      <arglist>(const WModelIndex &amp;parent, int start, int end)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>modelRowsInserted</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a2176777ed4c810101cd666cbf470699</anchor>
      <arglist>(const WModelIndex &amp;parent, int start, int end)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>modelRowsRemoved</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>7221676a4216f5c194a7e8626543db82</anchor>
      <arglist>(const WModelIndex &amp;parent, int start, int end)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>modelDataChanged</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>eaf121941edbd310ca3d3a5d6dc4067e</anchor>
      <arglist>(const WModelIndex &amp;topLeft, const WModelIndex &amp;bottomRight)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::SeriesIterator</name>
    <filename>classWt_1_1Chart_1_1SeriesIterator.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SeriesIterator</name>
      <anchorfile>classWt_1_1Chart_1_1SeriesIterator.html</anchorfile>
      <anchor>c4ad700f8ef3b9b7423cd51aa4e753e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSegment</name>
      <anchorfile>classWt_1_1Chart_1_1SeriesIterator.html</anchorfile>
      <anchor>5504132ff9d11cc0f09084759a0442e7</anchor>
      <arglist>(int currentXSegment, int currentYSegment, const WRectF &amp;currentSegmentArea)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>startSeries</name>
      <anchorfile>classWt_1_1Chart_1_1SeriesIterator.html</anchorfile>
      <anchor>3d5181f724905decd4055001968c73bd</anchor>
      <arglist>(const WDataSeries &amp;series, double groupWidth, int numBarGroups, int currentBarGroup)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>endSeries</name>
      <anchorfile>classWt_1_1Chart_1_1SeriesIterator.html</anchorfile>
      <anchor>b0f753351dbcde0fb4ad88f34efc5a5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>newValue</name>
      <anchorfile>classWt_1_1Chart_1_1SeriesIterator.html</anchorfile>
      <anchor>924ff8281ae266e0209304546bf44476</anchor>
      <arglist>(const WDataSeries &amp;series, double x, double y, double stackY)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentXSegment</name>
      <anchorfile>classWt_1_1Chart_1_1SeriesIterator.html</anchorfile>
      <anchor>bd909a460bfb6a381034d70965f7cf91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentYSegment</name>
      <anchorfile>classWt_1_1Chart_1_1SeriesIterator.html</anchorfile>
      <anchor>0c9b0c88e92e6431b471f014c8dec2ab</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WChart2DRenderer</name>
    <filename>classWt_1_1Chart_1_1WChart2DRenderer.html</filename>
    <member kind="function">
      <type></type>
      <name>WChart2DRenderer</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>7a8e4b0c6f742b530e060103d29e452f</anchor>
      <arglist>(const WCartesianChart *chart, WPainter &amp;painter, const WRectF &amp;rectangle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WChart2DRenderer</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>7ef6014443b958ebe4c7c6cb8d323512</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const WCartesianChart *</type>
      <name>chart</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>af72ee34e9fe2a1e42973e3e04db81aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WPainter &amp;</type>
      <name>painter</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>97749f8fbe5096d04f81867052f5d776</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WRectF</type>
      <name>chartArea</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>47cee09602cdaecba45d93d54e2aeb15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>calcChartArea</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>828a1837fd4f77058542d3c539502286</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>58010c9bb22a11d14e0e86f98b1ae8cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WPointF</type>
      <name>map</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>6f44a9d770b6373dec092ca74d467db5</anchor>
      <arglist>(double xValue, double yValue, Axis axis=OrdinateAxis, int currentXSegment=0, int currentYSegment=0) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderLabel</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>b7addd2168df9a49554163f1223cb6c3</anchor>
      <arglist>(const WString &amp;text, const WPointF &amp;pos, const WColor &amp;color, int flags, double angle, int margin)</arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>hv</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>db16e77f67d1894a0b9c01a8855d20eb</anchor>
      <arglist>(double x, double y) const </arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>hv</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>627ffa37b530d91b986abfc005b0d97b</anchor>
      <arglist>(const WPointF &amp;f) const </arglist>
    </member>
    <member kind="function">
      <type>WRectF</type>
      <name>hv</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>2185a0ad44386c4ce833a35cc11cac89</anchor>
      <arglist>(const WRectF &amp;f) const </arglist>
    </member>
    <member kind="function">
      <type>WRectF</type>
      <name>chartSegmentArea</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>07d00ec7d22d1aeac7e062a312b7831c</anchor>
      <arglist>(WAxis yAxis, int xSegment, int ySegment) const </arglist>
    </member>
    <member kind="enumeration">
      <name>AxisProperty</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>5500dea567dd1a4467fb64f4454d46cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>prepareAxes</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>6562e97aba00b6f0cc840ec597ca30d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderBackground</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>79d2965d652d9a97db2f599d882d4233</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderAxes</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>5b3d602afa722f42b661234210be744c</anchor>
      <arglist>(int properties)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderSeries</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>b9da127a1888d076ad9b448cb366be99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderLegend</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>dda2794cc47b536501060170c3fb2d80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>width</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>f72fa40cd75abef0e0e3f4c2b1274dcc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>height</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>4a8095308e813968f60a0373cfc0a190</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>segmentMargin</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>194a5d8162047cf6a19bd0c80f392d76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>renderAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>92459e4a251935cb05e40c569f95f76a</anchor>
      <arglist>(const WAxis &amp;axis, AxisLocation location, int properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>calcNumBarGroups</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>80d16620055def5cffa7fd059fe75344</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>iterateSeries</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>4a2c1a148f5eb2533beb3372b08b0efe</anchor>
      <arglist>(SeriesIterator *iterator, bool reverseStacked=false)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AxisLocation</type>
      <name>location_</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>fb021b8d5494b208f87024bb77aae491</anchor>
      <arglist>[3]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WChartPalette</name>
    <filename>classWt_1_1Chart_1_1WChartPalette.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WChartPalette</name>
      <anchorfile>classWt_1_1Chart_1_1WChartPalette.html</anchorfile>
      <anchor>72e713c7e44024ebc5044bd2c67a3812</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WBrush</type>
      <name>brush</name>
      <anchorfile>classWt_1_1Chart_1_1WChartPalette.html</anchorfile>
      <anchor>a7e88bb175f4f83b245076150e658e99</anchor>
      <arglist>(int index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WPen</type>
      <name>borderPen</name>
      <anchorfile>classWt_1_1Chart_1_1WChartPalette.html</anchorfile>
      <anchor>770025513b0e83146d54011743950726</anchor>
      <arglist>(int index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WPen</type>
      <name>strokePen</name>
      <anchorfile>classWt_1_1Chart_1_1WChartPalette.html</anchorfile>
      <anchor>b395b91af20d3171c0cbb0abca85d967</anchor>
      <arglist>(int index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WColor</type>
      <name>fontColor</name>
      <anchorfile>classWt_1_1Chart_1_1WChartPalette.html</anchorfile>
      <anchor>4968d1f875e0aedac02d7dbc312d085f</anchor>
      <arglist>(int index) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WDataSeries</name>
    <filename>classWt_1_1Chart_1_1WDataSeries.html</filename>
    <member kind="enumeration">
      <name>CustomFlag</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>edbaa47aea3f854c7940a33052dec4ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CustomPen</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>edbaa47aea3f854c7940a33052dec4ad6682a4dea1b67172b683fc473d59a21f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CustomBrush</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>edbaa47aea3f854c7940a33052dec4add8b3f8ae89163692df6439ae42ceb4ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CustomMarkerPen</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>edbaa47aea3f854c7940a33052dec4adb0122c13d61736ed63c47e3ba3199eb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CustomMarkerBrush</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>edbaa47aea3f854c7940a33052dec4ad7110f833485ba6a00128c88c8d863729</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CustomLabelColor</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>edbaa47aea3f854c7940a33052dec4adb5b6a23ce57cdeae93cb686ddf629068</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDataSeries</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>8942e6e28fc0be6da5c1b90209f1750f</anchor>
      <arglist>(int modelColumn, SeriesType seriesType=PointSeries, Axis axis=Y1Axis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setType</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>8db1e060f64d2b4f44c21f96a071ff38</anchor>
      <arglist>(SeriesType t)</arglist>
    </member>
    <member kind="function">
      <type>SeriesType</type>
      <name>type</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>1a2687abc58a59d5112ab477705262fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModelColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a78e8b438d3b232d2d01afbe1b8be557</anchor>
      <arglist>(int modelColumn)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>modelColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>4879d1bca9363faa4318236cdbcdcca0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStacked</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>14ce75bdb16de5158291f391a0c35f9b</anchor>
      <arglist>(bool stacked)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStacked</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>f130953cbd981398fe5b68014e9b0476</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindToAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>2c7bf4f065a4f2be24603cbdad3f24b6</anchor>
      <arglist>(Axis axis)</arglist>
    </member>
    <member kind="function">
      <type>Axis</type>
      <name>axis</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>fd09e3edfa394f8d777c3dbbb4e4e6bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCustomFlags</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>c5ba6daa9cd36e3b4247ee3b8a4943ba</anchor>
      <arglist>(int customFlags)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>curstomFlags</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a433bad487b27d56b1d267accf87ed04</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPen</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>ac0f9d064024241b16685c196bd04818</anchor>
      <arglist>(const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>WPen</type>
      <name>pen</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>d59f3eab01ec14f6372768a9db40aa72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBrush</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>9271ca3b3f70822ae6582b7e28363b2e</anchor>
      <arglist>(const WBrush &amp;brush)</arglist>
    </member>
    <member kind="function">
      <type>WBrush</type>
      <name>brush</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>10dc0b98acc9e6361a3c1c4acafc1061</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFillRange</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>9b5ea5691c650d567e26b2a7ea762462</anchor>
      <arglist>(FillRangeType fillRange)</arglist>
    </member>
    <member kind="function">
      <type>FillRangeType</type>
      <name>fillRange</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>4f7ef2a2113261b37a2dd90db26734ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMarker</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>c8f4ae7c878df76662d92fd48e57d17d</anchor>
      <arglist>(MarkerType marker)</arglist>
    </member>
    <member kind="function">
      <type>MarkerType</type>
      <name>marker</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>f17f1d512e9fc5b34d5ea798202fcf89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMarkerPen</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>00efc7980ccbf435dadab50f09bbb90c</anchor>
      <arglist>(const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>WPen</type>
      <name>markerPen</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>82205532cfa956c14b2533c179fed581</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMarkerBrush</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>5226ee065d0594b997916fb1f89c9113</anchor>
      <arglist>(const WBrush &amp;brush)</arglist>
    </member>
    <member kind="function">
      <type>WBrush</type>
      <name>markerBrush</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>6aa5f74208d9f16b47cb5d6c912424fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLegendEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>dbddd50fc4ccd1608987900f0231bd50</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLegendEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>6e4373d17cf866dcf565fa32f6ca1f6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabelsEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>0b3425ac94c831ffa6b46bb1fb354f2f</anchor>
      <arglist>(Axis axis, bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLabelsEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>d3ecc17a7626d20fc03e4fa797e40028</anchor>
      <arglist>(Axis axis) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabelColor</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>7d1ed652c7a689ecf3988fb7ee66b2cd</anchor>
      <arglist>(const WColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>WColor</type>
      <name>labelColor</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>828e8486bc8cfd79523dd65286b7db34</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WPieChart</name>
    <filename>classWt_1_1Chart_1_1WPieChart.html</filename>
    <base>Wt::Chart::WAbstractChart</base>
    <member kind="function">
      <type></type>
      <name>WPieChart</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>fec3ff85d3997e588acadbc2b844943a</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabelsColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a40bfd3f2095106f8081596b235de4c6</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>labelsColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>9029c0a18c84558da2b36089dfb7fa3d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDataColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>3692ea22a1417e599e9358b0ed5a723d</anchor>
      <arglist>(int modelColumn)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dataColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>5d88b01950313351cfb38821d8c8bc2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBrush</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>f0fc06d47e2b717f1faeae80926d068c</anchor>
      <arglist>(int modelRow, const WBrush &amp;brush)</arglist>
    </member>
    <member kind="function">
      <type>WBrush</type>
      <name>brush</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>6063464c0a664943d747b344e8383b5c</anchor>
      <arglist>(int modelRow) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExplode</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>4a2bfe0c147b5433d340d49351b5032c</anchor>
      <arglist>(int modelRow, double factor)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>explode</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>e4873101c6d49b858e665f88182b0361</anchor>
      <arglist>(int modelRow) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPerspectiveEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>e36d57f4c2801cb8599a1bc99e340a24</anchor>
      <arglist>(bool enabled, double height=1.0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPerspectiveEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>448d52119f7422ec0893261980e7e880</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStartAngle</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>407707a2ab0b2c56500e35da85e619a5</anchor>
      <arglist>(double degrees)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>startAngle</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>f2d62e836a60f28755218921fc0e4b90</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDisplayLabels</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>af23ce27e726b3ef293b3c56796200e2</anchor>
      <arglist>(int options)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>displayLabels</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>5304b7f04a00402d5b7f7f7af3ac1a6e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>paint</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>3929b0fc7d0b71f06809207b3d34df08</anchor>
      <arglist>(WPainter &amp;painter, const WRectF &amp;rectangle=WRectF()) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>paintEvent</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>b1653eea26f873b295a7350bd0dbb9ac</anchor>
      <arglist>(Wt::WPaintDevice *paintDevice)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>modelChanged</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>9d29685403eb2948a01acbda7787ad5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>modelColumnsInserted</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>2e84917071b1a77361375713e424c2d8</anchor>
      <arglist>(const WModelIndex &amp;parent, int start, int end)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>modelColumnsRemoved</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>8c7417d6962e60c3d18da332a67149ba</anchor>
      <arglist>(const WModelIndex &amp;parent, int start, int end)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>modelRowsInserted</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>7d189d82d85c24be23bac4d8ab21223a</anchor>
      <arglist>(const WModelIndex &amp;parent, int start, int end)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>modelRowsRemoved</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>8c9668712e4b19567a3959227ae0f8ae</anchor>
      <arglist>(const WModelIndex &amp;parent, int start, int end)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>modelDataChanged</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>bf017e24778b35d2e5d4d1054147ed8b</anchor>
      <arglist>(const WModelIndex &amp;topLeft, const WModelIndex &amp;bottomRight)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WStandardPalette</name>
    <filename>classWt_1_1Chart_1_1WStandardPalette.html</filename>
    <base>Wt::Chart::WChartPalette</base>
    <member kind="enumeration">
      <name>Flavour</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>8df0df93e58ff3fb70f81139d3d6cec4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Neutral</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>8df0df93e58ff3fb70f81139d3d6cec45132fbb2958a6f5423a545381f7b8b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bold</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>8df0df93e58ff3fb70f81139d3d6cec4e7f2bdf0cd049e37a3f73bba52d89945</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Muted</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>8df0df93e58ff3fb70f81139d3d6cec483909df5d484323e196ad6cbaeb821b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GrayScale</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>8df0df93e58ff3fb70f81139d3d6cec4b5cd5ed83bb92e9c04fd0f9d513d6af0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WStandardPalette</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>c0b5421fc3e23365f594b3758fc33efd</anchor>
      <arglist>(Flavour flavour)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WBrush</type>
      <name>brush</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>43791f6f18e2986809d9ae8f062fc76e</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WPen</type>
      <name>borderPen</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>94ea33302229bc7ae115567ffb9acee4</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WPen</type>
      <name>strokePen</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>e8465be7c23762aef801707a48df862e</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WColor</type>
      <name>fontColor</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>980f085213550e9ae1365416cd385061</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WColor</type>
      <name>color</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>76c4792de71f8a155a5108a7460b7caa</anchor>
      <arglist>(int index) const </arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Wt::Ext</name>
    <filename>namespaceWt_1_1Ext.html</filename>
    <class kind="class">Wt::Ext::AbstractButton</class>
    <class kind="class">Wt::Ext::AbstractToggleButton</class>
    <class kind="class">Wt::Ext::Button</class>
    <class kind="class">Wt::Ext::Calendar</class>
    <class kind="class">Wt::Ext::CheckBox</class>
    <class kind="class">Wt::Ext::ComboBox</class>
    <class kind="class">Wt::Ext::Component</class>
    <class kind="class">Wt::Ext::Container</class>
    <class kind="class">Wt::Ext::DataStore</class>
    <class kind="class">Wt::Ext::DateField</class>
    <class kind="class">Wt::Ext::Dialog</class>
    <class kind="class">Wt::Ext::FormField</class>
    <class kind="class">Wt::Ext::LineEdit</class>
    <class kind="class">Wt::Ext::Menu</class>
    <class kind="class">Wt::Ext::MenuItem</class>
    <class kind="class">Wt::Ext::MessageBox</class>
    <class kind="class">Wt::Ext::NumberField</class>
    <class kind="class">Wt::Ext::PagingToolBar</class>
    <class kind="class">Wt::Ext::Panel</class>
    <class kind="class">Wt::Ext::ProgressDialog</class>
    <class kind="class">Wt::Ext::RadioButton</class>
    <class kind="class">Wt::Ext::Splitter</class>
    <class kind="class">Wt::Ext::SplitterHandle</class>
    <class kind="class">Wt::Ext::TableView</class>
    <class kind="class">Wt::Ext::TabWidget</class>
    <class kind="class">Wt::Ext::TextEdit</class>
    <class kind="class">Wt::Ext::ToolBar</class>
    <class kind="class">Wt::Ext::ToolTipConfig</class>
    <class kind="class">Wt::Ext::Widget</class>
    <member kind="enumeration">
      <name>DataLocation</name>
      <anchorfile>group__ext.html</anchorfile>
      <anchor>g5bc908c6e6aa90646cca1276d68cb2b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ClientSide</name>
      <anchorfile>group__ext.html</anchorfile>
      <anchor>gg5bc908c6e6aa90646cca1276d68cb2b219099959db2ef813b3d1a1e2f3e04675</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ServerSide</name>
      <anchorfile>group__ext.html</anchorfile>
      <anchor>gg5bc908c6e6aa90646cca1276d68cb2b21ae210985e4d5795a6aa21ed8871dfe7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::AbstractButton</name>
    <filename>classWt_1_1Ext_1_1AbstractButton.html</filename>
    <base>Wt::Ext::Component</base>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractButton.html</anchorfile>
      <anchor>e4a53837bb690bc1426a8b8da336bcea</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractButton.html</anchorfile>
      <anchor>7adfdba80922236853b08502a4881a72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractButton.html</anchorfile>
      <anchor>b484de8e4b543aa36ef5bfd1c8b70548</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>icon</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractButton.html</anchorfile>
      <anchor>a3b00f75eba7eb933b3cd809746cb8a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCheckable</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractButton.html</anchorfile>
      <anchor>fe7d30546234065316df73026558fc79</anchor>
      <arglist>(bool how)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCheckable</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractButton.html</anchorfile>
      <anchor>3fa242a4f266453da5ef8112cadc59e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMenu</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractButton.html</anchorfile>
      <anchor>adbc30ae480d99a6e4ca19a070e02d81</anchor>
      <arglist>(Menu *menu)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChecked</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractButton.html</anchorfile>
      <anchor>79b1606d4b674dc13c5e92239be85700</anchor>
      <arglist>(bool how)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isChecked</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractButton.html</anchorfile>
      <anchor>a637f0902da104ab323131cb237c3556</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>configureToolTip</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractButton.html</anchorfile>
      <anchor>fc7e2bc9c426bbbfb9beb9e18e9a0845</anchor>
      <arglist>(ToolTipConfig *config)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractButton.html</anchorfile>
      <anchor>2cab98fae87f87209c9999e086253fb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>JSignal</type>
      <name>activated</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractButton.html</anchorfile>
      <anchor>6da6a45be1a6778090f099d552709fbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>JSignal&lt; bool &gt;</type>
      <name>toggled</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractButton.html</anchorfile>
      <anchor>e5acb743ccaed757eb733b0c5fbcdae3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::AbstractToggleButton</name>
    <filename>classWt_1_1Ext_1_1AbstractToggleButton.html</filename>
    <base>Wt::Ext::FormField</base>
    <member kind="slot">
      <type>void</type>
      <name>setChecked</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractToggleButton.html</anchorfile>
      <anchor>9132c42402232810427d96d700e4cc61</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual void</type>
      <name>setChecked</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractToggleButton.html</anchorfile>
      <anchor>9aa7198153fcca043f267d337fcfd168</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual void</type>
      <name>setUnChecked</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractToggleButton.html</anchorfile>
      <anchor>56f4470889ff56155dc6598751eef47e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractToggleButton.html</anchorfile>
      <anchor>73635f45799c76d017c4924cb133997f</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString</type>
      <name>text</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractToggleButton.html</anchorfile>
      <anchor>a0b4bbe46c7ee9a61267016a3530d136</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isChecked</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractToggleButton.html</anchorfile>
      <anchor>32fe2a8e20c828f15f08440bae17ef4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; void &gt;</type>
      <name>checked</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractToggleButton.html</anchorfile>
      <anchor>4eac9f260d18e1b8609b4b690051e3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; void &gt;</type>
      <name>unChecked</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractToggleButton.html</anchorfile>
      <anchor>6c251a449d1b2383b811a37c364ee931</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::Button</name>
    <filename>classWt_1_1Ext_1_1Button.html</filename>
    <base>Wt::Ext::AbstractButton</base>
    <member kind="function">
      <type></type>
      <name>Button</name>
      <anchorfile>classWt_1_1Ext_1_1Button.html</anchorfile>
      <anchor>a65a7bd6f3f9ad2be15d7553fb41e786</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Button</name>
      <anchorfile>classWt_1_1Ext_1_1Button.html</anchorfile>
      <anchor>0f31acbe76188e841e5e132f8111f725</anchor>
      <arglist>(const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Button</name>
      <anchorfile>classWt_1_1Ext_1_1Button.html</anchorfile>
      <anchor>6f3cc145f4a8eedd7f65532187836586</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefault</name>
      <anchorfile>classWt_1_1Ext_1_1Button.html</anchorfile>
      <anchor>2ed225799c373580940b99312bfa0b79</anchor>
      <arglist>(bool how)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDefault</name>
      <anchorfile>classWt_1_1Ext_1_1Button.html</anchorfile>
      <anchor>ba951a81109feb3fcf1823e0dd8d8fcd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>JSignal &amp;</type>
      <name>clicked</name>
      <anchorfile>classWt_1_1Ext_1_1Button.html</anchorfile>
      <anchor>8aeb312e3914f7d74b3e947542d35f97</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::Calendar</name>
    <filename>classWt_1_1Ext_1_1Calendar.html</filename>
    <base>Wt::Ext::Component</base>
    <member kind="function">
      <type></type>
      <name>Calendar</name>
      <anchorfile>classWt_1_1Ext_1_1Calendar.html</anchorfile>
      <anchor>2d4f71ffe544bb03fc5851b2c3b371bb</anchor>
      <arglist>(bool i18n=false, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classWt_1_1Ext_1_1Calendar.html</anchorfile>
      <anchor>a9100d67bf50b81ee6ce1313b4d5b216</anchor>
      <arglist>(const WDate &amp;date)</arglist>
    </member>
    <member kind="function">
      <type>const std::set&lt; WDate &gt; &amp;</type>
      <name>selection</name>
      <anchorfile>classWt_1_1Ext_1_1Calendar.html</anchorfile>
      <anchor>8dc46727fc4d990f101b47adf52c67b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; void &gt;</type>
      <name>selectionChanged</name>
      <anchorfile>classWt_1_1Ext_1_1Calendar.html</anchorfile>
      <anchor>2c0013d6b2343e1b08ebf5b03895c451</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; void &gt;</type>
      <name>selected</name>
      <anchorfile>classWt_1_1Ext_1_1Calendar.html</anchorfile>
      <anchor>a0cf75c5cadd8e1655e3be386472ba70</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::CheckBox</name>
    <filename>classWt_1_1Ext_1_1CheckBox.html</filename>
    <base>Wt::Ext::AbstractToggleButton</base>
    <member kind="function">
      <type></type>
      <name>CheckBox</name>
      <anchorfile>classWt_1_1Ext_1_1CheckBox.html</anchorfile>
      <anchor>bef8e54213398a637d8e68e70902ec44</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CheckBox</name>
      <anchorfile>classWt_1_1Ext_1_1CheckBox.html</anchorfile>
      <anchor>a9e44e6317783b036b6a14307da692f3</anchor>
      <arglist>(const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::ComboBox</name>
    <filename>classWt_1_1Ext_1_1ComboBox.html</filename>
    <base>Wt::Ext::LineEdit</base>
    <member kind="slot">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>f91ec32bf3c21c1ccb34d0cd4ad5f8bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ComboBox</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>8183ecd2ee82149a57121dc6cce94538</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>282ddb37ddc6d8606e2385a742a60452</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>388ebac95d30babbd8cc494837932587</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentIndex</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>abc76822524dbe503909472ea2aac8db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertItem</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>6e9f541c754551c1ecbcdeb9337ecfb3</anchor>
      <arglist>(int index, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeItem</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>b17f27bcbd7d93db4f0147699bbdb5a0</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentIndex</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>1c9f4f4be0dd147954e8b21931511cdd</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setItemText</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>808bf7caa59a88c172124fe73090a964</anchor>
      <arglist>(int index, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString</type>
      <name>currentText</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>a0a811e97424b7980f4da77c3711c72a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const WString</type>
      <name>itemText</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>59faa0b8b2cb3a2b25a4b47eb82ecb8b</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModel</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>54d18b5dde4bd46b830c2b2ecd6d0765</anchor>
      <arglist>(WAbstractItemModel *model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModelColumn</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>46e2c9ac50d405d5e4ad8215ce5bb885</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEditable</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>0c150137b5ad059ba66ee8f0b85b3585</anchor>
      <arglist>(bool how)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setQueryDelay</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>8310599aaa5efc0ae08cf9323f321a7f</anchor>
      <arglist>(int milliSeconds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinQueryLength</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>181b1185f0ae607c61c62e900cbe479c</anchor>
      <arglist>(int numChars)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPageSize</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>7e723bcbf36890f51805d8c373198ded</anchor>
      <arglist>(int pageSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDataLocation</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>8cbea60f93ad91387200a3e49e33eaf0</anchor>
      <arglist>(DataLocation dataLocation)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>48b20b2d00b523a28e2c1bd0a1a9bfcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>JSignal&lt; int &gt;</type>
      <name>activated</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>be970fe1ed05c1a2f5285a68a4e9b7bd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::Component</name>
    <filename>classWt_1_1Ext_1_1Component.html</filename>
    <base>Wt::Ext::Widget</base>
    <member kind="function">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classWt_1_1Ext_1_1Component.html</anchorfile>
      <anchor>c561b86893de33ed03c6f3874b500722</anchor>
      <arglist>(bool how)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchorfile>classWt_1_1Ext_1_1Component.html</anchorfile>
      <anchor>9f1bbc312ef663d05191b777f1bc9052</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disable</name>
      <anchorfile>classWt_1_1Ext_1_1Component.html</anchorfile>
      <anchor>70cd13699ca9e39c41b774b77d8c0c3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabled</name>
      <anchorfile>classWt_1_1Ext_1_1Component.html</anchorfile>
      <anchor>04b4d592da0721773de0bf6740c6d1de</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::Container</name>
    <filename>classWt_1_1Ext_1_1Container.html</filename>
    <base>Wt::Ext::Component</base>
    <member kind="function">
      <type></type>
      <name>Container</name>
      <anchorfile>classWt_1_1Ext_1_1Container.html</anchorfile>
      <anchor>b45339fc546e1e596af9585c0c375060</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Container</name>
      <anchorfile>classWt_1_1Ext_1_1Container.html</anchorfile>
      <anchor>bdcc8cc41922ea2b4d42e57a97d189e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLayout</name>
      <anchorfile>classWt_1_1Ext_1_1Container.html</anchorfile>
      <anchor>0707be012bd5e627e6c9d7e2b6f98afe</anchor>
      <arglist>(WLayout *layout)</arglist>
    </member>
    <member kind="function">
      <type>WLayout *</type>
      <name>layout</name>
      <anchorfile>classWt_1_1Ext_1_1Container.html</anchorfile>
      <anchor>e479ebb74773cb1f4efcc7b28806e285</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::DataStore</name>
    <filename>classWt_1_1Ext_1_1DataStore.html</filename>
    <base>Wt::WResource</base>
    <member kind="function">
      <type></type>
      <name>DataStore</name>
      <anchorfile>classWt_1_1Ext_1_1DataStore.html</anchorfile>
      <anchor>9d88086e22ca1f48b8378494fe9222f9</anchor>
      <arglist>(WAbstractItemModel *model, DataLocation dataLocation, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addColumn</name>
      <anchorfile>classWt_1_1Ext_1_1DataStore.html</anchorfile>
      <anchor>6fbd9be0f07bc864bc2921769d64a51e</anchor>
      <arglist>(int columnIndex, const std::string &amp;jsonName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilterColumn</name>
      <anchorfile>classWt_1_1Ext_1_1DataStore.html</anchorfile>
      <anchor>d4e923221657f57281d76c02b3a4d803</anchor>
      <arglist>(int columnIndex)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const std::string</type>
      <name>resourceMimeType</name>
      <anchorfile>classWt_1_1Ext_1_1DataStore.html</anchorfile>
      <anchor>066194bb5374a3cefce425801548e08f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::DateField</name>
    <filename>classWt_1_1Ext_1_1DateField.html</filename>
    <base>Wt::Ext::LineEdit</base>
    <member kind="function">
      <type></type>
      <name>DateField</name>
      <anchorfile>classWt_1_1Ext_1_1DateField.html</anchorfile>
      <anchor>c259dff707f9ada0bbe209567ad25d84</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFormat</name>
      <anchorfile>classWt_1_1Ext_1_1DateField.html</anchorfile>
      <anchor>baa98fa2fff51505bd086dcedcea1f8b</anchor>
      <arglist>(const WString &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>format</name>
      <anchorfile>classWt_1_1Ext_1_1DateField.html</anchorfile>
      <anchor>f9a05108f7589cda4f503a564a46e3be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDate</name>
      <anchorfile>classWt_1_1Ext_1_1DateField.html</anchorfile>
      <anchor>67e836de556370818508e4f70da5dc41</anchor>
      <arglist>(const WDate &amp;date)</arglist>
    </member>
    <member kind="function">
      <type>WDate</type>
      <name>date</name>
      <anchorfile>classWt_1_1Ext_1_1DateField.html</anchorfile>
      <anchor>590576fafea26af48e5e3a72f8bff4b3</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::Dialog</name>
    <filename>classWt_1_1Ext_1_1Dialog.html</filename>
    <base>Wt::Ext::Panel</base>
    <member kind="enumeration">
      <name>DialogCode</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>173316655f09bbf63e79691b17d3c8d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Rejected</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>173316655f09bbf63e79691b17d3c8d51de44c73e14f7eac0884bc26721b2d30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Accepted</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>173316655f09bbf63e79691b17d3c8d59c3465568e73c4e4fd83021536be4ab0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dialog</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>76a00b2d5493cdb2f5ed7b340b1e3c6d</anchor>
      <arglist>(const WString &amp;windowTitle=WString())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Dialog</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>b2fc4339c9e2d8befafce8a28233f628</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWindowTitle</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>b6a5820f54f9663a592efd112097939a</anchor>
      <arglist>(const WString &amp;windowTitle)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>windowTitle</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>64577792a7c2a48eefc56ff223b9514a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WContainerWidget *</type>
      <name>contents</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>b41ccccc3b96e42da6977829c0161073</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DialogCode</type>
      <name>exec</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>1dbf3f23fde44807110abe3cf43f7944</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>done</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>934c0a3801fda4cac6f6d95c8ea2fa22</anchor>
      <arglist>(DialogCode r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>adf699cc3ecaebd6ae093fa2c0e02fda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reject</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>4db5e6b09bb2faf5501662c518c79fb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DialogCode</type>
      <name>result</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>43bc83386c56a59afc7edbc7253eb6eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>720b01d56ab479fad6b749e27bbd444c</anchor>
      <arglist>(bool hidden)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addButton</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>d9f19a8ff62e3520544f2ea10a7647ce</anchor>
      <arglist>(Button *button)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeButton</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>89e0ff2766151d3f52b9a6d37286a7d4</anchor>
      <arglist>(Button *button)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Button * &gt; &amp;</type>
      <name>buttons</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>9c1b9d1f950294d122f8148ec992c1a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultButton</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>a68ac801a657f8ec69134e15bf5d765d</anchor>
      <arglist>(Button *button)</arglist>
    </member>
    <member kind="function">
      <type>Button *</type>
      <name>defaultButton</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>4ffc5198bd395cf95b92ef769b99f393</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSizeGripEnabled</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>aaba1c432c8803814426daa276708d63</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSizeGripEnabled</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>129cb8e3bd17c0531dd975f13e585a65</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; DialogCode &gt;</type>
      <name>finished</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>faff3636bf1a8f04033b76caf813617c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::FormField</name>
    <filename>classWt_1_1Ext_1_1FormField.html</filename>
    <base>Wt::Ext::Component</base>
    <member kind="enumeration">
      <name>MessageLocation</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>2dc53fb554d2dcbbcb199535ddeed92d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FancyToolTip</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>2dc53fb554d2dcbbcb199535ddeed92d197077fec9c7cdff5b4043913d6f09cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PlainToolTip</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>2dc53fb554d2dcbbcb199535ddeed92d437412fc30c12e23f63dfc1f54a01472</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Below</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>2dc53fb554d2dcbbcb199535ddeed92d1e38a33c74bae6b1ae1a47409317affc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Besides</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>2dc53fb554d2dcbbcb199535ddeed92db45061b8c7da544c9c26d98c119867f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setErrorMessageLocation</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>83bc30d48a0c4b15021d27e6446829ae</anchor>
      <arglist>(MessageLocation location)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValidator</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>c62a3a3fa7d3ae3d3263267a413c5cb4</anchor>
      <arglist>(WValidator *validator)</arglist>
    </member>
    <member kind="function">
      <type>WValidator *</type>
      <name>validator</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>382f034a76e000eb4f8b513382916f08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WValidator::State</type>
      <name>validate</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>1c67b28fef3177ba5e82cac1f5387687</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WLabel *</type>
      <name>label</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>eed85e4a038bb4fd6c339716fb3d3a8e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>0ac56f725de8a68fd7931b9319286485</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>FormField</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>2e98c3cc2edc738a9626ce3f0deef7be</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Wt::WLabel</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>f60df3b331659c426f79d24d991da7ed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::LineEdit</name>
    <filename>classWt_1_1Ext_1_1LineEdit.html</filename>
    <base>Wt::Ext::FormField</base>
    <member kind="enumeration">
      <name>EchoMode</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>c3469352f6a1073ac5015202e6f3e2e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Normal</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>c3469352f6a1073ac5015202e6f3e2e1d095e17353838d86f57d1a7601a57332</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Password</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>c3469352f6a1073ac5015202e6f3e2e1e84e09a5c6446aff5ba5053acb7904b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LineEdit</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>71715b99ff1aba4f38af23e86056e074</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LineEdit</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>e0a247bcb43fd119bfffb29a3b1d7319</anchor>
      <arglist>(const WString &amp;content, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextSize</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>4f47849711e93d6760f86a38eeca418a</anchor>
      <arglist>(int chars)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>textSize</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>b87c5c0f13c068383ffa402863d44e6e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>a0f77652f6a47a27a17bc2d9a46e6fd3</anchor>
      <arglist>(const WString &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>8ba4c9a22661c192bd28b4a28a8ca943</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxLength</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>b17143af0d6fef0467a7a9aead17d091</anchor>
      <arglist>(int length)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maxLength</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>cb99fb14b98c8cd8640deb8706130118</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEchoMode</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>b2ef8ad240cfeda9b5dc5f2ccf6a5fd8</anchor>
      <arglist>(EchoMode echoMode)</arglist>
    </member>
    <member kind="function">
      <type>EchoMode</type>
      <name>echoMode</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>b2d9d91c96ec140d7fdd76b57e37150d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WValidator::State</type>
      <name>validate</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>ee32a5451b7e73568b39215f18d2d98c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyWentDown</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>dd9e8f148ff1ed0344c4d16bfc3cc233</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyPressed</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>9d5d0021c3fd12eaa745e226311076d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyWentUp</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>499efba0447cb8d47a4d99562bc6c096</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::Menu</name>
    <filename>classWt_1_1Ext_1_1Menu.html</filename>
    <base>Wt::Ext::Widget</base>
    <member kind="function">
      <type></type>
      <name>Menu</name>
      <anchorfile>classWt_1_1Ext_1_1Menu.html</anchorfile>
      <anchor>9833d8fa63f51601d71ef0af0f16a219</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MenuItem *</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1Ext_1_1Menu.html</anchorfile>
      <anchor>985e64794c5fb23e3ee81f5d6009b6dd</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>MenuItem *</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1Ext_1_1Menu.html</anchorfile>
      <anchor>0f9d979d2015c35a968c95dc681c4197</anchor>
      <arglist>(const std::string &amp;iconPath, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>MenuItem *</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1Ext_1_1Menu.html</anchorfile>
      <anchor>83906015f609ddcd9c2a5798e189f3ae</anchor>
      <arglist>(const WString &amp;text, T *target, void(V::*method)())</arglist>
    </member>
    <member kind="function">
      <type>MenuItem *</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1Ext_1_1Menu.html</anchorfile>
      <anchor>0c4523cd43ebc8c1626ef67dd9dbeef6</anchor>
      <arglist>(const std::string &amp;iconPath, const WString &amp;text, T *target, void(V::*method)())</arglist>
    </member>
    <member kind="function">
      <type>MenuItem *</type>
      <name>addMenu</name>
      <anchorfile>classWt_1_1Ext_1_1Menu.html</anchorfile>
      <anchor>11202776073812bdd6dc1849f917bd78</anchor>
      <arglist>(const WString &amp;text, Menu *menu)</arglist>
    </member>
    <member kind="function">
      <type>MenuItem *</type>
      <name>addMenu</name>
      <anchorfile>classWt_1_1Ext_1_1Menu.html</anchorfile>
      <anchor>e92e182aa488c59865c1fae538ea609b</anchor>
      <arglist>(const std::string &amp;iconPath, const WString &amp;text, Menu *menu)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classWt_1_1Ext_1_1Menu.html</anchorfile>
      <anchor>72f3b8ebd29b14c9b5c6732c524d7e30</anchor>
      <arglist>(MenuItem *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classWt_1_1Ext_1_1Menu.html</anchorfile>
      <anchor>17cde965e914a6a774e1ec202db3786d</anchor>
      <arglist>(WWidget *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSeparator</name>
      <anchorfile>classWt_1_1Ext_1_1Menu.html</anchorfile>
      <anchor>ca9bddc38f80c06383a223c01df79a80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::MenuItem</name>
    <filename>classWt_1_1Ext_1_1MenuItem.html</filename>
    <base>Wt::Ext::AbstractButton</base>
    <member kind="function">
      <type></type>
      <name>MenuItem</name>
      <anchorfile>classWt_1_1Ext_1_1MenuItem.html</anchorfile>
      <anchor>7881281b800bf5e2ab7ad4f1409cfe31</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MenuItem</name>
      <anchorfile>classWt_1_1Ext_1_1MenuItem.html</anchorfile>
      <anchor>e5e37c8c73ef646c21c18560a1a1396c</anchor>
      <arglist>(const std::string &amp;iconPath, const WString &amp;text)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::MessageBox</name>
    <filename>classWt_1_1Ext_1_1MessageBox.html</filename>
    <base>Wt::Ext::Dialog</base>
    <member kind="function">
      <type></type>
      <name>MessageBox</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>6477c87e2b02a742065272a019cacf30</anchor>
      <arglist>(bool i18n=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MessageBox</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>6c4b30c7f72aa2f670675249a316729a</anchor>
      <arglist>(const WString &amp;caption, const WString &amp;text, Icon icon, int buttons, bool i18n=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>c318d28fa19abc4e496b497aea557d39</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>ad99693851dd7c95ddb4ca463e69f5c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>85e914a68d10813bb0624c19eb679ca0</anchor>
      <arglist>(Icon icon)</arglist>
    </member>
    <member kind="function">
      <type>Icon</type>
      <name>icon</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>08dc6e5e7e1dfd07d0fbf41213c8e30e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setButtons</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>348deca020d45c0fb4ac869fb25fb5ac</anchor>
      <arglist>(int buttons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>buttons</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>00480d6c0e3c8ea8b8ad805e20ed8e2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>StandardButton</type>
      <name>result</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>1ca14b375ae42488916e23d97e42d5f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enablePrompt</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>4c551e90aea08438544ddbf2f3197133</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPrompt</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>f6626137daa8af5a4d615bdc8c59f5b9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableTextArea</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>de8dec9c2364c85ed42fc0cdb3bbae53</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasTextArea</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>353ac2d752cc9921505d3a61f495388c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>88fa134817d0afc348df856b7c4236fe</anchor>
      <arglist>(const WString &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>value</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>b1debb3cb5c60e399c396eb0585c4b79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>1886eef5b4b8e903b6f1455f3a864045</anchor>
      <arglist>(bool hidden)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>ba9efcb3903259caa0981f5ecc0cb7cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static StandardButton</type>
      <name>show</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>adea4f39b80782e150790a78fa4c3c96</anchor>
      <arglist>(const WString &amp;caption, const WString &amp;text, int buttons, bool i18n=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static StandardButton</type>
      <name>prompt</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>987211d96f9128716c5dab353a16ad84</anchor>
      <arglist>(const WString &amp;caption, const WString &amp;text, WString &amp;value, bool multiLine=false, bool i18n=false)</arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; StandardButton &gt;</type>
      <name>buttonClicked</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>81a3c39831747ee7ca381d6e09036e60</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::NumberField</name>
    <filename>classWt_1_1Ext_1_1NumberField.html</filename>
    <base>Wt::Ext::LineEdit</base>
    <member kind="function">
      <type></type>
      <name>NumberField</name>
      <anchorfile>classWt_1_1Ext_1_1NumberField.html</anchorfile>
      <anchor>e8ff897bc2b3669a87cc2d87a699ba11</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classWt_1_1Ext_1_1NumberField.html</anchorfile>
      <anchor>d811261baec4e8550b3849b53f984456</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>value</name>
      <anchorfile>classWt_1_1Ext_1_1NumberField.html</anchorfile>
      <anchor>8ea09d6db15fd8938a2cd88daf9ad9f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDecimalPrecision</name>
      <anchorfile>classWt_1_1Ext_1_1NumberField.html</anchorfile>
      <anchor>4bc56ee6f80a561c7424c00185847a3a</anchor>
      <arglist>(int decimals)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>decimalPrecision</name>
      <anchorfile>classWt_1_1Ext_1_1NumberField.html</anchorfile>
      <anchor>623ef7f586b670715df46f411a9315a8</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::PagingToolBar</name>
    <filename>classWt_1_1Ext_1_1PagingToolBar.html</filename>
    <base>Wt::Ext::ToolBar</base>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::Panel</name>
    <filename>classWt_1_1Ext_1_1Panel.html</filename>
    <base>Wt::Ext::Container</base>
    <member kind="function">
      <type></type>
      <name>Panel</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>047d152d0247aca78ec607bb3b665338</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Panel</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>71bf14e814da2118c3859d8d682c7c7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTopToolBar</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>16b203f3b26cc5ffb82e036e6419e60f</anchor>
      <arglist>(ToolBar *toolBar)</arglist>
    </member>
    <member kind="function">
      <type>ToolBar *</type>
      <name>topToolBar</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>618824abfc31c3ddfcff6c550adc88b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBottomToolBar</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>9436b9da7ee336136027fe4914a5a381</anchor>
      <arglist>(ToolBar *bottomBar)</arglist>
    </member>
    <member kind="function">
      <type>ToolBar *</type>
      <name>bottomToolBar</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>20eb46f218c8d2e1ead77fb0f4d1634a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFooterButton</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>ee162a984a883afe8bffbda643159b44</anchor>
      <arglist>(Button *button)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeFooterButton</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>7d66822b2f4dd23165215e9dbd8bb31e</anchor>
      <arglist>(Button *button)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Button * &gt; &amp;</type>
      <name>footerButtons</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>2330c0b1b31990bcc07e8a0aeebcfb4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>46a86bb4a39637b06f0b20a9f915b72c</anchor>
      <arglist>(const WString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>title</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>130b5e84969fc0deb8c4ff28e9f966cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitleBar</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>6675d56afd2546fe05a7e3e2135069f9</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>titleBar</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>df6238554373cecbc791b5476ad07c90</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAnimate</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>8887d2c32b79f119ce2c26cfddfef77c</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>animate</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>f862e9ffba0568ce5d72051996d5b2c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoScrollBars</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>04d48634c116f7d0858918d9a0f63613</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>autoScrollBars</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>89dd67d1143d8116d1d45561f56a0542</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBorder</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>962eb64c3c069812fccc73487a5e2065</anchor>
      <arglist>(bool show)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>border</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>4da431e41b0d23956ff820907d640a06</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCollapsed</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>ddfe3891408758ea3e8c68ad8a41543e</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>collapse</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>2fa2ede9184fa7e2dc90cac51c12e537</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expand</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>ecb0389b8adaaf887538741b368e773c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCollapsed</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>c10c12d39e08cceeaa179bd75464219c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCollapsible</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>85299483077d467a4e4f3baa36cfa758</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCollapsible</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>b5a94a9659c2c08ee32f686a62b59ed9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResizable</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>1f3c32c2bba7c57206d4fa4d1b0f5521</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isResizable</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>2cd9b1e6e2a931d5770a16355ae4d72f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>960a266d0c5427a2786cc45a4b05ffa1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>JSignal</type>
      <name>collapsed</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>18eb3a89dd583a9f3dd084a876714ffa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>JSignal</type>
      <name>expanded</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>0cc42931c369f76ed3f7b95b4d24f5b0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::ProgressDialog</name>
    <filename>classWt_1_1Ext_1_1ProgressDialog.html</filename>
    <base>Wt::Ext::MessageBox</base>
    <member kind="function">
      <type></type>
      <name>ProgressDialog</name>
      <anchorfile>classWt_1_1Ext_1_1ProgressDialog.html</anchorfile>
      <anchor>8dcabafaf4235c88cd7eee441448c615</anchor>
      <arglist>(bool i18n=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProgressDialog</name>
      <anchorfile>classWt_1_1Ext_1_1ProgressDialog.html</anchorfile>
      <anchor>a56cda8b6be0140160ef7f3f0a333358</anchor>
      <arglist>(const WString &amp;text, const WString &amp;cancelButtonText, int minimum, int maximum, bool i18n=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinimum</name>
      <anchorfile>classWt_1_1Ext_1_1ProgressDialog.html</anchorfile>
      <anchor>74d408dba39fce5fe2561218e5775f23</anchor>
      <arglist>(int minimum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>minimum</name>
      <anchorfile>classWt_1_1Ext_1_1ProgressDialog.html</anchorfile>
      <anchor>3e0e589ccd418b358840af358afab74e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximum</name>
      <anchorfile>classWt_1_1Ext_1_1ProgressDialog.html</anchorfile>
      <anchor>ffbc5da9aaeff04433201c1fb0a9c942</anchor>
      <arglist>(int maximum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maximum</name>
      <anchorfile>classWt_1_1Ext_1_1ProgressDialog.html</anchorfile>
      <anchor>8961b393b191d9a52d2e006a80ab3fce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRange</name>
      <anchorfile>classWt_1_1Ext_1_1ProgressDialog.html</anchorfile>
      <anchor>ec47127780061076a85cb867c1669c9b</anchor>
      <arglist>(int minimum, int maximum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancel</name>
      <anchorfile>classWt_1_1Ext_1_1ProgressDialog.html</anchorfile>
      <anchor>5d1e7ade20a3a89b52477ce9846d89c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Ext_1_1ProgressDialog.html</anchorfile>
      <anchor>2c9b02eb5d639ec5d4c1214ad47cc2d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCancelButtonText</name>
      <anchorfile>classWt_1_1Ext_1_1ProgressDialog.html</anchorfile>
      <anchor>9f57021b85bcc1dc7c1e9d820b8999d3</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classWt_1_1Ext_1_1ProgressDialog.html</anchorfile>
      <anchor>002c659c327ab7bab26aaa424daf4e2c</anchor>
      <arglist>(int progress)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>value</name>
      <anchorfile>classWt_1_1Ext_1_1ProgressDialog.html</anchorfile>
      <anchor>ec354c2676e811e2c354ce22f02ef1c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wasCanceled</name>
      <anchorfile>classWt_1_1Ext_1_1ProgressDialog.html</anchorfile>
      <anchor>e728af17b42f24fef38014d2b6cefc97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Signal</type>
      <name>canceled</name>
      <anchorfile>classWt_1_1Ext_1_1ProgressDialog.html</anchorfile>
      <anchor>104df22e66dfdd03111d7a1d61ab86ea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::RadioButton</name>
    <filename>classWt_1_1Ext_1_1RadioButton.html</filename>
    <base>Wt::Ext::AbstractToggleButton</base>
    <member kind="function">
      <type></type>
      <name>RadioButton</name>
      <anchorfile>classWt_1_1Ext_1_1RadioButton.html</anchorfile>
      <anchor>8bab74785dd1cb44aba2964725ad6985</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RadioButton</name>
      <anchorfile>classWt_1_1Ext_1_1RadioButton.html</anchorfile>
      <anchor>204b66ea73579a8f7c62d163139a41ae</anchor>
      <arglist>(const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::Splitter</name>
    <filename>classWt_1_1Ext_1_1Splitter.html</filename>
    <base>Wt::WContainerWidget</base>
    <member kind="function">
      <type></type>
      <name>Splitter</name>
      <anchorfile>classWt_1_1Ext_1_1Splitter.html</anchorfile>
      <anchor>535dfe78024536478b2372a3e9680172</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Splitter</name>
      <anchorfile>classWt_1_1Ext_1_1Splitter.html</anchorfile>
      <anchor>982eb1ec72d98f3c7a1dd1d50b5806c7</anchor>
      <arglist>(Orientation orientation, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOrientation</name>
      <anchorfile>classWt_1_1Ext_1_1Splitter.html</anchorfile>
      <anchor>b2ac583c831b2b4d96d8c47cd59dc051</anchor>
      <arglist>(Orientation orientation)</arglist>
    </member>
    <member kind="function">
      <type>Orientation</type>
      <name>orientation</name>
      <anchorfile>classWt_1_1Ext_1_1Splitter.html</anchorfile>
      <anchor>67e40b48d24dc405ec9873700b8e73ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHandleWidth</name>
      <anchorfile>classWt_1_1Ext_1_1Splitter.html</anchorfile>
      <anchor>d253324efbe507459f1b9753e299e870</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>handleWidth</name>
      <anchorfile>classWt_1_1Ext_1_1Splitter.html</anchorfile>
      <anchor>d15e9a76781f6b9b0f6842d79473310b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SplitterHandle *</type>
      <name>handle</name>
      <anchorfile>classWt_1_1Ext_1_1Splitter.html</anchorfile>
      <anchor>9a1963027cc762d7a6565311ddb74ed1</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1Ext_1_1Splitter.html</anchorfile>
      <anchor>3f776ab5a6c84ebfa1d4896b475fec7a</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insertWidget</name>
      <anchorfile>classWt_1_1Ext_1_1Splitter.html</anchorfile>
      <anchor>4495c1d701edd2181dbc1bf071442363</anchor>
      <arglist>(int index, WWidget *widget)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insertBefore</name>
      <anchorfile>classWt_1_1Ext_1_1Splitter.html</anchorfile>
      <anchor>d156963c4ad3d725e0d8b4bd2969b2f7</anchor>
      <arglist>(WWidget *widget, WWidget *before)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WWidget * &gt; &amp;</type>
      <name>children</name>
      <anchorfile>classWt_1_1Ext_1_1Splitter.html</anchorfile>
      <anchor>88f67b1fa84e213c5e527beff8ed6225</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::SplitterHandle</name>
    <filename>classWt_1_1Ext_1_1SplitterHandle.html</filename>
    <base>Wt::Ext::Widget</base>
    <member kind="function">
      <type>Splitter *</type>
      <name>splitter</name>
      <anchorfile>classWt_1_1Ext_1_1SplitterHandle.html</anchorfile>
      <anchor>c41d0b1d8d008081ff044e1e25cdb497</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::TableView</name>
    <filename>classWt_1_1Ext_1_1TableView.html</filename>
    <base>Wt::Ext::Panel</base>
    <member kind="function">
      <type></type>
      <name>TableView</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>f982555ad58c7e846dbe829f10a5e09b</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModel</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>e749720b6992ecf62a900bbc45a5607d</anchor>
      <arglist>(WAbstractItemModel *model)</arglist>
    </member>
    <member kind="function">
      <type>WAbstractItemModel *</type>
      <name>model</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>a28bbad6fef68f903fed1aa01303c3ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resizeColumnsToContents</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>300cede33cdf30af4f7543de794e72f2</anchor>
      <arglist>(bool onResize=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoExpandColumn</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>88f1de406a741b47533311d249a168dc</anchor>
      <arglist>(int column, int minWidth=50, int maxWidth=1000)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>autoExpandColumn</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>4616220e3e1153b6825e1a7d5cd8b374</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDataLocation</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>11f1507b4db23da74cf54741a4b40b00</anchor>
      <arglist>(DataLocation dataLocation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnsMovable</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>d8527a57c1004097937befe83633d998</anchor>
      <arglist>(bool movable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>columnsMovable</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>ab8ed89a0c658fffad2f3e4cb575450d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlternatingRowColors</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>eca778394c0c4165cb890624e7f26f68</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>alternatingRowColors</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>36e7290ea7fb21f7785ce4825e4c6222</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHighlightMouseOver</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>82aa7b9fd7931c064a85624167777dde</anchor>
      <arglist>(bool highlight)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>highlightMouseOver</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>bbf14ebf04eba309570653f22a6ff22e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnHidden</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>e6f70012b68f37b8acaa16042f805178</anchor>
      <arglist>(int column, bool hide)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isColumnHidden</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>ee2e7e8094023cd8c001b01cf520d7d2</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hideColumn</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>1c9f10b2affca162eca145d624d0f49e</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showColumn</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>6fba01c5bc5bf18b2d28a5ea394292b7</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnWidth</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>0618d71520e5c0c5da46beb30100e634</anchor>
      <arglist>(int column, int pixels)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>columnWidth</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>e3892620e188e2b95cec6af949fa3a07</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnAlignment</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>35ac093ca70b5b1d3abcad445940e551</anchor>
      <arglist>(int column, HorizontalAlignment alignment)</arglist>
    </member>
    <member kind="function">
      <type>HorizontalAlignment</type>
      <name>columnAlignment</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>f7795fcfe190d224f37c36a4917384fd</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnSortable</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>bb2e0f5c6576335c86141183a10029ec</anchor>
      <arglist>(int column, bool sortable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isColumnSortable</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>20d295f97b290e9afb4568e026e4c965</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableColumnHiding</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>cc3f7c2dbae0a063eed5fad7892c77a2</anchor>
      <arglist>(int column, bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isColumnHidingEnabled</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>5b6670edddd105298c67d37167d330fd</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEditor</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>8fce08c9e2b06463377342e03f2970d2</anchor>
      <arglist>(int column, FormField *editor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRenderer</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>cd1c2e98bd5420e398053ab6b6d4e7f0</anchor>
      <arglist>(int column, const std::string &amp;rendererJS)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPageSize</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>9b8be64acea3d9df598fd418d0b0e55a</anchor>
      <arglist>(int pageSize)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pageSize</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>71bcd2818831c21a68202fe4e53552ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ToolBar *</type>
      <name>createPagingToolBar</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>0e09b1cd5b493f577f5a89c4b4916c44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>925ffae0caed4dff0e0bb9da0440e20a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentCell</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>51279c7d091a0060bde4f26845202a33</anchor>
      <arglist>(int row, int column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentRow</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>cedafc837958034d15616eb14992b374</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentColumn</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>e19b1700dbf51bf26f06a14865b2486a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; int &gt; &amp;</type>
      <name>selectedRows</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>0fb09470c5ee23ee95e07fdfda027590</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearSelection</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>6988a1b768e8f0ec59b1a9ea06c6afd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SelectionMode</type>
      <name>selectionMode</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>630019b3fcfdfdb109cb9c89168b554c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectionMode</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>fd0f8697b8f4e3e0a63d6a3bb236e4da</anchor>
      <arglist>(SelectionMode mode)</arglist>
    </member>
    <member kind="function">
      <type>SelectionUnit</type>
      <name>selectionUnit</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>80861d367a18411ac9d7e6710eb18f61</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectionUnit</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>d238499f8890179af248206c1e098f8f</anchor>
      <arglist>(SelectionUnit unit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectionBehavior</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>2cccbab98d2639aea94a041bd144d3aa</anchor>
      <arglist>(SelectionBehavior behavior)</arglist>
    </member>
    <member kind="function">
      <type>SelectionBehavior</type>
      <name>selectionBehavior</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>4eece626861dd19a6b4ec903a46f5062</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>dateRenderer</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>4be5b4bb37a248e695a0b6398abb7e53</anchor>
      <arglist>(const WString &amp;format)</arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; int, int &gt;</type>
      <name>cellClicked</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>a51492189f84baad085fee87f479ce50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; int, int, int, int &gt;</type>
      <name>currentCellChanged</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>985cf8d948cef5a97ff0543b175c2af7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Signal</type>
      <name>itemSelectionChanged</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>10af82d1af071f313a137771f62603be</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::TabWidget</name>
    <filename>classWt_1_1Ext_1_1TabWidget.html</filename>
    <base>Wt::Ext::Panel</base>
    <member kind="function">
      <type></type>
      <name>TabWidget</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>49313cc53c928d22a4c381c0f584a092</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTab</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>11a3c125032c6cbd70b2c5223a06ffd5</anchor>
      <arglist>(WWidget *child, const WString &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTab</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>84f5a17b5f099d3931520be868a7e865</anchor>
      <arglist>(Panel *panel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeTab</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>234bc743a67ec2e6bd0a3b453b57fdfd</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>57d00db0c37712a966bfa77515a3ad5b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Panel *</type>
      <name>panel</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>203b27ce2263bd023e7a3653ebcf9ce4</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>491749c6c4e908dd1a48cce13e06a660</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>fbbb750cb8af68db75c40ceb19420bef</anchor>
      <arglist>(WWidget *widget) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentIndex</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>bcb66b827643e63614a611dce1788f23</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentIndex</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>136b2410445066a014daad3dfd38adf8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentWidget</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>9bf1385e1ce3e1cfc623ce4ad01d586d</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>currentWidget</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>3568aafde3a35c7e70ff0dc720cf00c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabEnabled</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>066ce5aa0bf77b8d2d7a7a923739c447</anchor>
      <arglist>(int index, bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTabEnabled</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>b5bbadc1deac716888489e1306dad5e5</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabHidden</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>07506a9ca766e111c24dcd5f341a6407</anchor>
      <arglist>(int index, bool hidden)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTabHidden</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>2f76632ba42e876878e066ee88098eda</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabText</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>72fa2a9c84fd5fbab716b66250a24612</anchor>
      <arglist>(int index, const WString &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>tabText</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>912419147b58c95782ab308c162827a2</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabToolTip</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>f68ca221117e897ca1e021b32315ce6f</anchor>
      <arglist>(int index, const WString &amp;tip)</arglist>
    </member>
    <member kind="function">
      <type>const WString</type>
      <name>tabToolTip</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>ecb111036cf8ee9c6aa2d2870a6d6743</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>030f39b4e70def47d3379bdd505aa5e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Signal&lt; int &gt;</type>
      <name>currentChanged</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>f7937c877a88b8ab0ba8a4ff1fede3f9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::TextEdit</name>
    <filename>classWt_1_1Ext_1_1TextEdit.html</filename>
    <base>Wt::Ext::FormField</base>
    <member kind="function">
      <type></type>
      <name>TextEdit</name>
      <anchorfile>classWt_1_1Ext_1_1TextEdit.html</anchorfile>
      <anchor>df9ef68f84862d0fd808579ac6a906c0</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextEdit</name>
      <anchorfile>classWt_1_1Ext_1_1TextEdit.html</anchorfile>
      <anchor>efcf4176730025e4f9e32422f168b516</anchor>
      <arglist>(const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1Ext_1_1TextEdit.html</anchorfile>
      <anchor>e9dfae7a11e100a9ee568bcba8c005ee</anchor>
      <arglist>(const WString &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1Ext_1_1TextEdit.html</anchorfile>
      <anchor>c36dc63a4e978e2b57ba62b76053bb52</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinkDefault</name>
      <anchorfile>classWt_1_1Ext_1_1TextEdit.html</anchorfile>
      <anchor>5343edc5d04bc51ab904ee202570a185</anchor>
      <arglist>(const WString &amp;text, const WString &amp;location)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnableAlignments</name>
      <anchorfile>classWt_1_1Ext_1_1TextEdit.html</anchorfile>
      <anchor>19870edbfe95e90c0817790813f1dcc3</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnableColors</name>
      <anchorfile>classWt_1_1Ext_1_1TextEdit.html</anchorfile>
      <anchor>0aabef1ee733ba8a5d02e40b09af47f7</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnableFont</name>
      <anchorfile>classWt_1_1Ext_1_1TextEdit.html</anchorfile>
      <anchor>30305f468671ffc230c38b40f46b02cb</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnableFormat</name>
      <anchorfile>classWt_1_1Ext_1_1TextEdit.html</anchorfile>
      <anchor>4102bee7b0c4793f0d6e4dfe32a15432</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnableLinks</name>
      <anchorfile>classWt_1_1Ext_1_1TextEdit.html</anchorfile>
      <anchor>9f10568be040eb2f20126f1e348dc964</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnableLists</name>
      <anchorfile>classWt_1_1Ext_1_1TextEdit.html</anchorfile>
      <anchor>5fe4e9f80d420a98bff6b36557f1b1b0</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnableSourceEdit</name>
      <anchorfile>classWt_1_1Ext_1_1TextEdit.html</anchorfile>
      <anchor>e222f0186821a315f9f9803114577c9a</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1Ext_1_1TextEdit.html</anchorfile>
      <anchor>d558bceb9ebca8c1ef8c937ce92786e9</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WValidator::State</type>
      <name>validate</name>
      <anchorfile>classWt_1_1Ext_1_1TextEdit.html</anchorfile>
      <anchor>e8e02fd395eb356981781a46e3ddac67</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::ToolBar</name>
    <filename>classWt_1_1Ext_1_1ToolBar.html</filename>
    <base>Wt::Ext::Widget</base>
    <member kind="function">
      <type></type>
      <name>ToolBar</name>
      <anchorfile>classWt_1_1Ext_1_1ToolBar.html</anchorfile>
      <anchor>2f92bf512fd660fecdb404ac7b6ff860</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>Button *</type>
      <name>addButton</name>
      <anchorfile>classWt_1_1Ext_1_1ToolBar.html</anchorfile>
      <anchor>a0384abdeff4e404676bfbd872599d48</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Button *</type>
      <name>addButton</name>
      <anchorfile>classWt_1_1Ext_1_1ToolBar.html</anchorfile>
      <anchor>dc62d49915efdcce46836052d1c4ceb6</anchor>
      <arglist>(const std::string &amp;iconPath, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Button *</type>
      <name>addButton</name>
      <anchorfile>classWt_1_1Ext_1_1ToolBar.html</anchorfile>
      <anchor>b0b26e4417df169385f1ec0ee9484bc8</anchor>
      <arglist>(const WString &amp;text, T *target, void(V::*method)())</arglist>
    </member>
    <member kind="function">
      <type>Button *</type>
      <name>addButton</name>
      <anchorfile>classWt_1_1Ext_1_1ToolBar.html</anchorfile>
      <anchor>582fa415aca609419df7a9db342299de</anchor>
      <arglist>(const std::string &amp;iconPath, const WString &amp;text, T *target, void(V::*method)())</arglist>
    </member>
    <member kind="function">
      <type>Button *</type>
      <name>addButton</name>
      <anchorfile>classWt_1_1Ext_1_1ToolBar.html</anchorfile>
      <anchor>03381960ed0efbc33e8a948b624b5edb</anchor>
      <arglist>(const WString &amp;text, Menu *menu)</arglist>
    </member>
    <member kind="function">
      <type>Button *</type>
      <name>addButton</name>
      <anchorfile>classWt_1_1Ext_1_1ToolBar.html</anchorfile>
      <anchor>53403001a2f4a283e75290589631205e</anchor>
      <arglist>(const std::string &amp;iconPath, const WString &amp;text, Menu *menu)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classWt_1_1Ext_1_1ToolBar.html</anchorfile>
      <anchor>2574961d85b1308658444369c395b4f2</anchor>
      <arglist>(Button *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classWt_1_1Ext_1_1ToolBar.html</anchorfile>
      <anchor>a7c3e74b0940f99d24a55b17c165a71f</anchor>
      <arglist>(WWidget *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSeparator</name>
      <anchorfile>classWt_1_1Ext_1_1ToolBar.html</anchorfile>
      <anchor>1b7ed20a6d1f445df529df64aa0e0e8f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::ToolTipConfig</name>
    <filename>classWt_1_1Ext_1_1ToolTipConfig.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type></type>
      <name>ToolTipConfig</name>
      <anchorfile>classWt_1_1Ext_1_1ToolTipConfig.html</anchorfile>
      <anchor>60a4ade15a8da2d01661594cbb225fff</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>autoDismiss</name>
      <anchorfile>classWt_1_1Ext_1_1ToolTipConfig.html</anchorfile>
      <anchor>9444db3004fa2947e1b603d78c66c116</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>autoHide</name>
      <anchorfile>classWt_1_1Ext_1_1ToolTipConfig.html</anchorfile>
      <anchor>b994b2f02febf0d04c562d44162aa6b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dismissDelay</name>
      <anchorfile>classWt_1_1Ext_1_1ToolTipConfig.html</anchorfile>
      <anchor>8372920aabcefb2733e00ecab5c75ef3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>hideDelay</name>
      <anchorfile>classWt_1_1Ext_1_1ToolTipConfig.html</anchorfile>
      <anchor>46688d3b3188aba95d3eb5ff1cd0bd32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>showDelay</name>
      <anchorfile>classWt_1_1Ext_1_1ToolTipConfig.html</anchorfile>
      <anchor>13105c4b727e4d72dec31a5009e0b53c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>animate</name>
      <anchorfile>classWt_1_1Ext_1_1ToolTipConfig.html</anchorfile>
      <anchor>344f9b39975b03df7cbcbc1b652e2d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>hideOnClick</name>
      <anchorfile>classWt_1_1Ext_1_1ToolTipConfig.html</anchorfile>
      <anchor>0574169d747b7f6f19691a3e287fece4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxWidth</name>
      <anchorfile>classWt_1_1Ext_1_1ToolTipConfig.html</anchorfile>
      <anchor>b1e8b83b5355ff790de358c47dc896b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>minWidth</name>
      <anchorfile>classWt_1_1Ext_1_1ToolTipConfig.html</anchorfile>
      <anchor>66a3dc5922a0ead7c0a8740e7d4ffd95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>trackMouse</name>
      <anchorfile>classWt_1_1Ext_1_1ToolTipConfig.html</anchorfile>
      <anchor>2ff0b5a2797dd3d2598dd582ebc75d51</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::Widget</name>
    <filename>classWt_1_1Ext_1_1Widget.html</filename>
    <base>Wt::WWebWidget</base>
    <member kind="function">
      <type></type>
      <name>~Widget</name>
      <anchorfile>classWt_1_1Ext_1_1Widget.html</anchorfile>
      <anchor>6156640ace2e219ed459461a755a7860</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1Ext_1_1Widget.html</anchorfile>
      <anchor>3102617fe37dd91e053317f268aa2f63</anchor>
      <arglist>(bool how)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Wt::Sha1</name>
    <filename>namespaceWt_1_1Sha1.html</filename>
    <member kind="typedef">
      <type>boost::array&lt; unsigned char, 20 &gt;</type>
      <name>Digest</name>
      <anchorfile>namespaceWt_1_1Sha1.html</anchorfile>
      <anchor>6879f9ce2c3b9656d23b8dbb54a61a80</anchor>
      <arglist></arglist>
    </member>
  </compound>
</tagfile>
